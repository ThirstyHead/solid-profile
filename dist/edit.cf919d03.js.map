{"mappings":"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","sources":["node_modules/@inrupt/solid-client/dist/index.es.js","node_modules/http-link-header/lib/link.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/@rdfjs/data-model/index.js","node_modules/@rdfjs/data-model/lib/DataFactory.js","node_modules/@rdfjs/data-model/lib/BlankNode.js","node_modules/@rdfjs/data-model/lib/DefaultGraph.js","node_modules/@rdfjs/data-model/lib/fromTerm.js","node_modules/@rdfjs/data-model/lib/Literal.js","node_modules/@rdfjs/data-model/lib/NamedNode.js","node_modules/@rdfjs/data-model/lib/Quad.js","node_modules/@rdfjs/data-model/lib/Variable.js","node_modules/@rdfjs/dataset/index.js","node_modules/@rdfjs/dataset/DatasetCore.js","node_modules/jsonld/lib/jsonld.js","node_modules/rdf-canonize/index.js","node_modules/rdf-canonize/lib/index.js","node_modules/rdf-canonize/lib/URDNA2015.js","node_modules/rdf-canonize/lib/IdentifierIssuer.js","node_modules/rdf-canonize/lib/MessageDigest-browser.js","node_modules/setimmediate/setImmediate.js","node_modules/process/browser.js","node_modules/rdf-canonize/lib/Permuter.js","node_modules/rdf-canonize/lib/NQuads.js","node_modules/rdf-canonize/lib/URGNA2012.js","node_modules/rdf-canonize/lib/URDNA2015Sync.js","node_modules/rdf-canonize/lib/URGNA2012Sync.js","node_modules/jsonld/lib/platform-browser.js","node_modules/jsonld/lib/documentLoaders/xhr.js","node_modules/jsonld/lib/util.js","node_modules/jsonld/lib/graphTypes.js","node_modules/jsonld/lib/types.js","node_modules/jsonld/lib/JsonLdError.js","node_modules/jsonld/lib/constants.js","node_modules/jsonld/lib/RequestQueue.js","node_modules/jsonld/lib/url.js","node_modules/jsonld/lib/ContextResolver.js","node_modules/jsonld/lib/ResolvedContext.js","node_modules/lru-cache/index.js","node_modules/yallist/yallist.js","node_modules/yallist/iterator.js","node_modules/jsonld/lib/NQuads.js","node_modules/jsonld/lib/expand.js","node_modules/jsonld/lib/context.js","node_modules/jsonld/lib/flatten.js","node_modules/jsonld/lib/nodeMap.js","node_modules/jsonld/lib/fromRdf.js","node_modules/jsonld/lib/toRdf.js","node_modules/canonicalize/lib/canonicalize.js","node_modules/jsonld/lib/frame.js","node_modules/jsonld/lib/compact.js","node_modules/jsonld/lib/JsonLdProcessor.js","node_modules/n3/src/index.js","node_modules/n3/src/N3Lexer.js","node_modules/n3/src/IRIs.js","node_modules/queue-microtask/index.js","node_modules/n3/src/N3Parser.js","node_modules/n3/src/N3DataFactory.js","node_modules/n3/src/N3Util.js","node_modules/n3/src/N3Writer.js","node_modules/n3/src/N3Store.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/events/events.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/readable-stream/lib/internal/streams/state.js","node_modules/readable-stream/errors-browser.js","node_modules/inherits/inherits_browser.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/util-deprecate/browser.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/safe-buffer/index.js","node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/n3/src/N3StreamParser.js","node_modules/n3/src/N3StreamWriter.js","node_modules/cross-fetch/dist/browser-ponyfill.js"],"sourcesContent":["import LinkHeader from 'http-link-header';\nimport RdfJsDataFactory from '@rdfjs/data-model';\nimport rdfJsDatasetModule from '@rdfjs/dataset';\nimport * as jsonld from 'jsonld';\nimport { Parser, Writer, NamedNode } from 'n3';\nimport * as crossFetch from 'cross-fetch';\nimport { fetch as fetch$1 } from 'cross-fetch';\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Verify whether a given SolidDataset includes metadata about where it was sent to.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\r\n * @returns True if `dataset` includes metadata about the Resource it was sent to, false if not.\r\n * @since 0.2.0\r\n */\r\nfunction hasResourceInfo(resource) {\r\n    const potentialResourceInfo = resource;\r\n    return (typeof potentialResourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo === \"object\");\r\n}\r\n/**\r\n * Verify whether a given SolidDataset includes metadata about where it was retrieved from.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\r\n * @returns True if `dataset` includes metadata about the Resource it was retrieved from, false if not.\r\n * @since 0.6.0\r\n */\r\nfunction hasServerResourceInfo(resource) {\r\n    const potentialResourceInfo = resource;\r\n    return (typeof potentialResourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo.linkedResources ===\r\n            \"object\");\r\n}\r\n/** @internal */\r\nfunction hasChangelog(dataset) {\r\n    const potentialChangeLog = dataset;\r\n    return (typeof potentialChangeLog.internal_changeLog === \"object\" &&\r\n        Array.isArray(potentialChangeLog.internal_changeLog.additions) &&\r\n        Array.isArray(potentialChangeLog.internal_changeLog.deletions));\r\n}\r\n/**\r\n * Errors thrown by solid-client extend this class, and can thereby be distinguished from errors\r\n * thrown in lower-level libraries.\r\n * @since 1.2.0\r\n */\r\nclass SolidClientError extends Error {\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @internal */\r\nfunction internal_toIriString(iri) {\r\n    return typeof iri === \"string\" ? iri : iri.value;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore Internal fallback for when no fetcher is provided; not to be used downstream.\r\n */\r\nconst fetch = async (resource, init) => {\r\n    /* istanbul ignore if: `require` is always defined in the unit test environment */\r\n    if (typeof window === \"object\" && typeof require !== \"function\") {\r\n        return await window.fetch(resource, init);\r\n    }\r\n    /* istanbul ignore if: `require` is always defined in the unit test environment */\r\n    if (typeof require !== \"function\") {\r\n        // When using Node.js with ES Modules, require is not defined:\r\n        const crossFetchModule = await import('cross-fetch');\r\n        const fetch = crossFetchModule.default;\r\n        return fetch(resource, init);\r\n    }\r\n    // Implementation note: it's up to the client application to resolve these module names to the\r\n    // respective npm packages. At least one commonly used tool (Webpack) is only able to do that if\r\n    // the module names are literal strings.\r\n    // Additionally, Webpack throws a warning in a way that halts compilation for at least Next.js\r\n    // when using native Javascript dynamic imports (`import()`), whereas `require()` just logs a\r\n    // warning. Since the use of package names instead of file names requires a bundles anyway, this\r\n    // should not have any practical consequences. For more background, see:\r\n    // https://github.com/webpack/webpack/issues/7713\r\n    let fetch;\r\n    // Unfortunately solid-client-authn-browser does not support a default session yet.\r\n    // Once it does, we can auto-detect if it is available and use it as follows:\r\n    // try {\r\n    //   fetch = require(\"solid-client-authn-browser\").fetch;\r\n    // } catch (e) {\r\n    // When enabling the above, make sure to add a similar try {...} catch block using `import`\r\n    // statements in the elseif above.\r\n    // eslint-disable-next-line prefer-const\r\n    fetch = require(\"cross-fetch\");\r\n    // }\r\n    return await fetch(resource, init);\r\n};\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @internal\r\n */\r\nfunction internal_parseResourceInfo(response) {\r\n    var _a, _b, _c, _d, _e;\r\n    const contentTypeParts = (_b = (_a = response.headers.get(\"Content-Type\")) === null || _a === void 0 ? void 0 : _a.split(\";\")) !== null && _b !== void 0 ? _b : [];\r\n    // If the server offers a Turtle or JSON-LD serialisation on its own accord,\r\n    // that tells us whether it is RDF data that the server can understand\r\n    // (and hence can be updated with a PATCH request with SPARQL INSERT and DELETE statements),\r\n    // in which case our SolidDataset-related functions should handle it.\r\n    // For more context, see https://github.com/inrupt/solid-client-js/pull/214.\r\n    const isSolidDataset = contentTypeParts.length > 0 &&\r\n        [\"text/turtle\", \"application/ld+json\"].includes(contentTypeParts[0]);\r\n    const resourceInfo = {\r\n        sourceIri: response.url,\r\n        isRawData: !isSolidDataset,\r\n        contentLocation: (_c = response.headers.get(\"Content-Location\")) !== null && _c !== void 0 ? _c : undefined,\r\n        contentType: (_d = response.headers.get(\"Content-Type\")) !== null && _d !== void 0 ? _d : undefined,\r\n        linkedResources: {},\r\n        location: (_e = response.headers.get(\"Location\")) !== null && _e !== void 0 ? _e : undefined,\r\n    };\r\n    const linkHeader = response.headers.get(\"Link\");\r\n    if (linkHeader) {\r\n        const parsedLinks = LinkHeader.parse(linkHeader);\r\n        // Set ACL link\r\n        const aclLinks = parsedLinks.get(\"rel\", \"acl\");\r\n        if (aclLinks.length === 1) {\r\n            resourceInfo.aclUrl = new URL(aclLinks[0].uri, resourceInfo.sourceIri).href;\r\n        }\r\n        // Parse all link headers and expose them in a standard way\r\n        // (this can replace the parsing of the ACL link above):\r\n        resourceInfo.linkedResources = parsedLinks.refs.reduce((rels, ref) => {\r\n            var _a;\r\n            var _b;\r\n            (_a = rels[_b = ref.rel]) !== null && _a !== void 0 ? _a : (rels[_b] = []);\r\n            rels[ref.rel].push(new URL(ref.uri, resourceInfo.sourceIri).href);\r\n            return rels;\r\n        }, resourceInfo.linkedResources);\r\n    }\r\n    const wacAllowHeader = response.headers.get(\"WAC-Allow\");\r\n    if (wacAllowHeader) {\r\n        resourceInfo.permissions = parseWacAllowHeader(wacAllowHeader);\r\n    }\r\n    return resourceInfo;\r\n}\r\n/**\r\n * Parse a WAC-Allow header into user and public access booleans.\r\n *\r\n * @param wacAllowHeader A WAC-Allow header in the format `user=\"read append write control\",public=\"read\"`\r\n * @see https://github.com/solid/solid-spec/blob/cb1373a369398d561b909009bd0e5a8c3fec953b/api-rest.md#wac-allow-headers\r\n */\r\nfunction parseWacAllowHeader(wacAllowHeader) {\r\n    function parsePermissionStatement(permissionStatement) {\r\n        const permissions = permissionStatement.split(\" \");\r\n        const writePermission = permissions.includes(\"write\");\r\n        return writePermission\r\n            ? {\r\n                read: permissions.includes(\"read\"),\r\n                append: true,\r\n                write: true,\r\n                control: permissions.includes(\"control\"),\r\n            }\r\n            : {\r\n                read: permissions.includes(\"read\"),\r\n                append: permissions.includes(\"append\"),\r\n                write: false,\r\n                control: permissions.includes(\"control\"),\r\n            };\r\n    }\r\n    function getStatementFor(header, scope) {\r\n        const relevantEntries = header\r\n            .split(\",\")\r\n            .map((rawEntry) => rawEntry.split(\"=\"))\r\n            .filter((parts) => parts.length === 2 && parts[0].trim() === scope);\r\n        // There should only be one statement with the given scope:\r\n        if (relevantEntries.length !== 1) {\r\n            return \"\";\r\n        }\r\n        const relevantStatement = relevantEntries[0][1].trim();\r\n        // The given statement should be wrapped in double quotes to be valid:\r\n        if (relevantStatement.charAt(0) !== '\"' ||\r\n            relevantStatement.charAt(relevantStatement.length - 1) !== '\"') {\r\n            return \"\";\r\n        }\r\n        // Return the statment without the wrapping quotes, e.g.: read append write control\r\n        return relevantStatement.substring(1, relevantStatement.length - 1);\r\n    }\r\n    return {\r\n        user: parsePermissionStatement(getStatementFor(wacAllowHeader, \"user\")),\r\n        public: parsePermissionStatement(getStatementFor(wacAllowHeader, \"public\")),\r\n    };\r\n}\r\n/** @hidden Used to instantiate a separate instance from input parameters */\r\nfunction internal_cloneResource(resource) {\r\n    let clonedResource;\r\n    if (typeof resource.slice === \"function\") {\r\n        // If given Resource is a File:\r\n        clonedResource = Object.assign(resource.slice(), Object.assign({}, resource));\r\n    }\r\n    else {\r\n        // If it is just a plain object containing metadata:\r\n        clonedResource = Object.assign({}, resource);\r\n    }\r\n    return clonedResource;\r\n}\r\n/** @internal */\r\nfunction internal_isUnsuccessfulResponse(response) {\r\n    return !response.ok;\r\n}\r\nfunction internal_isAuthenticationFailureResponse(response) {\r\n    return response.status === 401 || response.status === 403;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n// TODO: These should be replaced by auto-generated constants,\r\n//       if we can ensure that unused constants will be excluded from bundles.\r\n/** @hidden */\r\nconst acl = {\r\n    Authorization: \"http://www.w3.org/ns/auth/acl#Authorization\",\r\n    AuthenticatedAgent: \"http://www.w3.org/ns/auth/acl#AuthenticatedAgent\",\r\n    accessTo: \"http://www.w3.org/ns/auth/acl#accessTo\",\r\n    agent: \"http://www.w3.org/ns/auth/acl#agent\",\r\n    agentGroup: \"http://www.w3.org/ns/auth/acl#agentGroup\",\r\n    agentClass: \"http://www.w3.org/ns/auth/acl#agentClass\",\r\n    default: \"http://www.w3.org/ns/auth/acl#default\",\r\n    defaultForNew: \"http://www.w3.org/ns/auth/acl#defaultForNew\",\r\n    mode: \"http://www.w3.org/ns/auth/acl#mode\",\r\n    origin: \"http://www.w3.org/ns/auth/acl#origin\",\r\n};\r\n/** @hidden */\r\nconst rdf = {\r\n    type: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\r\n};\r\n/** @hidden */\r\nconst ldp = {\r\n    BasicContainer: \"http://www.w3.org/ns/ldp#BasicContainer\",\r\n    Container: \"http://www.w3.org/ns/ldp#Container\",\r\n    Resource: \"http://www.w3.org/ns/ldp#Resource\",\r\n    contains: \"http://www.w3.org/ns/ldp#contains\",\r\n};\r\n/** @hidden */\r\nconst foaf = {\r\n    Agent: \"http://xmlns.com/foaf/0.1/Agent\",\r\n    primaryTopic: \"http://xmlns.com/foaf/0.1/primaryTopic\",\r\n    isPrimaryTopicOf: \"http://xmlns.com/foaf/0.1/isPrimaryTopicOf\",\r\n};\r\n/** @hidden */\r\nconst acp = {\r\n    AccessControlResource: \"http://www.w3.org/ns/solid/acp#AccessControlResource\",\r\n    Policy: \"http://www.w3.org/ns/solid/acp#Policy\",\r\n    AccessControl: \"http://www.w3.org/ns/solid/acp#AccessControl\",\r\n    Read: \"http://www.w3.org/ns/solid/acp#Read\",\r\n    Append: \"http://www.w3.org/ns/solid/acp#Append\",\r\n    Write: \"http://www.w3.org/ns/solid/acp#Write\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by Matchers. */\r\n    Rule: \"http://www.w3.org/ns/solid/acp#Rule\",\r\n    Matcher: \"http://www.w3.org/ns/solid/acp#Matcher\",\r\n    accessControl: \"http://www.w3.org/ns/solid/acp#accessControl\",\r\n    memberAccessControl: \"http://www.w3.org/ns/solid/acp#memberAccessControl\",\r\n    apply: \"http://www.w3.org/ns/solid/acp#apply\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by memberAccessControls. */\r\n    applyMembers: \"http://www.w3.org/ns/solid/acp#applyMembers\",\r\n    allow: \"http://www.w3.org/ns/solid/acp#allow\",\r\n    deny: \"http://www.w3.org/ns/solid/acp#deny\",\r\n    allOf: \"http://www.w3.org/ns/solid/acp#allOf\",\r\n    anyOf: \"http://www.w3.org/ns/solid/acp#anyOf\",\r\n    noneOf: \"http://www.w3.org/ns/solid/acp#noneOf\",\r\n    access: \"http://www.w3.org/ns/solid/acp#access\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by memberAccessControls. */\r\n    accessMembers: \"http://www.w3.org/ns/solid/acp#accessMembers\",\r\n    agent: \"http://www.w3.org/ns/solid/acp#agent\",\r\n    group: \"http://www.w3.org/ns/solid/acp#group\",\r\n    client: \"http://www.w3.org/ns/solid/acp#client\",\r\n    PublicAgent: \"http://www.w3.org/ns/solid/acp#PublicAgent\",\r\n    AuthenticatedAgent: \"http://www.w3.org/ns/solid/acp#AuthenticatedAgent\",\r\n    CreatorAgent: \"http://www.w3.org/ns/solid/acp#CreatorAgent\",\r\n};\r\n/** @hidden */\r\nconst solid = {\r\n    PublicOidcClient: \"http://www.w3.org/ns/solid/terms#PublicOidcClient\",\r\n};\r\n/** @hidden */\r\nconst security = {\r\n    publicKey: \"https://w3id.org/security#publicKey\",\r\n};\r\n/** @hidden */\r\nconst pim = {\r\n    storage: \"http://www.w3.org/ns/pim/space#storage\",\r\n};\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @ignore For internal use only. */\r\nconst internal_defaultFetchOptions = {\r\n    fetch: fetch,\r\n};\r\n/**\r\n * Retrieve the information about a resource (e.g. access permissions) without\r\n * fetching the resource itself.\r\n *\r\n * @param url URL to fetch Resource metadata from.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\r\n * @returns Promise resolving to the metadata describing the given Resource, or rejecting if fetching it failed.\r\n * @since 0.4.0\r\n */\r\nasync function getResourceInfo(url, options = Object.assign(Object.assign({}, internal_defaultFetchOptions), { ignoreAuthenticationErrors: false })) {\r\n    var _a;\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, { method: \"HEAD\" });\r\n    return responseToResourceInfo(response, {\r\n        ignoreAuthenticationErrors: (_a = options.ignoreAuthenticationErrors) !== null && _a !== void 0 ? _a : false,\r\n    });\r\n}\r\n/**\r\n * Parse Solid metadata from a Response obtained by fetching a Resource from a Solid Pod,\r\n *\r\n * @param response A Fetch API Response. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Response MDN}.\r\n * @returns Resource metadata readable by functions such as [[getSourceUrl]].\r\n * @hidden This interface is not exposed yet until we've tried it out in practice.\r\n */\r\nfunction responseToResourceInfo(response, options = { ignoreAuthenticationErrors: false }) {\r\n    if (internal_isUnsuccessfulResponse(response) &&\r\n        (!internal_isAuthenticationFailureResponse(response) ||\r\n            !options.ignoreAuthenticationErrors)) {\r\n        throw new FetchError(`Fetching the metadata of the Resource at [${response.url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    return { internal_resourceInfo: resourceInfo };\r\n}\r\n/**\r\n * @param resource Resource for which to check whether it is a Container.\r\n * @returns Whether `resource` is a Container.\r\n */\r\nfunction isContainer(resource) {\r\n    const containerUrl = hasResourceInfo(resource)\r\n        ? getSourceUrl(resource)\r\n        : internal_toIriString(resource);\r\n    return containerUrl.endsWith(\"/\");\r\n}\r\n/**\r\n * This function will tell you whether a given Resource contains raw data, or a SolidDataset.\r\n *\r\n * @param resource Resource for which to check whether it contains raw data.\r\n * @return Whether `resource` contains raw data.\r\n */\r\nfunction isRawData(resource) {\r\n    return resource.internal_resourceInfo.isRawData;\r\n}\r\n/**\r\n * @param resource Resource for which to determine the Content Type.\r\n * @returns The Content Type, if known, or null if not known.\r\n */\r\nfunction getContentType$1(resource) {\r\n    var _a;\r\n    return (_a = resource.internal_resourceInfo.contentType) !== null && _a !== void 0 ? _a : null;\r\n}\r\nfunction getSourceUrl(resource) {\r\n    if (hasResourceInfo(resource)) {\r\n        return resource.internal_resourceInfo.sourceIri;\r\n    }\r\n    return null;\r\n}\r\n/** @hidden Alias of getSourceUrl for those who prefer to use IRI terminology. */\r\nconst getSourceIri = getSourceUrl;\r\n/**\r\n * Given a Resource that exposes information about the owner of the Pod it is in, returns the WebID of that owner.\r\n *\r\n * Data about the owner of the Pod is exposed when the following conditions hold:\r\n * - The Pod server supports exposing the Pod owner\r\n * - The current user is allowed to see who the Pod owner is.\r\n *\r\n * If one or more of those conditions are false, this function will return `null`.\r\n *\r\n * @param resource A Resource that contains information about the owner of the Pod it is in.\r\n * @returns The WebID of the owner of the Pod the Resource is in, if provided, or `null` if not.\r\n * @since 0.6.0\r\n */\r\nfunction getPodOwner(resource) {\r\n    var _a;\r\n    if (!hasServerResourceInfo(resource)) {\r\n        return null;\r\n    }\r\n    const podOwners = (_a = getLinkedResourceUrlAll(resource)[\"http://www.w3.org/ns/solid/terms#podOwner\"]) !== null && _a !== void 0 ? _a : [];\r\n    return podOwners.length === 1 ? podOwners[0] : null;\r\n}\r\n/**\r\n * Given a WebID and a Resource that exposes information about the owner of the Pod it is in, returns whether the given WebID is the owner of the Pod.\r\n *\r\n * Data about the owner of the Pod is exposed when the following conditions hold:\r\n * - The Pod server supports exposing the Pod owner\r\n * - The current user is allowed to see who the Pod owner is.\r\n *\r\n * If one or more of those conditions are false, this function will return `null`.\r\n *\r\n * @param webId The WebID of which to check whether it is the Pod Owner's.\r\n * @param resource A Resource that contains information about the owner of the Pod it is in.\r\n * @returns Whether the given WebID is the Pod Owner's, if the Pod Owner is exposed, or `null` if it is not exposed.\r\n * @since 0.6.0\r\n */\r\nfunction isPodOwner(webId, resource) {\r\n    const podOwner = getPodOwner(resource);\r\n    if (typeof podOwner !== \"string\") {\r\n        return null;\r\n    }\r\n    return podOwner === webId;\r\n}\r\n/**\r\n * Get the URLs of Resources linked to the given Resource.\r\n *\r\n * Solid servers can link Resources to each other. For example, in servers\r\n * implementing Web Access Control, Resources can have an Access Control List\r\n * Resource linked to it via the `acl` relation.\r\n *\r\n * @param resource A Resource fetched from a Solid Pod.\r\n * @returns The URLs of Resources linked to the given Resource, indexed by the key that links them.\r\n * @since 1.7.0\r\n */\r\nfunction getLinkedResourceUrlAll(resource) {\r\n    return resource.internal_resourceInfo.linkedResources;\r\n}\r\n/**\r\n * Get what access the current user has to the given Resource.\r\n *\r\n * This function can tell you what access the current user has for the given\r\n * Resource, allowing you to e.g. determine that changes to it will be rejected\r\n * before attempting to do so.\r\n * Additionally, for servers adhering to the Web Access Control specification,\r\n * it will tell you what access unauthenticated users have to the given Resource.\r\n *\r\n * @param resource A Resource fetched from a Solid Pod.\r\n * @returns What access the current user and, if supported by the server, unauthenticated users have to the given Resource.\r\n * @since 1.7.0\r\n */\r\nfunction getEffectiveAccess(resource) {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    if (typeof resource.internal_resourceInfo.permissions === \"object\") {\r\n        return {\r\n            user: {\r\n                read: resource.internal_resourceInfo.permissions.user.read,\r\n                append: resource.internal_resourceInfo.permissions.user.append,\r\n                write: resource.internal_resourceInfo.permissions.user.write,\r\n            },\r\n            public: {\r\n                read: resource.internal_resourceInfo.permissions.public.read,\r\n                append: resource.internal_resourceInfo.permissions.public.append,\r\n                write: resource.internal_resourceInfo.permissions.public.write,\r\n            },\r\n        };\r\n    }\r\n    const linkedResourceUrls = getLinkedResourceUrlAll(resource);\r\n    return {\r\n        user: {\r\n            read: (_b = (_a = linkedResourceUrls[acp.allow]) === null || _a === void 0 ? void 0 : _a.includes(acp.Read)) !== null && _b !== void 0 ? _b : false,\r\n            append: (_e = (((_c = linkedResourceUrls[acp.allow]) === null || _c === void 0 ? void 0 : _c.includes(acp.Append)) ||\r\n                ((_d = linkedResourceUrls[acp.allow]) === null || _d === void 0 ? void 0 : _d.includes(acp.Write)))) !== null && _e !== void 0 ? _e : false,\r\n            write: (_g = (_f = linkedResourceUrls[acp.allow]) === null || _f === void 0 ? void 0 : _f.includes(acp.Write)) !== null && _g !== void 0 ? _g : false,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Extends the regular JavaScript error object with access to the status code and status message.\r\n * @since 1.2.0\r\n */\r\nclass FetchError extends SolidClientError {\r\n    constructor(message, errorResponse) {\r\n        super(message);\r\n        this.response = errorResponse;\r\n    }\r\n    get statusCode() {\r\n        return this.response.status;\r\n    }\r\n    get statusText() {\r\n        return this.response.statusText;\r\n    }\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst defaultGetFileOptions = {\r\n    fetch: fetch,\r\n};\r\nconst RESERVED_HEADERS = [\"Slug\", \"If-None-Match\", \"Content-Type\"];\r\n/**\r\n * Some of the headers must be set by the library, rather than directly.\r\n */\r\nfunction containsReserved(header) {\r\n    return RESERVED_HEADERS.some((reserved) => header[reserved] !== undefined);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieves a file from a URL and returns the file as a blob.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const fileBlob = await getFile(\"https://pod.example.com/some/file\", { fetch: fetch });\r\n * ```\r\n *\r\n * For additional examples, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#retrieve-a-file).\r\n *\r\n * @param url The URL of the file to return\r\n * @param options Fetching options: a custom fetcher and/or headers.\r\n * @returns The file as a blob.\r\n */\r\nasync function getFile(input, options = defaultGetFileOptions) {\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const url = internal_toIriString(input);\r\n    const response = await config.fetch(url, config.init);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the File failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    const data = await response.blob();\r\n    const fileWithResourceInfo = Object.assign(data, {\r\n        internal_resourceInfo: resourceInfo,\r\n    });\r\n    return fileWithResourceInfo;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Deletes a file at a given URL.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * await deleteFile( \"https://pod.example.com/some/file\", { fetch: fetch });\r\n * ```\r\n *\r\n * For additional examples, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#delete-a-file).\r\n *\r\n * @param file The URL of the file to delete\r\n */\r\nasync function deleteFile(file, options = defaultGetFileOptions) {\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const url = hasResourceInfo(file)\r\n        ? internal_toIriString(getSourceIri(file))\r\n        : internal_toIriString(file);\r\n    const response = await config.fetch(url, Object.assign(Object.assign({}, config.init), { method: \"DELETE\" }));\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the file at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves a file in an existing folder/Container associated with the given URL.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const savedFile = await saveFileInContainer(\r\n *   \"https://pod.example.com/some/existing/container/\",\r\n *   new Blob([\"This is a plain piece of text\"], { type: \"plain/text\" }),\r\n *   { slug: \"suggestedFileName.txt\", contentType: \"text/plain\", fetch: fetch }\r\n * );\r\n * ```\r\n *\r\n * For additional example, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#save-a-file-into-an-existing-container).\r\n *\r\n * In the `options` parameter,\r\n *\r\n * - You can suggest a file name in the `slug` field.  However, the Solid\r\n *   Server may or may not use the suggested `slug` as the file name.\r\n *\r\n * - *Recommended:* You can specify the [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\r\n *   of the file in the `contentType`.  If unspecified, the function uses the default type of\r\n *   `application/octet-stream`, indicating a binary data file.\r\n *\r\n * The function saves a file into an *existing* Container. If the\r\n * Container does not exist, either:\r\n * - Create the Container first using [[createContainerAt]], and then\r\n *   use the function, or\r\n * - Use [[overwriteFile]] to save the file. [[overwriteFile]] creates\r\n *   the Containers in the saved file path as needed.\r\n *\r\n * Users who only have `Append` but not `Write` access to a Container\r\n * can use [[saveFileInContainer]] to save new files to the Container.\r\n * That is, [[saveFileInContainer]] is useful in situations where users\r\n * can add new files to a Container but not change existing files in\r\n * the Container, such as users given access to send notifications to\r\n * another's Pod but not to view or delete existing notifications in that Pod.\r\n *\r\n * Users with `Write` access to the given folder/Container may prefer to\r\n * use [[overwriteFile]].\r\n *\r\n * @param folderUrl The URL of an existing folder where the new file is saved.\r\n * @param file The file to be written.\r\n * @param options Additional parameters for file creation (e.g. a slug).\r\n * @returns A Promise that resolves to the saved file, if available, or `null` if the current user does not have Read access to the newly-saved file. It rejects if saving fails.\r\n */\r\nasync function saveFileInContainer(folderUrl, file, options = defaultGetFileOptions) {\r\n    const folderUrlString = internal_toIriString(folderUrl);\r\n    const response = await writeFile(folderUrlString, file, \"POST\", options);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Saving the file in [${folderUrl}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly saved file.\");\r\n    }\r\n    const fileIri = new URL(locationHeader, new URL(folderUrlString).origin).href;\r\n    const blobClone = internal_cloneResource(file);\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: true,\r\n            sourceIri: fileIri,\r\n            contentType: getContentType(file, options.contentType),\r\n        },\r\n    };\r\n    return Object.assign(blobClone, resourceInfo);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves a file at a given URL. If a file already exists at the URL,\r\n * the function overwrites the existing file.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const savedFile = await overwriteFile(\r\n *   \"https://pod.example.com/some/container/myFile.txt\",\r\n *   new Blob([\"This is a plain piece of text\"], { type: \"plain/text\" }),\r\n *   { contentType: \"text/plain\", fetch: fetch }\r\n * );\r\n * ```\r\n *\r\n * For additional example, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#write-a-file-to-a-specific-url).\r\n *\r\n * *Recommended:* In the `options` parameter, you can specify the\r\n * [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\r\n * of the file in the `contentType`.  If unspecified, the function uses the default type of\r\n * `application/octet-stream`, indicating a binary data file.\r\n *\r\n * When saving a file with [[overwriteFile]], the Solid server creates any\r\n * intermediary Containers as needed; i.e., the Containers do not\r\n * need to be created in advance. For example, when saving a file to the target URL of\r\n * https://example.pod/container/resource, if https://example.pod/container/ does not exist,\r\n * the container is created as part of the save.\r\n *\r\n * @param fileUrl The URL where the file is saved.\r\n * @param file The file to be written.\r\n * @param options Additional parameters for file creation (e.g., media type).\r\n */\r\nasync function overwriteFile(fileUrl, file, options = defaultGetFileOptions) {\r\n    const fileUrlString = internal_toIriString(fileUrl);\r\n    const response = await writeFile(fileUrlString, file, \"PUT\", options);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Overwriting the file at [${fileUrlString}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const blobClone = internal_cloneResource(file);\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    resourceInfo.sourceIri = fileUrlString;\r\n    resourceInfo.isRawData = true;\r\n    return Object.assign(blobClone, { internal_resourceInfo: resourceInfo });\r\n}\r\nfunction isHeadersArray(headers) {\r\n    return Array.isArray(headers);\r\n}\r\n/**\r\n * The return type of this function is misleading: it should ONLY be used to check\r\n * whether an object has a forEach method that returns <key, value> pairs.\r\n *\r\n * @param headers A headers object that might have a forEach\r\n */\r\nfunction hasHeadersObjectForEach(headers) {\r\n    return typeof headers.forEach === \"function\";\r\n}\r\n/**\r\n * @hidden\r\n * This function feels unnecessarily complicated, but is required in order to\r\n * have Headers according to type definitions in both Node and browser environments.\r\n * This might require a fix upstream to be cleaned up.\r\n *\r\n * @param headersToFlatten A structure containing headers potentially in several formats\r\n */\r\nfunction flattenHeaders(headersToFlatten) {\r\n    if (typeof headersToFlatten === \"undefined\") {\r\n        return {};\r\n    }\r\n    let flatHeaders = {};\r\n    if (isHeadersArray(headersToFlatten)) {\r\n        headersToFlatten.forEach(([key, value]) => {\r\n            flatHeaders[key] = value;\r\n        });\r\n        // Note that the following line must be a elsif, because string[][] has a forEach,\r\n        // but it returns string[] instead of <key, value>\r\n    }\r\n    else if (hasHeadersObjectForEach(headersToFlatten)) {\r\n        headersToFlatten.forEach((value, key) => {\r\n            flatHeaders[key] = value;\r\n        });\r\n    }\r\n    else {\r\n        // If the headers are already a Record<string, string>,\r\n        // they can directly be returned.\r\n        flatHeaders = headersToFlatten;\r\n    }\r\n    return flatHeaders;\r\n}\r\n/**\r\n * Internal function that performs the actual write HTTP query, either POST\r\n * or PUT depending on the use case.\r\n *\r\n * @param fileUrl The URL where the file is saved\r\n * @param file The file to be written\r\n * @param method The HTTP method\r\n * @param options Additional parameters for file creation (e.g. a slug, or media type)\r\n */\r\nasync function writeFile(targetUrl, file, method, options) {\r\n    var _a, _b;\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const headers = flattenHeaders((_b = (_a = config.init) === null || _a === void 0 ? void 0 : _a.headers) !== null && _b !== void 0 ? _b : {});\r\n    if (containsReserved(headers)) {\r\n        throw new Error(`No reserved header (${RESERVED_HEADERS.join(\", \")}) should be set in the optional RequestInit.`);\r\n    }\r\n    // If a slug is in the parameters, set the request headers accordingly\r\n    if (config.slug !== undefined) {\r\n        headers[\"Slug\"] = config.slug;\r\n    }\r\n    headers[\"Content-Type\"] = getContentType(file, options.contentType);\r\n    const targetUrlString = internal_toIriString(targetUrl);\r\n    return await config.fetch(targetUrlString, Object.assign(Object.assign({}, config.init), { headers,\r\n        method, body: file }));\r\n}\r\nfunction getContentType(file, contentTypeOverride) {\r\n    if (typeof contentTypeOverride === \"string\") {\r\n        return contentTypeOverride;\r\n    }\r\n    const fileType = typeof file === \"object\" &&\r\n        file !== null &&\r\n        typeof file.type === \"string\" &&\r\n        file.type.length > 0\r\n        ? file.type\r\n        : undefined;\r\n    return fileType !== null && fileType !== void 0 ? fileType : \"application/octet-stream\";\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nrdfJsDatasetModule.dataset;\r\nconst localNodeSkolemPrefix = \"https://inrupt.com/.well-known/sdk-local-node/\";\r\n/**\r\n * Runtime freezing might be too much overhead;\r\n * if so, this function allows us to replace it by a function\r\n * that merely marks its input as Readonly<> for static analysis.\r\n */\r\nconst freeze = Object.freeze;\r\nfunction isLocalNodeIri(iri) {\r\n    return (iri.substring(0, localNodeSkolemPrefix.length) === localNodeSkolemPrefix);\r\n}\r\nfunction getLocalNodeName(localNodeIri) {\r\n    return localNodeIri.substring(localNodeSkolemPrefix.length);\r\n}\r\nfunction getLocalNodeIri(localNodeName) {\r\n    return `${localNodeSkolemPrefix}${localNodeName}`;\r\n}\r\nfunction isBlankNodeId(value) {\r\n    return typeof value === \"string\" && value.substring(0, 2) === \"_:\";\r\n}\r\nfunction getBlankNodeValue(blankNodeId) {\r\n    return blankNodeId.substring(2);\r\n}\r\nfunction getBlankNodeId(blankNode) {\r\n    return `_:${blankNode.value}`;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * IRIs of the XML Schema data types we support\r\n */\r\nconst xmlSchemaTypes = {\r\n    boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\r\n    dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\r\n    date: \"http://www.w3.org/2001/XMLSchema#date\",\r\n    time: \"http://www.w3.org/2001/XMLSchema#time\",\r\n    decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\r\n    integer: \"http://www.w3.org/2001/XMLSchema#integer\",\r\n    string: \"http://www.w3.org/2001/XMLSchema#string\",\r\n    langString: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\",\r\n};\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\r\n */\r\nfunction serializeBoolean(value) {\r\n    return value ? \"true\" : \"false\";\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized boolean, or null if the given value is not a valid serialised boolean.\r\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\r\n */\r\nfunction deserializeBoolean(value) {\r\n    if (value === \"true\" || value === \"1\") {\r\n        return true;\r\n    }\r\n    else if (value === \"false\" || value === \"0\") {\r\n        return false;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value` in UTC.\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction serializeTime(value) {\r\n    let millisecondString;\r\n    let timezoneString;\r\n    if (value.millisecond) {\r\n        if (value.millisecond < 10) {\r\n            millisecondString = \"00\" + value.millisecond;\r\n        }\r\n        else if (value.millisecond < 100) {\r\n            millisecondString = \"0\" + value.millisecond;\r\n        }\r\n        else {\r\n            millisecondString = value.millisecond;\r\n        }\r\n    }\r\n    if (typeof value.timezoneHourOffset === \"number\") {\r\n        const timezoneFormatted = Math.abs(value.timezoneHourOffset) < 10\r\n            ? \"0\" + Math.abs(value.timezoneHourOffset)\r\n            : Math.abs(value.timezoneHourOffset);\r\n        timezoneString =\r\n            value.timezoneHourOffset >= 0\r\n                ? \"+\" + timezoneFormatted\r\n                : \"-\" + timezoneFormatted;\r\n        if (value.timezoneMinuteOffset) {\r\n            timezoneString =\r\n                timezoneString +\r\n                    \":\" +\r\n                    (value.timezoneMinuteOffset < 10\r\n                        ? \"0\" + value.timezoneMinuteOffset\r\n                        : value.timezoneMinuteOffset);\r\n        }\r\n        else {\r\n            timezoneString = timezoneString + \":00\";\r\n        }\r\n    }\r\n    return ((value.hour < 10 ? \"0\" + value.hour : value.hour) +\r\n        \":\" +\r\n        (value.minute < 10 ? \"0\" + value.minute : value.minute) +\r\n        \":\" +\r\n        (value.second < 10 ? \"0\" + value.second : value.second) +\r\n        (value.millisecond ? \".\" + millisecondString : \"\") +\r\n        (timezoneString ? timezoneString : \"\"));\r\n}\r\n/**\r\n * @internal\r\n * @param literalString Value to deserialise.\r\n * @returns Deserialized time, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction deserializeTime(literalString) {\r\n    // Time in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n    // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\r\n    //                  Example: \"13:37:42\".\r\n    // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\r\n    //            Example: \".1337\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const timeRegEx = /\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!timeRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const [timeString, timezoneString] = splitTimeFromTimezone(literalString);\r\n    const [hourString, minuteString, timeRest] = timeString.split(\":\");\r\n    let utcHours = Number.parseInt(hourString, 10);\r\n    let utcMinutes = Number.parseInt(minuteString, 10);\r\n    const [secondString, optionalMillisecondString] = timeRest.split(\".\");\r\n    const utcSeconds = Number.parseInt(secondString, 10);\r\n    const utcMilliseconds = optionalMillisecondString\r\n        ? Number.parseInt(optionalMillisecondString, 10)\r\n        : undefined;\r\n    if (utcMinutes >= 60) {\r\n        utcHours = utcHours + 1;\r\n        utcMinutes = utcMinutes - 60;\r\n    }\r\n    const deserializedTime = {\r\n        hour: utcHours,\r\n        minute: utcMinutes,\r\n        second: utcSeconds,\r\n    };\r\n    if (typeof utcMilliseconds === \"number\") {\r\n        deserializedTime.millisecond = utcMilliseconds;\r\n    }\r\n    if (typeof timezoneString === \"string\") {\r\n        const [hourOffset, minuteOffset] = getTimezoneOffsets(timezoneString);\r\n        if (typeof hourOffset !== \"number\" ||\r\n            hourOffset > 24 ||\r\n            typeof minuteOffset !== \"number\" ||\r\n            minuteOffset > 59) {\r\n            return null;\r\n        }\r\n        deserializedTime.timezoneHourOffset = hourOffset;\r\n        deserializedTime.timezoneMinuteOffset = minuteOffset;\r\n    }\r\n    return deserializedTime;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n */\r\nfunction serializeDatetime(value) {\r\n    // Although the XML Schema DateTime is not _exactly_ an ISO 8601 string\r\n    // (see https://www.w3.org/TR/xmlschema-2/#deviantformats),\r\n    // the deviations only affect the parsing, not the serialisation.\r\n    // Therefore, we can just use .toISOString():\r\n    return value.toISOString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n */\r\nfunction deserializeDatetime(literalString) {\r\n    // DateTime in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n    // (without constraints on the value).\r\n    // -? - An optional leading `-`.\r\n    // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\r\n    // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\r\n    //             separated by a `-`. Example: \"11-03\".\r\n    // T - The letter T, separating the date from the time.\r\n    // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\r\n    //                  Example: \"13:37:42\".\r\n    // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\r\n    //            Example: \".1337\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const datetimeRegEx = /-?\\d{4,}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!datetimeRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const [signedDateString, rest] = literalString.split(\"T\");\r\n    // The date string can optionally be prefixed with `-`,\r\n    // in which case the year is negative:\r\n    const [yearMultiplier, dateString] = signedDateString.charAt(0) === \"-\"\r\n        ? [-1, signedDateString.substring(1)]\r\n        : [1, signedDateString];\r\n    const [yearString, monthString, dayString] = dateString.split(\"-\");\r\n    const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\r\n    const utcMonth = Number.parseInt(monthString, 10) - 1;\r\n    const utcDate = Number.parseInt(dayString, 10);\r\n    const [timeString, timezoneString] = splitTimeFromTimezone(rest);\r\n    const [hourOffset, minuteOffset] = typeof timezoneString === \"string\"\r\n        ? getTimezoneOffsets(timezoneString)\r\n        : [0, 0];\r\n    const [hourString, minuteString, timeRest] = timeString.split(\":\");\r\n    const utcHours = Number.parseInt(hourString, 10) + hourOffset;\r\n    const utcMinutes = Number.parseInt(minuteString, 10) + minuteOffset;\r\n    const [secondString, optionalMillisecondString] = timeRest.split(\".\");\r\n    const utcSeconds = Number.parseInt(secondString, 10);\r\n    const utcMilliseconds = optionalMillisecondString\r\n        ? Number.parseInt(optionalMillisecondString, 10)\r\n        : 0;\r\n    const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, utcHours, utcMinutes, utcSeconds, utcMilliseconds));\r\n    // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\r\n    // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\r\n    // See\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\r\n    if (utcFullYear >= 0 && utcFullYear < 100) {\r\n        // Note that we base it on the calculated year, rather than the year that was actually read.\r\n        // This is because the year might actually differ from the value listed in the serialisation,\r\n        // i.e. when moving the timezone offset to UTC pushes it into a different year:\r\n        date.setUTCFullYear(date.getUTCFullYear() - 1900);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n */\r\nfunction serializeDate(value) {\r\n    const year = value.getFullYear();\r\n    const month = value.getMonth() + 1;\r\n    const day = value.getDate();\r\n    const [_, timezone] = splitTimeFromTimezone(value.toISOString());\r\n    return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}${timezone}`;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n */\r\nfunction deserializeDate(literalString) {\r\n    // Date in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n    // (without constraints on the value).\r\n    // -? - An optional leading `-`.\r\n    // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\r\n    // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\r\n    //             separated by a `-`. Example: \"11-03\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - Optionally, the letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const dateRegEx = /-?\\d{4,}-\\d\\d-\\d\\d(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!dateRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const signedDateString = literalString;\r\n    // The date string can optionally be prefixed with `-`,\r\n    // in which case the year is negative:\r\n    const [yearMultiplier, dateString] = signedDateString.charAt(0) === \"-\"\r\n        ? [-1, signedDateString.substring(1)]\r\n        : [1, signedDateString];\r\n    const [yearString, monthString, dayAndTimezoneString] = dateString.split(\"-\");\r\n    const dayString = dayAndTimezoneString.length > 2\r\n        ? dayAndTimezoneString.substring(0, 2)\r\n        : dayAndTimezoneString;\r\n    const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\r\n    const utcMonth = Number.parseInt(monthString, 10) - 1;\r\n    const utcDate = Number.parseInt(dayString, 10);\r\n    const hour = 12;\r\n    // setting at 12:00 avoids all timezones\r\n    const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, hour));\r\n    // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\r\n    // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\r\n    // See\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\r\n    if (utcFullYear >= 0 && utcFullYear < 100) {\r\n        date.setUTCFullYear(date.getUTCFullYear() - 1900);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @param timeString An XML Schema time string.\r\n * @returns A tuple [timeString, timezoneString].\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction splitTimeFromTimezone(timeString) {\r\n    if (timeString.endsWith(\"Z\")) {\r\n        return [timeString.substring(0, timeString.length - 1), \"Z\"];\r\n    }\r\n    const splitOnPlus = timeString.split(\"+\");\r\n    const splitOnMinus = timeString.split(\"-\");\r\n    if (splitOnPlus.length === 1 && splitOnMinus.length === 1) {\r\n        return [splitOnPlus[0], undefined];\r\n    }\r\n    return splitOnPlus.length > splitOnMinus.length\r\n        ? [splitOnPlus[0], \"+\" + splitOnPlus[1]]\r\n        : [splitOnMinus[0], \"-\" + splitOnMinus[1]];\r\n}\r\n/**\r\n * @param timezoneString Lexical representation of a time zone in XML Schema.\r\n * @returns A tuple of the hour and minute offset of the time zone.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-timezones\r\n */\r\nfunction getTimezoneOffsets(timezoneString) {\r\n    if (timezoneString === \"Z\") {\r\n        return [0, 0];\r\n    }\r\n    const multiplier = timezoneString.charAt(0) === \"+\" ? 1 : -1;\r\n    const [hourString, minuteString] = timezoneString.substring(1).split(\":\");\r\n    const hours = Number.parseInt(hourString, 10);\r\n    const minutes = Number.parseInt(minuteString, 10);\r\n    return [hours * multiplier, minutes * multiplier];\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\r\n */\r\nfunction serializeDecimal(value) {\r\n    return value.toString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized decimal, or null if the given value is not a valid serialised decimal.\r\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\r\n */\r\nfunction deserializeDecimal(literalString) {\r\n    const deserialized = Number.parseFloat(literalString);\r\n    if (Number.isNaN(deserialized)) {\r\n        return null;\r\n    }\r\n    return deserialized;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n */\r\nfunction serializeInteger(value) {\r\n    return value.toString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized integer, or null if the given value is not a valid serialised integer.\r\n */\r\nfunction deserializeInteger(literalString) {\r\n    const deserialized = Number.parseInt(literalString, 10);\r\n    if (Number.isNaN(deserialized)) {\r\n        return null;\r\n    }\r\n    return deserialized;\r\n}\r\n/**\r\n * @internal\r\n * @param locale Locale to transform into a consistent format.\r\n */\r\nfunction normalizeLocale(locale) {\r\n    return locale.toLowerCase();\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw NamedNodes.\r\n * @param value The value that might or might not be a Named Node.\r\n * @returns Whether `value` is a Named Node.\r\n */\r\nfunction isNamedNode(value) {\r\n    return isTerm(value) && value.termType === \"NamedNode\";\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw Literals.\r\n * @param value The value that might or might not be a Literal.\r\n * @returns Whether `value` is a Literal.\r\n */\r\nfunction isLiteral(value) {\r\n    return isTerm(value) && value.termType === \"Literal\";\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw Terms.\r\n * @param value The value that might or might not be a Term.\r\n * @returns Whether `value` is a Term.\r\n */\r\nfunction isTerm(value) {\r\n    return (value !== null &&\r\n        typeof value === \"object\" &&\r\n        typeof value.termType === \"string\" &&\r\n        typeof value.value === \"string\" &&\r\n        typeof value.equals === \"function\");\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to LocalNodes.\r\n * @param value The value that might or might not be a Node with no known IRI yet.\r\n * @returns Whether `value` is a Node with no known IRI yet.\r\n */\r\nfunction isLocalNode(value) {\r\n    return isNamedNode(value) && isLocalNodeIri(value.value);\r\n}\r\n/**\r\n * Ensure that a given value is a valid URL.\r\n *\r\n * @internal Library users shouldn't need to be exposed to raw URLs.\r\n * @param iri The value of which to verify that it is a valid URL.\r\n */\r\nfunction internal_isValidUrl(iri) {\r\n    const iriString = internal_toIriString(iri);\r\n    // If the runtime environment supports URL, instantiate one.\r\n    // If the given IRI is not a valid URL, it will throw an error.\r\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n    /* istanbul ignore if [URL is available in our testing environment, so we cannot test the alternative] */\r\n    if (typeof URL !== \"function\") {\r\n        // If we can't validate the URL, do not throw an error:\r\n        return true;\r\n    }\r\n    try {\r\n        new URL(iriString);\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @internal Utility method; library users should not need to interact with LocalNodes directly.\r\n * @param localNode The LocalNode to resolve to a NamedNode.\r\n * @param resourceIri The Resource in which the Node will be saved.\r\n */\r\nfunction resolveIriForLocalNode(localNode, resourceIri) {\r\n    return DataFactory.namedNode(resolveLocalIri(getLocalNodeName(localNode.value), resourceIri));\r\n}\r\n/**\r\n * @internal API for internal use only.\r\n * @param name The name identifying a Thing.\r\n * @param resourceIri The Resource in which the Thing can be found.\r\n */\r\nfunction resolveLocalIri(name, resourceIri) {\r\n    /* istanbul ignore if [The URL interface is available in the testing environment, so we cannot test this] */\r\n    if (typeof URL !== \"function\") {\r\n        throw new Error(\"The URL interface is not available, so an IRI cannot be determined.\");\r\n    }\r\n    const thingIri = new URL(resourceIri);\r\n    thingIri.hash = name;\r\n    return thingIri.href;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DataFactory = RdfJsDataFactory;\r\nfunction addRdfJsQuadToDataset(dataset, quad, quadParseOptions = {}) {\r\n    var _a;\r\n    const supportedGraphTypes = [\r\n        \"NamedNode\",\r\n        \"DefaultGraph\",\r\n    ];\r\n    if (!supportedGraphTypes.includes(quad.graph.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.graph.termType}] as their Graph node.`);\r\n    }\r\n    const graphId = quad.graph.termType === \"DefaultGraph\" ? \"default\" : quad.graph.value;\r\n    const graph = (_a = dataset.graphs[graphId]) !== null && _a !== void 0 ? _a : {};\r\n    return freeze(Object.assign(Object.assign({}, dataset), { graphs: freeze(Object.assign(Object.assign({}, dataset.graphs), { [graphId]: addRdfJsQuadToGraph(graph, quad, quadParseOptions) })) }));\r\n}\r\nfunction addRdfJsQuadToGraph(graph, quad, quadParseOptions) {\r\n    var _a;\r\n    const supportedSubjectTypes = [\r\n        \"NamedNode\",\r\n        \"BlankNode\",\r\n    ];\r\n    if (!supportedSubjectTypes.includes(quad.subject.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.subject.termType}] as their Subject node.`);\r\n    }\r\n    const subjectIri = quad.subject.termType === \"BlankNode\"\r\n        ? `_:${quad.subject.value}`\r\n        : quad.subject.value;\r\n    const subject = (_a = graph[subjectIri]) !== null && _a !== void 0 ? _a : {\r\n        type: \"Subject\",\r\n        url: subjectIri,\r\n        predicates: {},\r\n    };\r\n    return freeze(Object.assign(Object.assign({}, graph), { [subjectIri]: addRdfJsQuadToSubject(subject, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToSubject(subject, quad, quadParseOptions) {\r\n    return freeze(Object.assign(Object.assign({}, subject), { predicates: addRdfJsQuadToPredicates(subject.predicates, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToPredicates(predicates, quad, quadParseOptions) {\r\n    var _a;\r\n    const supportedPredicateTypes = [\r\n        \"NamedNode\",\r\n    ];\r\n    if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n    }\r\n    const predicateIri = quad.predicate.value;\r\n    const objects = (_a = predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    return freeze(Object.assign(Object.assign({}, predicates), { [predicateIri]: addRdfJsQuadToObjects(objects, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToObjects(objects, quad, quadParseOptions) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    if (quad.object.termType === \"NamedNode\") {\r\n        const namedNodes = freeze([\r\n            ...((_a = objects.namedNodes) !== null && _a !== void 0 ? _a : []),\r\n            quad.object.value,\r\n        ]);\r\n        return freeze(Object.assign(Object.assign({}, objects), { namedNodes: namedNodes }));\r\n    }\r\n    if (quad.object.termType === \"Literal\") {\r\n        if (quad.object.datatype.value === xmlSchemaTypes.langString) {\r\n            const locale = quad.object.language.toLowerCase();\r\n            const thisLocaleStrings = freeze([\r\n                ...((_c = (_b = objects.langStrings) === null || _b === void 0 ? void 0 : _b[locale]) !== null && _c !== void 0 ? _c : []),\r\n                quad.object.value,\r\n            ]);\r\n            const langStrings = freeze(Object.assign(Object.assign({}, ((_d = objects.langStrings) !== null && _d !== void 0 ? _d : {})), { [locale]: thisLocaleStrings }));\r\n            return freeze(Object.assign(Object.assign({}, objects), { langStrings: langStrings }));\r\n        }\r\n        // If the Object is a non-langString Literal\r\n        const thisTypeValues = freeze([\r\n            ...((_f = (_e = objects.literals) === null || _e === void 0 ? void 0 : _e[quad.object.datatype.value]) !== null && _f !== void 0 ? _f : []),\r\n            quad.object.value,\r\n        ]);\r\n        const literals = freeze(Object.assign(Object.assign({}, ((_g = objects.literals) !== null && _g !== void 0 ? _g : {})), { [quad.object.datatype.value]: thisTypeValues }));\r\n        return freeze(Object.assign(Object.assign({}, objects), { literals: literals }));\r\n    }\r\n    if (quad.object.termType === \"BlankNode\") {\r\n        const blankNodePredicates = getPredicatesForBlankNode(quad.object, quadParseOptions);\r\n        const blankNodes = freeze([\r\n            ...((_h = objects.blankNodes) !== null && _h !== void 0 ? _h : []),\r\n            blankNodePredicates,\r\n        ]);\r\n        return freeze(Object.assign(Object.assign({}, objects), { blankNodes: blankNodes }));\r\n    }\r\n    throw new Error(`Objects of type [${quad.object.termType}] are not supported.`);\r\n}\r\nfunction getPredicatesForBlankNode(node, quadParseOptions) {\r\n    var _a, _b;\r\n    const chainBlankNodes = (_a = quadParseOptions.chainBlankNodes) !== null && _a !== void 0 ? _a : [];\r\n    if (chainBlankNodes.find((chainBlankNode) => chainBlankNode.equals(node)) ===\r\n        undefined) {\r\n        // If this Blank Node is not used to provide nested values for another Subject,\r\n        // just return its identifier.\r\n        // That identifier will also be listed among the Subjects in the Graph.\r\n        return getBlankNodeId(node);\r\n    }\r\n    /* istanbul ignore next: If there are chain nodes, there will always be other Quads, so the `?? []` can't be reached: */\r\n    const quads = (_b = quadParseOptions.otherQuads) !== null && _b !== void 0 ? _b : [];\r\n    const quadsWithNodeAsSubject = quads.filter((quad) => quad.subject.equals(node));\r\n    // First add the Quads with regular Objects\r\n    const predicates = quadsWithNodeAsSubject\r\n        .filter((quad) => !isBlankNode(quad.object))\r\n        .reduce((predicatesAcc, quad) => {\r\n        var _a;\r\n        const supportedPredicateTypes = [\r\n            \"NamedNode\",\r\n        ];\r\n        if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n            throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n        }\r\n        const objects = (_a = predicatesAcc[quad.predicate.value]) !== null && _a !== void 0 ? _a : {};\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { [quad.predicate.value]: addRdfJsQuadToObjects(objects, quad, quadParseOptions) }));\r\n    }, {});\r\n    // And then also add the Quads that have another Blank Node as the Object\r\n    // in addition to the Blank Node `node` as the Subject:\r\n    const blankNodeObjectQuads = quadsWithNodeAsSubject.filter((quad) => isBlankNode(quad.object));\r\n    return blankNodeObjectQuads.reduce((predicatesAcc, quad) => {\r\n        var _a, _b;\r\n        const supportedPredicateTypes = [\r\n            \"NamedNode\",\r\n        ];\r\n        if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n            throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n        }\r\n        /* istanbul ignore next: The `?? {}` doesn't get hit; presumably it's initialised above. */\r\n        const objects = (_a = predicatesAcc[quad.predicate.value]) !== null && _a !== void 0 ? _a : {};\r\n        /* istanbul ignore next: The `?? []` doesn't get hit; presumably it's initialised above. */\r\n        const blankNodes = (_b = objects.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { \r\n            // The BlankNode assertions are valid because we filtered on BlankNodes above:\r\n            [quad.predicate.value]: Object.assign(Object.assign({}, objects), { blankNodes: [\r\n                    ...blankNodes,\r\n                    getPredicatesForBlankNode(quad.object, quadParseOptions),\r\n                ] }) }));\r\n    }, predicates);\r\n}\r\n/**\r\n * Given an array of Quads, returns all Blank Nodes that are used in a single chain of Nodes.\r\n *\r\n * This allows you to obtain which Blank Nodes are involved in e.g. RDF lists.\r\n * This is useful because those can be represented as nested data that will have\r\n * a deterministic structure, whereas a representation of Blank Nodes that\r\n * create a cycle or are re-used will need ad-hoc, non-deterministic identifiers\r\n * to allow for representation without inifinite nesting.\r\n */\r\nfunction getChainBlankNodes(quads) {\r\n    // All Blank Nodes that occur in Subject position:\r\n    const blankNodeSubjects = quads\r\n        .map((quad) => quad.subject)\r\n        .filter(isBlankNode);\r\n    // All Blank Nodes that occur in Object position:\r\n    const blankNodeObjects = quads.map((quad) => quad.object).filter(isBlankNode);\r\n    // Makes sure that all given Nodes are the same,\r\n    // which will be used to verify that a set of Quads all have the same Subject:\r\n    function everyNodeTheSame(nodes) {\r\n        // This could potentially be made more performant by mapping every term\r\n        // to their value and using native JS comparisons, assuming every node is\r\n        // either a Blank or a Named Node.\r\n        return nodes.every((otherNode) => nodes.every((anotherNode) => otherNode.equals(anotherNode)));\r\n    }\r\n    // Get all Blank Nodes that are part of a cycle in the graph:\r\n    const cycleBlankNodes = [];\r\n    blankNodeObjects.forEach((blankNodeObject) => {\r\n        cycleBlankNodes.push(...getCycleBlankNodes(blankNodeObject, quads));\r\n    });\r\n    // Get Blank Nodes that are used to provide nested values for a single Subject,\r\n    // which we'll represent as nested values as well\r\n    // (this allows us to avoid generating a non-deterministic, ad-hoc identifier\r\n    // for those Blank Nodes).\r\n    // We'll do this by taking all Blank Nodes in the given Quads...\r\n    const chainBlankNodes = blankNodeSubjects\r\n        .concat(blankNodeObjects)\r\n        .filter((blankNode) => {\r\n        // ....removing those Blank Nodes that are part of a cycle...\r\n        if (cycleBlankNodes.some((cycleBlankNode) => cycleBlankNode.equals(blankNode))) {\r\n            return false;\r\n        }\r\n        // ...and then returning only those Blank Nodes that only occur in the\r\n        // Object position for a single Subject, i.e. that are part of a single\r\n        // chain:\r\n        const subjectsWithThisNodeAsObject = quads\r\n            .filter((quad) => quad.object.equals(blankNode))\r\n            .map((quad) => quad.subject);\r\n        return (subjectsWithThisNodeAsObject.length > 0 &&\r\n            everyNodeTheSame(subjectsWithThisNodeAsObject));\r\n    });\r\n    return chainBlankNodes;\r\n}\r\nfunction toRdfJsQuads(dataset, options = {}) {\r\n    var _a;\r\n    const quads = [];\r\n    const dataFactory = (_a = options.dataFactory) !== null && _a !== void 0 ? _a : RdfJsDataFactory;\r\n    Object.keys(dataset.graphs).forEach((graphIri) => {\r\n        const graph = dataset.graphs[graphIri];\r\n        const graphNode = graphIri === \"default\"\r\n            ? dataFactory.defaultGraph()\r\n            : dataFactory.namedNode(graphIri);\r\n        Object.keys(graph).forEach((subjectIri) => {\r\n            const predicates = graph[subjectIri].predicates;\r\n            const subjectNode = isBlankNodeId(subjectIri)\r\n                ? dataFactory.blankNode(getBlankNodeValue(subjectIri))\r\n                : dataFactory.namedNode(subjectIri);\r\n            quads.push(...subjectToRdfJsQuads(predicates, subjectNode, graphNode, options));\r\n        });\r\n    });\r\n    return quads;\r\n}\r\nfunction subjectToRdfJsQuads(predicates, subjectNode, graphNode, options = {}) {\r\n    var _a;\r\n    const quads = [];\r\n    const dataFactory = (_a = options.dataFactory) !== null && _a !== void 0 ? _a : RdfJsDataFactory;\r\n    Object.keys(predicates).forEach((predicateIri) => {\r\n        var _a, _b, _c, _d;\r\n        const predicateNode = dataFactory.namedNode(predicateIri);\r\n        const langStrings = (_a = predicates[predicateIri].langStrings) !== null && _a !== void 0 ? _a : {};\r\n        const namedNodes = (_b = predicates[predicateIri].namedNodes) !== null && _b !== void 0 ? _b : [];\r\n        const literals = (_c = predicates[predicateIri].literals) !== null && _c !== void 0 ? _c : {};\r\n        const blankNodes = (_d = predicates[predicateIri].blankNodes) !== null && _d !== void 0 ? _d : [];\r\n        const literalTypes = Object.keys(literals);\r\n        literalTypes.forEach((typeIri) => {\r\n            const typeNode = dataFactory.namedNode(typeIri);\r\n            const literalValues = literals[typeIri];\r\n            literalValues.forEach((value) => {\r\n                const literalNode = dataFactory.literal(value, typeNode);\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, literalNode, graphNode));\r\n            });\r\n        });\r\n        const locales = Object.keys(langStrings);\r\n        locales.forEach((locale) => {\r\n            const localeValues = langStrings[locale];\r\n            localeValues.forEach((value) => {\r\n                const langStringNode = dataFactory.literal(value, locale);\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, langStringNode, graphNode));\r\n            });\r\n        });\r\n        namedNodes.forEach((namedNodeIri) => {\r\n            const node = dataFactory.namedNode(namedNodeIri);\r\n            quads.push(dataFactory.quad(subjectNode, predicateNode, node, graphNode));\r\n        });\r\n        blankNodes.forEach((blankNodeIdOrPredicates) => {\r\n            if (isBlankNodeId(blankNodeIdOrPredicates)) {\r\n                const blankNode = dataFactory.blankNode(getBlankNodeValue(blankNodeIdOrPredicates));\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, blankNode, graphNode));\r\n            }\r\n            else {\r\n                const node = dataFactory.blankNode();\r\n                const blankNodeObjectQuad = dataFactory.quad(subjectNode, predicateNode, node, graphNode);\r\n                const blankNodeSubjectQuads = subjectToRdfJsQuads(blankNodeIdOrPredicates, node, graphNode);\r\n                quads.push(blankNodeObjectQuad);\r\n                quads.push(...blankNodeSubjectQuads);\r\n            }\r\n        });\r\n    });\r\n    return quads;\r\n}\r\n/**\r\n * A recursive function that finds all Blank Nodes in an array of Quads that create a cycle in the graph.\r\n *\r\n * This function will traverse the graph starting from `currentNode`, keeping\r\n * track of all the Blank Nodes it encounters twice while doing so, and\r\n * returning those.\r\n */\r\nfunction getCycleBlankNodes(currentNode, quads, traversedBlankNodes = []) {\r\n    // If we've encountered `currentNode` before, all the Blank Nodes we've\r\n    // encountered so far are part of a cycle. Return those.\r\n    if (traversedBlankNodes.find((traversedBlankNode) => traversedBlankNode.equals(currentNode)) !== undefined) {\r\n        return traversedBlankNodes;\r\n    }\r\n    // Find all Blank Nodes that are connected to `currentNode`:\r\n    const blankNodeObjects = quads\r\n        .filter((quad) => quad.subject.equals(currentNode) && isBlankNode(quad.object))\r\n        .map((quad) => quad.object);\r\n    // If no Blank Nodes are connected to `currentNode`, and `currentNode` is not\r\n    // part of a cycle, we're done; the currently traversed Nodes do not form a\r\n    // cycle:\r\n    if (blankNodeObjects.length === 0) {\r\n        return [];\r\n    }\r\n    // Store that we've traversed `currentNode`, then move on to all the Blank\r\n    // Nodes connected to it, which will then take up the role of `currentNode`:\r\n    const nextTraversedNodes = [...traversedBlankNodes, currentNode];\r\n    const cycleBlankNodeArrays = blankNodeObjects.map((nextNode) => getCycleBlankNodes(nextNode, quads, nextTraversedNodes));\r\n    // Collect all the cycle Blank Nodes found in those traverals,\r\n    // then return them:\r\n    const allCycleBlankNodes = [];\r\n    for (const cycleBlankNodes of cycleBlankNodeArrays) {\r\n        allCycleBlankNodes.push(...cycleBlankNodes);\r\n    }\r\n    return allCycleBlankNodes;\r\n}\r\nfunction isBlankNode(term) {\r\n    return term.termType === \"BlankNode\";\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst fetchDocumentLoader = async (url, options) => {\r\n    const res = await fetch(url);\r\n    return {\r\n        contextUrl: undefined,\r\n        documentUrl: url,\r\n        document: await res.json(),\r\n    };\r\n};\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even\r\n * in a non-major release.\r\n * ```\r\n * This returns a parser that transforms a JSON-LD string into a set of RDFJS quads.\r\n *\r\n * @returns A Parser object.\r\n * @since 1.15.0\r\n */\r\nconst getJsonLdParser = () => {\r\n    const onQuadCallbacks = [];\r\n    const onCompleteCallbacks = [];\r\n    const onErrorCallbacks = [];\r\n    return {\r\n        onQuad: (callback) => {\r\n            onQuadCallbacks.push(callback);\r\n        },\r\n        onError: (callback) => {\r\n            onErrorCallbacks.push(callback);\r\n        },\r\n        onComplete: (callback) => {\r\n            onCompleteCallbacks.push(callback);\r\n        },\r\n        parse: async (source, resourceInfo) => {\r\n            let quads = [];\r\n            try {\r\n                const plainQuads = (await jsonld.toRDF(JSON.parse(source), {\r\n                    base: getSourceUrl(resourceInfo),\r\n                    documentLoader: fetchDocumentLoader,\r\n                }));\r\n                quads = fixQuads(plainQuads);\r\n            }\r\n            catch (error) {\r\n                onErrorCallbacks.forEach((callback) => callback(error));\r\n            }\r\n            quads.forEach((quad) => {\r\n                onQuadCallbacks.forEach((callback) => callback(quad));\r\n            });\r\n            onCompleteCallbacks.forEach((callback) => callback());\r\n        },\r\n    };\r\n};\r\n/* Quads returned by jsonld parser are not spec-compliant\r\n * see https://github.com/digitalbazaar/jsonld.js/issues/243\r\n * Also, no specific type for these 'quads' is exposed by the library\r\n */\r\nfunction fixQuads(plainQuads) {\r\n    const fixedQuads = plainQuads.map((plainQuad) => DataFactory.quad(term(plainQuad.subject), term(plainQuad.predicate), term(plainQuad.object), term(plainQuad.graph)));\r\n    return fixedQuads;\r\n}\r\nfunction term(term) {\r\n    switch (term.termType) {\r\n        case \"NamedNode\":\r\n            return DataFactory.namedNode(term.value);\r\n        case \"BlankNode\":\r\n            return DataFactory.blankNode(term.value.substr(2)); // Remove the '_:' prefix. see https://github.com/digitalbazaar/jsonld.js/issues/244\r\n        case \"Literal\":\r\n            return DataFactory.literal(term.value, term.language || term.datatype);\r\n        case \"DefaultGraph\":\r\n            return DataFactory.defaultGraph();\r\n        default:\r\n            throw Error(\"unknown termType: \" + term.termType);\r\n    }\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even\r\n * in a non-major release.\r\n * ```\r\n * This returns a parser that transforms a JSON-LD string into a set of RDFJS quads.\r\n *\r\n * @returns A Parser object.\r\n * @since 1.15.0\r\n */\r\nconst getTurtleParser = () => {\r\n    const onQuadCallbacks = [];\r\n    const onCompleteCallbacks = [];\r\n    const onErrorCallbacks = [];\r\n    return {\r\n        onQuad: (callback) => {\r\n            onQuadCallbacks.push(callback);\r\n        },\r\n        onError: (callback) => {\r\n            onErrorCallbacks.push(callback);\r\n        },\r\n        onComplete: (callback) => {\r\n            onCompleteCallbacks.push(callback);\r\n        },\r\n        parse: async (source, resourceInfo) => {\r\n            const parser = await getParser(getSourceUrl(resourceInfo));\r\n            parser.parse(source, (error, quad, _prefixes) => {\r\n                if (error) {\r\n                    onErrorCallbacks.forEach((callback) => callback(error));\r\n                }\r\n                else if (quad) {\r\n                    onQuadCallbacks.forEach((callback) => callback(quad));\r\n                }\r\n                else {\r\n                    onCompleteCallbacks.forEach((callback) => callback());\r\n                }\r\n            });\r\n        },\r\n    };\r\n};\r\nasync function getParser(baseIri) {\r\n    return new Parser({ format: \"text/turtle\", baseIRI: baseIri });\r\n}\r\n/**\r\n * @param quads Triples that should be serialised to Turtle\r\n * @internal Utility method for internal use; not part of the public API.\r\n */\r\nasync function triplesToTurtle(quads) {\r\n    const format = \"text/turtle\";\r\n    const writer = new Writer({ format: format });\r\n    // Remove any potentially lingering references to Named Graphs in Quads;\r\n    // they'll be determined by the URL the Turtle will be sent to:\r\n    const triples = quads.map((quad) => DataFactory.quad(quad.subject, quad.predicate, quad.object, undefined));\r\n    writer.addQuads(triples);\r\n    const writePromise = new Promise((resolve, reject) => {\r\n        writer.end((error, result) => {\r\n            /* istanbul ignore if [n3.js doesn't actually pass an error nor a result, apparently: https://github.com/rdfjs/N3.js/blob/62682e48c02d8965b4d728cb5f2cbec6b5d1b1b8/src/N3Writer.js#L290] */\r\n            if (error) {\r\n                return reject(error);\r\n            }\r\n            resolve(result);\r\n        });\r\n    });\r\n    const rawTurtle = await writePromise;\r\n    return rawTurtle;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden For internal use only. */\r\nfunction internal_getReadableValue(value) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    if (isNamedNode(value)) {\r\n        return `<${value.value}> (URL)`;\r\n    }\r\n    if (isLiteral(value)) {\r\n        /* istanbul ignore if: thingAsMarkdown always instantiates a NamedNode, so we can't hit this code path in tests. */\r\n        if (!isNamedNode(value.datatype)) {\r\n            return `[${value.value}] (RDF/JS Literal of unknown type)`;\r\n        }\r\n        let val;\r\n        switch (value.datatype.value) {\r\n            case xmlSchemaTypes.boolean:\r\n                val =\r\n                    (_b = (_a = deserializeBoolean(value.value)) === null || _a === void 0 ? void 0 : _a.valueOf()) !== null && _b !== void 0 ? _b : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (boolean)\";\r\n            case xmlSchemaTypes.dateTime:\r\n                val =\r\n                    (_d = (_c = deserializeDatetime(value.value)) === null || _c === void 0 ? void 0 : _c.toUTCString()) !== null && _d !== void 0 ? _d : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (datetime)\";\r\n            case xmlSchemaTypes.decimal:\r\n                val =\r\n                    (_f = (_e = deserializeDecimal(value.value)) === null || _e === void 0 ? void 0 : _e.toString()) !== null && _f !== void 0 ? _f : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (decimal)\";\r\n            case xmlSchemaTypes.integer:\r\n                val =\r\n                    (_h = (_g = deserializeInteger(value.value)) === null || _g === void 0 ? void 0 : _g.toString()) !== null && _h !== void 0 ? _h : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (integer)\";\r\n            case xmlSchemaTypes.langString:\r\n                return `\"${value.value}\" (${value.language} string)`;\r\n            case xmlSchemaTypes.string:\r\n                return `\"${value.value}\" (string)`;\r\n            default:\r\n                return `[${value.value}] (RDF/JS Literal of type: \\`${value.datatype.value}\\`)`;\r\n        }\r\n    }\r\n    /* istanbul ignore else: thingAsMarkdown doesn't generate other Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"BlankNode\") {\r\n        return `[${value.value}] (RDF/JS BlankNode)`;\r\n    }\r\n    /* istanbul ignore next: thingAsMarkdown doesn't generate Quad Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"Quad\") {\r\n        return `??? (nested RDF* Quad)`;\r\n    }\r\n    /* istanbul ignore else: The if statements are exhaustive; if not, TypeScript will complain. */\r\n    /* istanbul ignore next: thingAsMarkdown doesn't generate Variable Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"Variable\") {\r\n        return `?${value.value} (RDF/JS Variable)`;\r\n    }\r\n    /* istanbul ignore next: The if statements are exhaustive; if not, TypeScript will complain. */\r\n    return value;\r\n}\r\n/**\r\n * @hidden\r\n */\r\nfunction internal_throwIfNotThing(thing) {\r\n    if (!isThing(thing)) {\r\n        throw new ThingExpectedError(thing);\r\n    }\r\n}\r\n/**\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_addAdditionsToChangeLog(solidDataset, additions) {\r\n    const changeLog = hasChangelog(solidDataset)\r\n        ? solidDataset.internal_changeLog\r\n        : /* istanbul ignore next: This function always gets called after addDeletionsToChangeLog, so the ChangeLog always already exists in tests: */\r\n            { additions: [], deletions: [] };\r\n    const [newAdditions, newDeletions] = additions\r\n        .filter((addition) => !containsBlankNode(addition))\r\n        .reduce(([additionsAcc, deletionsAcc], addition) => {\r\n        const existingDeletion = deletionsAcc.find((deletion) => deletion.equals(addition));\r\n        if (typeof existingDeletion !== \"undefined\") {\r\n            return [\r\n                additionsAcc,\r\n                deletionsAcc.filter((deletion) => !deletion.equals(addition)),\r\n            ];\r\n        }\r\n        return [additionsAcc.concat(addition), deletionsAcc];\r\n    }, [changeLog.additions, changeLog.deletions]);\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: {\r\n            additions: newAdditions,\r\n            deletions: newDeletions,\r\n        } }));\r\n}\r\n/**\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_addDeletionsToChangeLog(solidDataset, deletions) {\r\n    const changeLog = hasChangelog(solidDataset)\r\n        ? solidDataset.internal_changeLog\r\n        : { additions: [], deletions: [] };\r\n    const [newAdditions, newDeletions] = deletions\r\n        .filter((deletion) => !containsBlankNode(deletion))\r\n        .reduce(([additionsAcc, deletionsAcc], deletion) => {\r\n        const existingAddition = additionsAcc.find((addition) => addition.equals(deletion));\r\n        if (typeof existingAddition !== \"undefined\") {\r\n            return [\r\n                additionsAcc.filter((addition) => !addition.equals(deletion)),\r\n                deletionsAcc,\r\n            ];\r\n        }\r\n        return [additionsAcc, deletionsAcc.concat(deletion)];\r\n    }, [changeLog.additions, changeLog.deletions]);\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: {\r\n            additions: newAdditions,\r\n            deletions: newDeletions,\r\n        } }));\r\n}\r\n/**\r\n * Enforces the presence of a Changelog for a given dataset. If a changelog is\r\n * already present, it is unchanged. Otherwise, an empty changelog is created.\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_withChangeLog(solidDataset) {\r\n    const newSolidDataset = hasChangelog(solidDataset)\r\n        ? solidDataset\r\n        : freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: { additions: [], deletions: [] } }));\r\n    return newSolidDataset;\r\n}\r\n/**\r\n * We don't currently support reading and writing Blank Nodes, so this function can be used to skip those Quads.\r\n *\r\n * This is needed because we cannot reconcile Blank Nodes in additions and\r\n * deletions. Down the road, we should do a diff before saving a SolidDataset\r\n * against a saved copy of the originally-fetched one, based on our own data\r\n * structures, which should make it easier to reconcile.\r\n */\r\nfunction containsBlankNode(quad) {\r\n    return (quad.subject.termType === \"BlankNode\" ||\r\n        quad.object.termType === \"BlankNode\");\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Returns the URLs of all Properties that the given [[Thing ]]has values for.b\r\n *\r\n * @param thing The [[Thing]] of which to get that Property URLs that have a value.\r\n * @returns The URLs of the Properties for which values are defined for the given Thing.\r\n * @hidden This is an advanced API that should not be needed for most Solid use cases. If you do find yourself needing this, please file a feature request sharing your use case.\r\n */\r\nfunction getPropertyAll(thing) {\r\n    return Object.keys(thing.predicates).filter((predicate) => getTerm(thing, predicate) !== null);\r\n}\r\n/**\r\n * Returns the URL value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type URL, returns null.\r\n * If the Property has multiple URL values, returns one of its URL values.\r\n *\r\n * @param thing The [[Thing]] to read a URL value from.\r\n * @param property The Property whose URL value to return.\r\n * @returns A URL value for the given Property if present, or null if the Property is not present or the value is not of type URL.\r\n */\r\nfunction getUrl(thing, property) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateUrl = internal_toIriString(property);\r\n    const firstUrl = (_c = (_b = (_a = thing.predicates[predicateUrl]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null;\r\n    if (firstUrl === null) {\r\n        return null;\r\n    }\r\n    return isLocalNodeIri(firstUrl) ? `#${getLocalNodeName(firstUrl)}` : firstUrl;\r\n}\r\n/** @hidden Alias of [[getUrl]] for those who prefer IRI terminology. */\r\nconst getIri = getUrl;\r\n/**\r\n * Returns the URL values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type URL, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the URL values from.\r\n * @param property The Property whose URL values to return.\r\n * @returns An array of URL values for the given Property.\r\n */\r\nfunction getUrlAll(thing, property) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateUrl = internal_toIriString(property);\r\n    return ((_c = (_b = (_a = thing.predicates[predicateUrl]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b.map((iri) => isLocalNodeIri(iri) ? `#${getLocalNodeName(iri)}` : iri)) !== null && _c !== void 0 ? _c : []);\r\n}\r\n/** @hidden Alias of [[getUrlAll]] for those who prefer IRI terminology. */\r\nconst getIriAll = getUrlAll;\r\n/**\r\n * Returns the boolean value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type boolean, returns null.\r\n * If the Property has multiple boolean values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a boolean value from.\r\n * @param property The Property whose boolean value to return.\r\n * @returns A boolean value for the given Property if present, or null if the Property is not present or the value is not of type boolean.\r\n */\r\nfunction getBoolean(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.boolean);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeBoolean(literalString);\r\n}\r\n/**\r\n * Returns the boolean values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type boolean, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the boolean values from.\r\n * @param property The Property whose boolean values to return.\r\n * @returns An array of boolean values for the given Property.\r\n */\r\nfunction getBooleanAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.boolean);\r\n    return literalStrings\r\n        .map(deserializeBoolean)\r\n        .filter((possibleBoolean) => possibleBoolean !== null);\r\n}\r\n/**\r\n * Returns the datetime value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type datetime, returns null.\r\n * If the Property has multiple datetime values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a datetime value from.\r\n * @param property The Property whose datetime value to return.\r\n * @returns A datetime value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\r\n */\r\nfunction getDatetime(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.dateTime);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDatetime(literalString);\r\n}\r\n/**\r\n * Returns the datetime values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type datetime, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the datetime values from.\r\n * @param property The Property whose datetime values to return.\r\n * @returns An array of datetime values for the given Property.\r\n */\r\nfunction getDatetimeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.dateTime);\r\n    return literalStrings\r\n        .map(deserializeDatetime)\r\n        .filter((potentialDatetime) => potentialDatetime !== null);\r\n}\r\n/**\r\n * Returns the date value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type date, returns null.\r\n * If the Property has multiple date values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a date value from.\r\n * @param property The Property whose date value to return.\r\n * @returns A date value for the given Property if present, or null if the Property is not present or the value is not of type date.\r\n * @since 1.10.0\r\n */\r\nfunction getDate(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.date);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDate(literalString);\r\n}\r\n/**\r\n * Returns the date values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type date, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the date values from.\r\n * @param property The Property whose date values to return.\r\n * @returns An array of date values for the given Property.\r\n * @since 1.10.0\r\n */\r\nfunction getDateAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.date);\r\n    return literalStrings\r\n        .map(deserializeDate)\r\n        .filter((potentialDate) => potentialDate !== null);\r\n}\r\n/**\r\n * Returns the time value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type time, returns null.\r\n * If the Property has multiple time values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a time value from.\r\n * @param property The Property whose time value to return.\r\n * @returns A time value for the given Property if present, or null if the Property is not present or the value is not of type time.\r\n * @since 1.10.0\r\n */\r\nfunction getTime(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.time);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeTime(literalString);\r\n}\r\n/**\r\n * Returns the time values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type time, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the time values from.\r\n * @param property The Property whose time values to return.\r\n * @returns An array of time values for the given Property.\r\n * @since 1.10.0\r\n */\r\nfunction getTimeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.time);\r\n    return literalStrings\r\n        .map(deserializeTime)\r\n        .filter((potentialTime) => potentialTime !== null);\r\n}\r\n/**\r\n * Returns the decimal value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type decimal, returns null.\r\n * If the Property has multiple decimal values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a decimal value from.\r\n * @param property The Property whose decimal value to return.\r\n * @returns A decimal value for the given Property if present, or null if the Property is not present or the value is not of type decimal.\r\n */\r\nfunction getDecimal(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.decimal);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDecimal(literalString);\r\n}\r\n/**\r\n * Returns the decimal values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type decimal, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the decimal values from.\r\n * @param property The Property whose decimal values to return.\r\n * @returns An array of decimal values for the given Property.\r\n */\r\nfunction getDecimalAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.decimal);\r\n    return literalStrings\r\n        .map((literalString) => deserializeDecimal(literalString))\r\n        .filter((potentialDecimal) => potentialDecimal !== null);\r\n}\r\n/**\r\n * Returns the integer value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type integer, returns null.\r\n * If the Property has multiple integer values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read an integer value from.\r\n * @param property The Property whose integer value to return.\r\n * @returns A integer value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\r\n */\r\nfunction getInteger(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.integer);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeInteger(literalString);\r\n}\r\n/**\r\n * Returns the integer values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type integer, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the integer values from.\r\n * @param property The Property whose integer values to return.\r\n * @returns An array of integer values for the given Property.\r\n */\r\nfunction getIntegerAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.integer);\r\n    return literalStrings\r\n        .map((literalString) => deserializeInteger(literalString))\r\n        .filter((potentialInteger) => potentialInteger !== null);\r\n}\r\n/**\r\n * Returns the English (language tag \"en\") string value of the specified Property from a [[Thing]].\r\n * If the Property is not present as a string in English, returns null.\r\n * If the Property has multiple English string values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @returns An English string value for the given Property if present, or null otherwise.\r\n * @since 1.13.0\r\n */\r\nfunction getStringEnglish(thing, property) {\r\n    return getStringWithLocale(thing, property, \"en\");\r\n}\r\n/**\r\n * Returns the localized string value of the specified Property from a [[Thing]].\r\n * If the Property is not present as a string in the specified locale, returns null.\r\n * If the Property has multiple string values for the specified locale, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @param locale The desired locale for the string value.\r\n * @returns A localised string value for the given Property if present in the specified `locale`, or null otherwise.\r\n */\r\nfunction getStringWithLocale(thing, property, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingLocales = Object.keys(langStrings);\r\n    const matchingLocale = existingLocales.find((existingLocale) => existingLocale.toLowerCase() === locale.toLowerCase() &&\r\n        Array.isArray(langStrings[existingLocale]) &&\r\n        langStrings[existingLocale].length > 0);\r\n    return typeof matchingLocale === \"string\"\r\n        ? langStrings[matchingLocale][0]\r\n        : null;\r\n}\r\n/**\r\n * Returns the English (language tag \"en\") string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not an English string, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @returns An array of English string values for the given Property.\r\n */\r\nfunction getStringEnglishAll(thing, property) {\r\n    return getStringWithLocaleAll(thing, property, \"en\");\r\n}\r\n/**\r\n * Returns the localized string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not a string of the specified locale, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the localised string values from.\r\n * @param property The Property whose localised string values to return.\r\n * @param locale The desired locale for the string values.\r\n * @returns An array of localised string values for the given Property.\r\n */\r\nfunction getStringWithLocaleAll(thing, property, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingLocales = Object.keys(langStrings);\r\n    const matchingLocale = existingLocales.find((existingLocale) => existingLocale.toLowerCase() === locale.toLowerCase() &&\r\n        Array.isArray(langStrings[existingLocale]) &&\r\n        langStrings[existingLocale].length > 0);\r\n    return typeof matchingLocale === \"string\"\r\n        ? [...langStrings[matchingLocale]]\r\n        : [];\r\n}\r\n/**\r\n * Returns all localized string values mapped by the locales for the specified property from the\r\n * specified [[Thing]] (explicitly filters out non-language string literals).\r\n *\r\n * @param thing The [[Thing]] to read the localised string values from.\r\n * @param property The Property whose localised string values to return.\r\n * @returns A Map of objects, keyed on locale with the value an array of string values (for that locale).\r\n */\r\nfunction getStringByLocaleAll(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const stringsByLocale = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    return new Map(Object.entries(stringsByLocale).map(([locale, values]) => [\r\n        locale,\r\n        [...values],\r\n    ]));\r\n}\r\n/**\r\n * Returns the string value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type string, returns null.\r\n * If the Property has multiple string values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a string value from.\r\n * @param property The Property whose string value to return.\r\n * @returns A string value for the given Property if present, or null if the Property is not present or the value is not of type string.\r\n */\r\nfunction getStringNoLocale(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.string);\r\n    return literalString;\r\n}\r\n/**\r\n * Returns the string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type string, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the string values from.\r\n * @param property The Property whose string values to return.\r\n * @returns An array of string values for the given Property.\r\n */\r\nfunction getStringNoLocaleAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.string);\r\n    return literalStrings;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a NamedNode value from.\r\n * @param property The given Property for which you want the NamedNode value.\r\n * @returns A NamedNode value for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\r\n */\r\nfunction getNamedNode(thing, property) {\r\n    const iriString = getIri(thing, property);\r\n    if (iriString === null) {\r\n        return null;\r\n    }\r\n    return DataFactory.namedNode(iriString);\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the NamedNode values from.\r\n * @param property The given Property for which you want the NamedNode values.\r\n * @returns The NamedNode values for the given Property.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\r\n */\r\nfunction getNamedNodeAll(thing, property) {\r\n    const iriStrings = getIriAll(thing, property);\r\n    return iriStrings.map((iriString) => DataFactory.namedNode(iriString));\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a Literal value from.\r\n * @param property The given Property for which you want the Literal value.\r\n * @returns A Literal value for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#literal-interface\r\n */\r\nfunction getLiteral(thing, property) {\r\n    var _a, _b, _c, _d;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const locales = Object.keys(langStrings);\r\n    if (locales.length > 0) {\r\n        const nonEmptyLocale = locales.find((locale) => Array.isArray(langStrings[locale]) && langStrings[locale].length > 0);\r\n        if (typeof nonEmptyLocale === \"string\") {\r\n            return DataFactory.literal(langStrings[nonEmptyLocale][0], nonEmptyLocale);\r\n        }\r\n    }\r\n    const otherLiterals = (_d = (_c = thing.predicates[predicateIri]) === null || _c === void 0 ? void 0 : _c.literals) !== null && _d !== void 0 ? _d : {};\r\n    const dataTypes = Object.keys(otherLiterals);\r\n    if (dataTypes.length > 0) {\r\n        const nonEmptyDataType = dataTypes.find((dataType) => Array.isArray(otherLiterals[dataType]) &&\r\n            otherLiterals[dataType].length > 0);\r\n        if (typeof nonEmptyDataType === \"string\") {\r\n            return DataFactory.literal(otherLiterals[nonEmptyDataType][0], DataFactory.namedNode(nonEmptyDataType));\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the Literal values from.\r\n * @param property The given Property for which you want the Literal values.\r\n * @returns The Literal values for the given Property.\r\n * @ignore This should not be needed due to the other get*All() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#literal-interface\r\n */\r\nfunction getLiteralAll(thing, property) {\r\n    var _a, _b, _c, _d;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    let literals = [];\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const locales = Object.keys(langStrings);\r\n    for (const locale of locales) {\r\n        const stringsInLocale = langStrings[locale];\r\n        const localeLiterals = stringsInLocale.map((langString) => DataFactory.literal(langString, locale));\r\n        literals = literals.concat(localeLiterals);\r\n    }\r\n    const otherLiterals = (_d = (_c = thing.predicates[predicateIri]) === null || _c === void 0 ? void 0 : _c.literals) !== null && _d !== void 0 ? _d : {};\r\n    const dataTypes = Object.keys(otherLiterals);\r\n    for (const dataType of dataTypes) {\r\n        const values = otherLiterals[dataType];\r\n        const typeNode = DataFactory.namedNode(dataType);\r\n        const dataTypeLiterals = values.map((value) => DataFactory.literal(value, typeNode));\r\n        literals = literals.concat(dataTypeLiterals);\r\n    }\r\n    return literals;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a raw RDF/JS value from.\r\n * @param property The given Property for which you want the raw value.\r\n * @returns A Term for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/\r\n * @since 0.3.0\r\n */\r\nfunction getTerm(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    const namedNode = getNamedNode(thing, property);\r\n    if (namedNode !== null) {\r\n        return namedNode;\r\n    }\r\n    const literal = getLiteral(thing, property);\r\n    if (literal !== null) {\r\n        return literal;\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const blankNodes = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n    if (blankNodes.length > 0) {\r\n        const blankNodeValue = isBlankNodeId(blankNodes[0])\r\n            ? getBlankNodeValue(blankNodes[0])\r\n            : undefined;\r\n        return DataFactory.blankNode(blankNodeValue);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the raw RDF/JS values from.\r\n * @param property The given Property for which you want the raw values.\r\n * @returns The Terms for the given Property.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/\r\n * @since 0.3.0\r\n */\r\nfunction getTermAll(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    const namedNodes = getNamedNodeAll(thing, property);\r\n    const literals = getLiteralAll(thing, property);\r\n    const predicateIri = internal_toIriString(property);\r\n    const blankNodeValues = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n    const blankNodes = blankNodeValues.map((rawBlankNode) => {\r\n        const blankNodeName = isBlankNodeId(rawBlankNode)\r\n            ? getBlankNodeValue(rawBlankNode)\r\n            : undefined;\r\n        return DataFactory.blankNode(blankNodeName);\r\n    });\r\n    const terms = namedNodes\r\n        .concat(literals)\r\n        .concat(blankNodes);\r\n    return terms;\r\n}\r\n/**\r\n * @param thing The [Thing]] to read a Literal of the given type from.\r\n * @param property The given Property for which you want the Literal value.\r\n * @param literalType Set type of the Literal data.\r\n * @returns The stringified value for the given Property and type, if present, or null otherwise.\r\n */\r\nfunction getLiteralOfType(thing, property, literalType) {\r\n    var _a, _b, _c, _d;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    return (_d = (_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.literals) === null || _b === void 0 ? void 0 : _b[literalType]) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : null;\r\n}\r\n/**\r\n * @param thing The [Thing]] to read the Literals of the given type from.\r\n * @param property The given Property for which you want the Literal values.\r\n * @param literalType Set type of the Literal data.\r\n * @returns The stringified values for the given Property and type.\r\n */\r\nfunction getLiteralAllOfType(thing, property, literalType) {\r\n    var _a, _b, _c;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const literalsOfType = (_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.literals) === null || _b === void 0 ? void 0 : _b[literalType]) !== null && _c !== void 0 ? _c : [];\r\n    return [...literalsOfType];\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Extract Quads with a given Subject from a [[SolidDataset]] into a [[Thing]].\r\n *\r\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]] from.\r\n * @param thingUrl The URL of the desired [[Thing]].\r\n * @param options Not yet implemented.\r\n */\r\nfunction getThing(solidDataset, thingUrl, options = {}) {\r\n    var _a;\r\n    if (!internal_isValidUrl(thingUrl)) {\r\n        throw new ValidThingUrlExpectedError(thingUrl);\r\n    }\r\n    const graph = typeof options.scope !== \"undefined\"\r\n        ? internal_toIriString(options.scope)\r\n        : \"default\";\r\n    const thingsByIri = (_a = solidDataset.graphs[graph]) !== null && _a !== void 0 ? _a : {};\r\n    const thingIri = internal_toIriString(thingUrl);\r\n    const resolvedThingIri = isLocalNodeIri(thingIri) && hasServerResourceInfo(solidDataset)\r\n        ? resolveLocalIri(getLocalNodeName(thingIri), getSourceUrl(solidDataset))\r\n        : thingIri;\r\n    const thing = thingsByIri[resolvedThingIri];\r\n    if (typeof thing === \"undefined\") {\r\n        return null;\r\n    }\r\n    return thing;\r\n}\r\n/**\r\n * Get all [[Thing]]s in a [[SolidDataset]].\r\n *\r\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]]s from.\r\n * @param options Not yet implemented.\r\n */\r\nfunction getThingAll(solidDataset, options = { acceptBlankNodes: false }) {\r\n    var _a;\r\n    const graph = typeof options.scope !== \"undefined\"\r\n        ? internal_toIriString(options.scope)\r\n        : \"default\";\r\n    const thingsByIri = (_a = solidDataset.graphs[graph]) !== null && _a !== void 0 ? _a : {};\r\n    return Object.values(thingsByIri).filter((thing) => !isBlankNodeId(thing.url) || options.acceptBlankNodes);\r\n}\r\n/**\r\n * Insert a [[Thing]] into a [[SolidDataset]], replacing previous instances of that Thing.\r\n *\r\n * @param solidDataset The SolidDataset to insert a Thing into.\r\n * @param thing The Thing to insert into the given SolidDataset.\r\n * @returns A new SolidDataset equal to the given SolidDataset, but with the given Thing.\r\n */\r\nfunction setThing(solidDataset, thing) {\r\n    var _a;\r\n    const thingIri = isThingLocal(thing) && hasServerResourceInfo(solidDataset)\r\n        ? resolveLocalIri(getLocalNodeName(thing.url), getSourceUrl(solidDataset))\r\n        : thing.url;\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const updatedDefaultGraph = freeze(Object.assign(Object.assign({}, defaultGraph), { [thingIri]: freeze(Object.assign(Object.assign({}, thing), { url: thingIri })) }));\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: updatedDefaultGraph }));\r\n    const subjectNode = DataFactory.namedNode(thingIri);\r\n    const deletedThingPredicates = (_a = solidDataset.graphs.default[thingIri]) === null || _a === void 0 ? void 0 : _a.predicates;\r\n    const deletions = typeof deletedThingPredicates !== \"undefined\"\r\n        ? subjectToRdfJsQuads(deletedThingPredicates, subjectNode, DataFactory.defaultGraph())\r\n        : [];\r\n    const additions = subjectToRdfJsQuads(thing.predicates, subjectNode, DataFactory.defaultGraph());\r\n    return internal_addAdditionsToChangeLog(internal_addDeletionsToChangeLog(freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs })), deletions), additions);\r\n}\r\n/**\r\n * Remove a Thing from a SolidDataset.\r\n *\r\n * @param solidDataset The SolidDataset to remove a Thing from.\r\n * @param thing The Thing to remove from `solidDataset`.\r\n * @returns A new [[SolidDataset]] equal to the input SolidDataset, excluding the given Thing.\r\n */\r\nfunction removeThing(solidDataset, thing) {\r\n    var _a;\r\n    let thingIri;\r\n    if (isNamedNode(thing)) {\r\n        thingIri = thing.value;\r\n    }\r\n    else if (typeof thing === \"string\") {\r\n        thingIri =\r\n            isLocalNodeIri(thing) && hasServerResourceInfo(solidDataset)\r\n                ? resolveLocalIri(getLocalNodeName(thing), getSourceUrl(solidDataset))\r\n                : thing;\r\n    }\r\n    else if (isThingLocal(thing)) {\r\n        thingIri = thing.url;\r\n    }\r\n    else {\r\n        thingIri = asIri(thing);\r\n    }\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const updatedDefaultGraph = Object.assign({}, defaultGraph);\r\n    delete updatedDefaultGraph[thingIri];\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: freeze(updatedDefaultGraph) }));\r\n    const subjectNode = DataFactory.namedNode(thingIri);\r\n    const deletedThingPredicates = (_a = solidDataset.graphs.default[thingIri]) === null || _a === void 0 ? void 0 : _a.predicates;\r\n    const deletions = typeof deletedThingPredicates !== \"undefined\"\r\n        ? subjectToRdfJsQuads(deletedThingPredicates, subjectNode, DataFactory.defaultGraph())\r\n        : [];\r\n    return internal_addDeletionsToChangeLog(freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs })), deletions);\r\n}\r\nfunction createThing(options = {}) {\r\n    var _a;\r\n    if (typeof options.url !== \"undefined\") {\r\n        const url = options.url;\r\n        if (!internal_isValidUrl(url)) {\r\n            throw new ValidThingUrlExpectedError(url);\r\n        }\r\n        const thing = freeze({\r\n            type: \"Subject\",\r\n            predicates: freeze({}),\r\n            url: url,\r\n        });\r\n        return thing;\r\n    }\r\n    const name = (_a = options.name) !== null && _a !== void 0 ? _a : generateName();\r\n    const localNodeIri = getLocalNodeIri(name);\r\n    const thing = freeze({\r\n        type: \"Subject\",\r\n        predicates: freeze({}),\r\n        url: localNodeIri,\r\n    });\r\n    return thing;\r\n}\r\n/**\r\n * @param input An value that might be a [[Thing]].\r\n * @returns Whether `input` is a Thing.\r\n * @since 0.2.0\r\n */\r\nfunction isThing(input) {\r\n    return (typeof input === \"object\" &&\r\n        input !== null &&\r\n        typeof input.type === \"string\" &&\r\n        input.type === \"Subject\");\r\n}\r\nfunction asUrl(thing, baseUrl) {\r\n    if (isThingLocal(thing)) {\r\n        if (typeof baseUrl === \"undefined\") {\r\n            throw new Error(\"The URL of a Thing that has not been persisted cannot be determined without a base URL.\");\r\n        }\r\n        return resolveLocalIri(getLocalNodeName(thing.url), baseUrl);\r\n    }\r\n    return thing.url;\r\n}\r\n/** @hidden Alias of [[asUrl]] for those who prefer IRI terminology. */\r\nconst asIri = asUrl;\r\n/**\r\n * Gets a human-readable representation of the given Thing to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param thing The Thing to get a human-readable representation of.\r\n * @since 0.3.0\r\n */\r\nfunction thingAsMarkdown(thing) {\r\n    let thingAsMarkdown = \"\";\r\n    if (isThingLocal(thing)) {\r\n        thingAsMarkdown += `## Thing (no URL yet — identifier: \\`#${getLocalNodeName(thing.url)}\\`)\\n`;\r\n    }\r\n    else {\r\n        thingAsMarkdown += `## Thing: ${thing.url}\\n`;\r\n    }\r\n    const predicateIris = Object.keys(thing.predicates);\r\n    if (predicateIris.length === 0) {\r\n        thingAsMarkdown += \"\\n<empty>\\n\";\r\n    }\r\n    else {\r\n        for (const predicate of predicateIris) {\r\n            thingAsMarkdown += `\\nProperty: ${predicate}\\n`;\r\n            const values = getTermAll(thing, predicate);\r\n            values.forEach((value) => {\r\n                thingAsMarkdown += `- ${internal_getReadableValue(value)}\\n`;\r\n            });\r\n        }\r\n    }\r\n    return thingAsMarkdown;\r\n}\r\n/**\r\n * @param thing The [[Thing]] of which a URL might or might not be known.\r\n * @return `true` if `thing` has no known URL yet.\r\n * @since 1.7.0\r\n */\r\nfunction isThingLocal(thing) {\r\n    return isLocalNodeIri(thing.url);\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a [[Thing]] but received something else.\r\n * @since 1.2.0\r\n */\r\nclass ThingExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const message = `Expected a Thing, but received: [${receivedValue}].`;\r\n        super(message);\r\n        this.receivedValue = receivedValue;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL to identify a property but received something else.\r\n */\r\nclass ValidPropertyUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL to identify a property, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedProperty = value;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL value but received something else.\r\n */\r\nclass ValidValueUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL value, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedValue = value;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL to identify a [[Thing]] but received something else.\r\n */\r\nclass ValidThingUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL to identify a Thing, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedValue = value;\r\n    }\r\n}\r\n/**\r\n * Generate a string that can be used as the unique identifier for a Thing\r\n *\r\n * This function works by starting with a date string (so that Things can be\r\n * sorted chronologically), followed by a random number generated by taking a\r\n * random number between 0 and 1, and cutting off the `0.`.\r\n *\r\n * @internal\r\n * @returns An string that's likely to be unique\r\n */\r\nconst generateName = () => {\r\n    return (Date.now().toString() + Math.random().toString().substring(\"0.\".length));\r\n};\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * This function normalizes IRIs as managed by the server to ease accurate comparison.\r\n * @param iri\r\n * @hidden\r\n */\r\nfunction normalizeServerSideIri(iri) {\r\n    const iriObj = new URL(iri);\r\n    iriObj.hash = \"\";\r\n    return iriObj.href;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Initialise a new [[SolidDataset]] in memory.\r\n *\r\n * @returns An empty [[SolidDataset]].\r\n */\r\nfunction createSolidDataset() {\r\n    return freeze({\r\n        type: \"Dataset\",\r\n        graphs: {\r\n            default: {},\r\n        },\r\n    });\r\n}\r\n/**\r\n * @hidden This interface is not exposed yet until we've tried it out in practice.\r\n */\r\nasync function responseToSolidDataset(response, parseOptions = {}) {\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the SolidDataset at [${response.url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = responseToResourceInfo(response);\r\n    const parsers = Object.assign({ \"text/turtle\": getTurtleParser() }, parseOptions.parsers);\r\n    const contentType = getContentType$1(resourceInfo);\r\n    if (contentType === null) {\r\n        throw new Error(`Could not determine the content type of the Resource at [${getSourceUrl(resourceInfo)}].`);\r\n    }\r\n    const mimeType = contentType.split(\";\")[0];\r\n    const parser = parsers[mimeType];\r\n    if (typeof parser === \"undefined\") {\r\n        throw new Error(`The Resource at [${getSourceUrl(resourceInfo)}] has a MIME type of [${mimeType}], but the only parsers available are for the following MIME types: [${Object.keys(parsers).join(\", \")}].`);\r\n    }\r\n    const data = await response.text();\r\n    const parsingPromise = new Promise((resolve, reject) => {\r\n        let solidDataset = freeze({\r\n            graphs: freeze({ default: freeze({}) }),\r\n            type: \"Dataset\",\r\n        });\r\n        // While Quads without Blank Nodes can be added to the SolidDataset as we\r\n        // encounter them, to parse Quads with Blank Nodes, we'll have to wait until\r\n        // we've seen all the Quads, so that we can reconcile equal Blank Nodes.\r\n        const quadsWithBlankNodes = [];\r\n        const allQuads = [];\r\n        parser.onError((error) => {\r\n            reject(new Error(`Encountered an error parsing the Resource at [${getSourceUrl(resourceInfo)}] with content type [${contentType}]: ${error}`));\r\n        });\r\n        parser.onQuad((quad) => {\r\n            allQuads.push(quad);\r\n            if (quad.subject.termType === \"BlankNode\" ||\r\n                quad.object.termType === \"BlankNode\") {\r\n                // Quads with Blank Nodes will be parsed when all Quads are known,\r\n                // so that equal Blank Nodes can be reconciled:\r\n                quadsWithBlankNodes.push(quad);\r\n            }\r\n            else {\r\n                solidDataset = addRdfJsQuadToDataset(solidDataset, quad);\r\n            }\r\n        });\r\n        parser.onComplete(async () => {\r\n            // If a Resource contains more than this number of Blank Nodes,\r\n            // we consider the detection of chains (O(n^2), I think) to be too\r\n            // expensive, and just incorporate them as regular Blank Nodes with\r\n            // non-deterministic, ad-hoc identifiers into the SolidDataset:\r\n            const maxBlankNodesToDetectChainsFor = 20;\r\n            // Some Blank Nodes only serve to use a set of Quads as the Object for a\r\n            // single Subject. Those Quads will be added to the SolidDataset when\r\n            // their Subject's Blank Node is encountered in the Object position.\r\n            const chainBlankNodes = quadsWithBlankNodes.length <= maxBlankNodesToDetectChainsFor\r\n                ? getChainBlankNodes(quadsWithBlankNodes)\r\n                : [];\r\n            const quadsWithoutChainBlankNodeSubjects = quadsWithBlankNodes.filter((quad) => chainBlankNodes.every((chainBlankNode) => !chainBlankNode.equals(quad.subject)));\r\n            solidDataset = quadsWithoutChainBlankNodeSubjects.reduce((datasetAcc, quad) => addRdfJsQuadToDataset(datasetAcc, quad, {\r\n                otherQuads: allQuads,\r\n                chainBlankNodes: chainBlankNodes,\r\n            }), solidDataset);\r\n            const solidDatasetWithResourceInfo = freeze(Object.assign(Object.assign({}, solidDataset), resourceInfo));\r\n            resolve(solidDatasetWithResourceInfo);\r\n        });\r\n        parser.parse(data, resourceInfo);\r\n    });\r\n    return await parsingPromise;\r\n}\r\n/**\r\n * Fetch a SolidDataset from the given URL. Currently requires the SolidDataset to be available as [Turtle](https://www.w3.org/TR/turtle/).\r\n *\r\n * Note that the URL of a container ends with a [trailing slash \"/\"](https://solidproject.org/TR/protocol#uri).\r\n * If it is missing, some libraries will add it automatically, which may result in additional round-trips, possibly including\r\n * authentication errors ([more information](https://github.com/inrupt/solid-client-js/issues/1216#issuecomment-904703695)).\r\n *\r\n * @param url URL to fetch a [[SolidDataset]] from.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a [[SolidDataset]] containing the data at the given Resource, or rejecting if fetching it failed.\r\n */\r\nasync function getSolidDataset(url, options = internal_defaultFetchOptions) {\r\n    var _a;\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const parserContentTypes = Object.keys((_a = options.parsers) !== null && _a !== void 0 ? _a : {});\r\n    const acceptedContentTypes = parserContentTypes.length > 0\r\n        ? parserContentTypes.join(\", \")\r\n        : \"text/turtle\";\r\n    const response = await config.fetch(url, {\r\n        headers: {\r\n            Accept: acceptedContentTypes,\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the Resource at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const solidDataset = await responseToSolidDataset(response, options);\r\n    return solidDataset;\r\n}\r\n/**\r\n * Create a SPARQL UPDATE Patch request from a [[SolidDataset]] with a changelog.\r\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\r\n * @returns an HTTP PATCH request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a SPARQL UPDATE.\r\n * @hidden\r\n */\r\nasync function prepareSolidDatasetUpdate(solidDataset) {\r\n    const deleteStatement = solidDataset.internal_changeLog.deletions.length > 0\r\n        ? `DELETE DATA {${(await triplesToTurtle(solidDataset.internal_changeLog.deletions.map(getNamedNodesForLocalNodes))).trim()}};`\r\n        : \"\";\r\n    const insertStatement = solidDataset.internal_changeLog.additions.length > 0\r\n        ? `INSERT DATA {${(await triplesToTurtle(solidDataset.internal_changeLog.additions.map(getNamedNodesForLocalNodes))).trim()}};`\r\n        : \"\";\r\n    return {\r\n        method: \"PATCH\",\r\n        body: `${deleteStatement} ${insertStatement}`,\r\n        headers: {\r\n            \"Content-Type\": \"application/sparql-update\",\r\n        },\r\n    };\r\n}\r\n/**\r\n * Create a Put request to write a locally created [[SolidDataset]] to a Pod.\r\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\r\n * @returns an HTTP PUT request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a serialization of the [[SolidDataset]].\r\n * @hidden\r\n */\r\nasync function prepareSolidDatasetCreation(solidDataset) {\r\n    return {\r\n        method: \"PUT\",\r\n        body: await triplesToTurtle(toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes)),\r\n        headers: {\r\n            \"Content-Type\": \"text/turtle\",\r\n            \"If-None-Match\": \"*\",\r\n            Link: `<${ldp.Resource}>; rel=\"type\"`,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Given a SolidDataset, store it in a Solid Pod (overwriting the existing data at the given URL).\r\n *\r\n * A SolidDataset keeps track of the data changes compared to the data in the Pod; i.e.,\r\n * the changelog tracks both the old value and new values of the property being modified. This\r\n * function applies the changes to the current SolidDataset. If the old value specified in the\r\n * changelog does not correspond to the value currently in the Pod, this function will throw an\r\n * error (common issues are listed in [the documentation](https://docs.inrupt.com/developer-tools/javascript/client-libraries/reference/error-codes/)).\r\n *\r\n * The SolidDataset returned by this function will contain the data sent to the Pod, and a ChangeLog\r\n * up-to-date with the saved data. Note that if the data on the server was modified in between the\r\n * first fetch and saving it, the updated data will not be reflected in the returned SolidDataset.\r\n * To make sure you have the latest data, call [[getSolidDataset]] again after saving the data.\r\n *\r\n * The Solid server will create any intermediary Containers that do not exist yet, so they do not\r\n * need to be created in advance. For example, if the target URL is\r\n * https://example.pod/container/resource and https://example.pod/container/ does not exist yet,\r\n * it will exist after this function resolves successfully.\r\n *\r\n * @param url URL to save `solidDataset` to.\r\n * @param solidDataset The [[SolidDataset]] to save.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Promise resolving to a [[SolidDataset]] containing the stored data, or rejecting if saving it failed.\r\n */\r\nasync function saveSolidDatasetAt(url, solidDataset, options = internal_defaultFetchOptions) {\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const datasetWithChangelog = internal_withChangeLog(solidDataset);\r\n    const requestInit = isUpdate(datasetWithChangelog, url)\r\n        ? await prepareSolidDatasetUpdate(datasetWithChangelog)\r\n        : await prepareSolidDatasetCreation(datasetWithChangelog);\r\n    const response = await config.fetch(url, requestInit);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        const diagnostics = isUpdate(datasetWithChangelog, url)\r\n            ? \"The changes that were sent to the Pod are listed below.\\n\\n\" +\r\n                changeLogAsMarkdown(datasetWithChangelog)\r\n            : \"The SolidDataset that was sent to the Pod is listed below.\\n\\n\" +\r\n                solidDatasetAsMarkdown(datasetWithChangelog);\r\n        throw new FetchError(`Storing the Resource at [${url}] failed: [${response.status}] [${response.statusText}].\\n\\n` +\r\n            diagnostics, response);\r\n    }\r\n    const resourceInfo = Object.assign(Object.assign({}, internal_parseResourceInfo(response)), { isRawData: false });\r\n    const storedDataset = freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    const storedDatasetWithResolvedIris = resolveLocalIrisInSolidDataset(storedDataset);\r\n    return storedDatasetWithResolvedIris;\r\n}\r\n/**\r\n * Deletes the SolidDataset at a given URL.\r\n *\r\n * If operating on a container, the container must be empty otherwise a 409 CONFLICT will be raised.\r\n *\r\n * @param file The (URL of the) SolidDataset to delete\r\n * @since 0.6.0\r\n */\r\nasync function deleteSolidDataset(solidDataset, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const url = hasResourceInfo(solidDataset)\r\n        ? internal_toIriString(getSourceUrl(solidDataset))\r\n        : internal_toIriString(solidDataset);\r\n    const response = await config.fetch(url, { method: \"DELETE\" });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the SolidDataset at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * Create a Container at the given URL. Some content may optionally be specified,\r\n * e.g. to add metadata describing the container.\r\n *\r\n * Throws an error if creating the Container failed, e.g. because the current user does not have\r\n * permissions to, or because the Container already exists.\r\n *\r\n * Note that a Solid server will automatically create the necessary Containers when storing a\r\n * Resource; i.e. there is no need to call this function if it is immediately followed by\r\n * [[saveSolidDatasetAt]] or [[overwriteFile]].\r\n *\r\n * @param url URL of the empty Container that is to be created.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @param solidDataset Optional parameter - if provided we use this dataset as the body of the HTT request, meaning it's data is included in the Container resource.\r\n * @since 0.2.0\r\n */\r\nasync function createContainerAt(url, options = internal_defaultFetchOptions) {\r\n    var _a;\r\n    url = internal_toIriString(url);\r\n    url = url.endsWith(\"/\") ? url : url + \"/\";\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, {\r\n        method: \"PUT\",\r\n        body: config.initialContent\r\n            ? await triplesToTurtle(toRdfJsQuads(config.initialContent).map(getNamedNodesForLocalNodes))\r\n            : undefined,\r\n        headers: {\r\n            Accept: \"text/turtle\",\r\n            \"Content-Type\": \"text/turtle\",\r\n            \"If-None-Match\": \"*\",\r\n            // This header should not be required to create a Container,\r\n            // but ESS currently expects it:\r\n            Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        if (response.status === 409 &&\r\n            response.statusText === \"Conflict\" &&\r\n            (await response.text()).trim() ===\r\n                internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465) {\r\n            return createContainerWithNssWorkaroundAt(url, options);\r\n        }\r\n        const containerType = config.initialContent === undefined ? \"empty\" : \"non-empty\";\r\n        throw new FetchError(`Creating the ${containerType} Container at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    const containerDataset = freeze(Object.assign(Object.assign({}, ((_a = options.initialContent) !== null && _a !== void 0 ? _a : createSolidDataset())), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    return containerDataset;\r\n}\r\n/**\r\n * Unfortunately Node Solid Server does not confirm to the Solid spec when it comes to Container\r\n * creation. When we make the (valid, according to the Solid protocol) request to create a\r\n * Container, NSS responds with the following exact error message. Thus, when we encounter exactly\r\n * this message, we use an NSS-specific workaround ([[createContainerWithNssWorkaroundAt]]). Both\r\n * this constant and that workaround should be removed once the NSS issue has been fixed and\r\n * no versions of NSS with the issue are in common use/supported anymore.\r\n *\r\n * @see https://github.com/solid/node-solid-server/issues/1465\r\n * @internal\r\n */\r\nconst internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465 = \"Can't write file: PUT not supported on containers, use POST instead\";\r\n/**\r\n * Unfortunately Node Solid Server does not confirm to the Solid spec when it comes to Container\r\n * creation. As a workaround, we create a dummy file _inside_ the desired Container (which should\r\n * create the desired Container on the fly), and then delete it again.\r\n *\r\n * @see https://github.com/solid/node-solid-server/issues/1465\r\n */\r\nconst createContainerWithNssWorkaroundAt = async (url, options) => {\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    let existingContainer;\r\n    try {\r\n        existingContainer = await getResourceInfo(url, options);\r\n    }\r\n    catch (e) {\r\n        // To create the Container, we'd want it to not exist yet. In other words, we'd expect to get\r\n        // a 404 error here in the happy path - so do nothing if that's the case.\r\n        if (!(e instanceof FetchError) || e.statusCode !== 404) {\r\n            // (But if we get an error other than a 404, just throw that error like we usually would.)\r\n            throw e;\r\n        }\r\n    }\r\n    if (typeof existingContainer !== \"undefined\") {\r\n        throw new Error(`The Container at [${url}] already exists, and therefore cannot be created again.`);\r\n    }\r\n    const dummyUrl = url + \".dummy\";\r\n    const createResponse = await config.fetch(dummyUrl, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"text/turtle\",\r\n            \"Content-Type\": \"text/turtle\",\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(createResponse)) {\r\n        throw new FetchError(`Creating the empty Container at [${url}] failed: [${createResponse.status}] [${createResponse.statusText}].`, createResponse);\r\n    }\r\n    await config.fetch(dummyUrl, { method: \"DELETE\" });\r\n    const containerInfoResponse = await config.fetch(url, { method: \"HEAD\" });\r\n    const resourceInfo = internal_parseResourceInfo(containerInfoResponse);\r\n    const containerDataset = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    return containerDataset;\r\n};\r\nfunction isSourceIriEqualTo(dataset, iri) {\r\n    return (normalizeServerSideIri(dataset.internal_resourceInfo.sourceIri) ===\r\n        normalizeServerSideIri(iri));\r\n}\r\nfunction isUpdate(solidDataset, url) {\r\n    return (hasChangelog(solidDataset) &&\r\n        hasResourceInfo(solidDataset) &&\r\n        typeof solidDataset.internal_resourceInfo.sourceIri === \"string\" &&\r\n        isSourceIriEqualTo(solidDataset, url));\r\n}\r\n/**\r\n * Given a SolidDataset, store it in a Solid Pod in a new Resource inside a Container.\r\n *\r\n * The Container at the given URL should already exist; if it does not, you can initialise it first\r\n * using [[createContainerAt]], or directly save the SolidDataset at the desired location using\r\n * [[saveSolidDatasetAt]].\r\n *\r\n * This function is primarily useful if the current user does not have access to change existing files in\r\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\r\n * access to a Container. This is useful in situations where someone wants to allow others to,\r\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\r\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\r\n * another name — for example, if a Resource with that name already exists inside the given\r\n * Container.\r\n * If the user does have access to write directly to a given location, [[saveSolidDatasetAt]]\r\n * will do the job just fine, and does not require the parent Container to exist in advance.\r\n *\r\n * @param containerUrl URL of the Container in which to create a new Resource.\r\n * @param solidDataset The [[SolidDataset]] to save to a new Resource in the given Container.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Promise resolving to a [[SolidDataset]] containing the saved data. The Promise rejects if the save failed.\r\n */\r\nasync function saveSolidDatasetInContainer(containerUrl, solidDataset, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    containerUrl = internal_toIriString(containerUrl);\r\n    const rawTurtle = await triplesToTurtle(toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes));\r\n    const headers = {\r\n        \"Content-Type\": \"text/turtle\",\r\n        Link: `<${ldp.Resource}>; rel=\"type\"`,\r\n    };\r\n    if (options.slugSuggestion) {\r\n        headers.slug = options.slugSuggestion;\r\n    }\r\n    const response = await config.fetch(containerUrl, {\r\n        method: \"POST\",\r\n        body: rawTurtle,\r\n        headers: headers,\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Storing the Resource in the Container at [${containerUrl}] failed: [${response.status}] [${response.statusText}].\\n\\n` +\r\n            \"The SolidDataset that was sent to the Pod is listed below.\\n\\n\" +\r\n            solidDatasetAsMarkdown(solidDataset), response);\r\n    }\r\n    const internalResourceInfo = internal_parseResourceInfo(response);\r\n    if (!internalResourceInfo.location) {\r\n        throw new Error(\"Could not determine the location of the newly saved SolidDataset.\");\r\n    }\r\n    let resourceIri;\r\n    try {\r\n        // Try to parse the location header as a URL (safe if it's an absolute URL)``\r\n        // This should help determine the container URL if normalisation happened on the server side.\r\n        resourceIri = new URL(internalResourceInfo.location).href;\r\n    }\r\n    catch (e) {\r\n        // If it's a relative URL then, rely on the response.url to construct the sourceIri\r\n        resourceIri = new URL(internalResourceInfo.location, response.url).href;\r\n    }\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: false,\r\n            sourceIri: resourceIri,\r\n        },\r\n    };\r\n    const resourceWithResourceInfo = freeze(Object.assign(Object.assign({}, solidDataset), resourceInfo));\r\n    const resourceWithResolvedIris = resolveLocalIrisInSolidDataset(resourceWithResourceInfo);\r\n    return resourceWithResolvedIris;\r\n}\r\n/**\r\n * Create an empty Container inside the Container at the given URL.\r\n *\r\n * Throws an error if creating the Container failed, e.g. because the current user does not have\r\n * permissions to.\r\n *\r\n * The Container in which to create the new Container should itself already exist.\r\n *\r\n * This function is primarily useful if the current user does not have access to change existing files in\r\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\r\n * access to a Container. This is useful in situations where someone wants to allow others to,\r\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\r\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\r\n * another name — for example, if a Resource with that name already exists inside the given\r\n * Container.\r\n * If the user does have access to write directly to a given location, [[createContainerAt]]\r\n * will do the job just fine, and does not require the parent Container to exist in advance.\r\n *\r\n * @param containerUrl URL of the Container in which the empty Container is to be created.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 0.2.0\r\n */\r\nasync function createContainerInContainer(containerUrl, options = internal_defaultFetchOptions) {\r\n    containerUrl = internal_toIriString(containerUrl);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const headers = {\r\n        \"Content-Type\": \"text/turtle\",\r\n        Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\r\n    };\r\n    if (options.slugSuggestion) {\r\n        headers.slug = options.slugSuggestion;\r\n    }\r\n    const response = await config.fetch(containerUrl, {\r\n        method: \"POST\",\r\n        headers: headers,\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Creating an empty Container in the Container at [${containerUrl}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const internalResourceInfo = internal_parseResourceInfo(response);\r\n    if (!internalResourceInfo.location) {\r\n        throw new Error(\"Could not determine the location of the newly created Container.\");\r\n    }\r\n    try {\r\n        // Try to parse the location header as a URL (safe if it's an absolute URL)``\r\n        // This should help determine the container URL if normalisation happened on the server side.\r\n        const sourceIri = new URL(internalResourceInfo.location).toString();\r\n        return freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_resourceInfo: Object.assign(Object.assign({}, internalResourceInfo), { sourceIri }) }));\r\n    }\r\n    catch (e) {\r\n        // If it's a relative URL then, rely on the response.url to construct the sourceIri\r\n    }\r\n    return freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_resourceInfo: Object.assign(Object.assign({}, internalResourceInfo), { sourceIri: new URL(internalResourceInfo.location, response.url).href }) }));\r\n}\r\n/**\r\n * Deletes the Container at a given URL.\r\n *\r\n * @param file The (URL of the) Container to delete\r\n * @since 0.6.0\r\n */\r\nasync function deleteContainer(container, options = internal_defaultFetchOptions) {\r\n    const url = hasResourceInfo(container)\r\n        ? internal_toIriString(getSourceUrl(container))\r\n        : internal_toIriString(container);\r\n    if (!isContainer(container)) {\r\n        throw new Error(`You're trying to delete the Container at [${url}], but Container URLs should end in a \\`/\\`. Are you sure this is a Container?`);\r\n    }\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, { method: \"DELETE\" });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the Container at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * Given a [[SolidDataset]] representing a Container (see [[isContainer]]), fetch the URLs of all\r\n * contained resources.\r\n * If the solidDataset given is not a container, or is missing resourceInfo, throw an error.\r\n *\r\n * @param solidDataset The container from which to fetch all contained Resource URLs.\r\n * @returns A list of URLs, each of which points to a contained Resource of the given SolidDataset.\r\n * @since 1.3.0\r\n */\r\nfunction getContainedResourceUrlAll(solidDataset) {\r\n    const container = getThing(solidDataset, getSourceUrl(solidDataset));\r\n    // See https://www.w3.org/TR/2015/REC-ldp-20150226/#h-ldpc-http_post:\r\n    // > a containment triple MUST be added to the state of the LDPC whose subject is the LDPC URI,\r\n    // > whose predicate is ldp:contains and whose object is the URI for the newly created document\r\n    return container !== null ? getIriAll(container, ldp.contains) : [];\r\n}\r\n/**\r\n * Gets a human-readable representation of the given SolidDataset to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param solidDataset The [[SolidDataset]] to get a human-readable representation of.\r\n * @since 0.3.0\r\n */\r\nfunction solidDatasetAsMarkdown(solidDataset) {\r\n    let readableSolidDataset = \"\";\r\n    if (hasResourceInfo(solidDataset)) {\r\n        readableSolidDataset += `# SolidDataset: ${getSourceUrl(solidDataset)}\\n`;\r\n    }\r\n    else {\r\n        readableSolidDataset += `# SolidDataset (no URL yet)\\n`;\r\n    }\r\n    const things = getThingAll(solidDataset);\r\n    if (things.length === 0) {\r\n        readableSolidDataset += \"\\n<empty>\\n\";\r\n    }\r\n    else {\r\n        things.forEach((thing) => {\r\n            readableSolidDataset += \"\\n\" + thingAsMarkdown(thing);\r\n            if (hasChangelog(solidDataset)) {\r\n                readableSolidDataset +=\r\n                    \"\\n\" + getReadableChangeLogSummary(solidDataset, thing) + \"\\n\";\r\n            }\r\n        });\r\n    }\r\n    return readableSolidDataset;\r\n}\r\n/**\r\n * Gets a human-readable representation of the local changes to a Resource to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param solidDataset The Resource of which to get a human-readable representation of the changes applied to it locally.\r\n * @since 0.3.0\r\n */\r\nfunction changeLogAsMarkdown(solidDataset) {\r\n    if (!hasResourceInfo(solidDataset)) {\r\n        return \"This is a newly initialized SolidDataset, so there is no source to compare it to.\";\r\n    }\r\n    if (!hasChangelog(solidDataset) ||\r\n        (solidDataset.internal_changeLog.additions.length === 0 &&\r\n            solidDataset.internal_changeLog.deletions.length === 0)) {\r\n        return (`## Changes compared to ${getSourceUrl(solidDataset)}\\n\\n` +\r\n            `This SolidDataset has not been modified since it was fetched from ${getSourceUrl(solidDataset)}.\\n`);\r\n    }\r\n    let readableChangeLog = `## Changes compared to ${getSourceUrl(solidDataset)}\\n`;\r\n    const changeLogsByThingAndProperty = sortChangeLogByThingAndProperty(solidDataset);\r\n    Object.keys(changeLogsByThingAndProperty).forEach((thingUrl) => {\r\n        readableChangeLog += `\\n### Thing: ${thingUrl}\\n`;\r\n        const changeLogByProperty = changeLogsByThingAndProperty[thingUrl];\r\n        Object.keys(changeLogByProperty).forEach((propertyUrl) => {\r\n            readableChangeLog += `\\nProperty: ${propertyUrl}\\n`;\r\n            const deleted = changeLogByProperty[propertyUrl].deleted;\r\n            const added = changeLogByProperty[propertyUrl].added;\r\n            if (deleted.length > 0) {\r\n                readableChangeLog += \"- Removed:\\n\";\r\n                deleted.forEach((deletedValue) => (readableChangeLog += `  - ${internal_getReadableValue(deletedValue)}\\n`));\r\n            }\r\n            if (added.length > 0) {\r\n                readableChangeLog += \"- Added:\\n\";\r\n                added.forEach((addedValue) => (readableChangeLog += `  - ${internal_getReadableValue(addedValue)}\\n`));\r\n            }\r\n        });\r\n    });\r\n    return readableChangeLog;\r\n}\r\nfunction sortChangeLogByThingAndProperty(solidDataset) {\r\n    const changeLogsByThingAndProperty = {};\r\n    solidDataset.internal_changeLog.deletions.forEach((deletion) => {\r\n        var _a, _b;\r\n        var _c;\r\n        const subjectNode = isLocalNode(deletion.subject)\r\n            ? /* istanbul ignore next: Unsaved deletions should be removed from the additions list instead, so this code path shouldn't be hit: */\r\n                resolveIriForLocalNode(deletion.subject, getSourceUrl(solidDataset))\r\n            : deletion.subject;\r\n        if (!isNamedNode(subjectNode) || !isNamedNode(deletion.predicate)) {\r\n            return;\r\n        }\r\n        const thingUrl = internal_toIriString(subjectNode);\r\n        const propertyUrl = internal_toIriString(deletion.predicate);\r\n        (_a = changeLogsByThingAndProperty[thingUrl]) !== null && _a !== void 0 ? _a : (changeLogsByThingAndProperty[thingUrl] = {});\r\n        (_b = (_c = changeLogsByThingAndProperty[thingUrl])[propertyUrl]) !== null && _b !== void 0 ? _b : (_c[propertyUrl] = {\r\n            added: [],\r\n            deleted: [],\r\n        });\r\n        changeLogsByThingAndProperty[thingUrl][propertyUrl].deleted.push(deletion.object);\r\n    });\r\n    solidDataset.internal_changeLog.additions.forEach((addition) => {\r\n        var _a, _b;\r\n        var _c;\r\n        const subjectNode = isLocalNode(addition.subject)\r\n            ? /* istanbul ignore next: setThing already resolves local Subjects when adding them, so this code path should never be hit. */\r\n                resolveIriForLocalNode(addition.subject, getSourceUrl(solidDataset))\r\n            : addition.subject;\r\n        if (!isNamedNode(subjectNode) || !isNamedNode(addition.predicate)) {\r\n            return;\r\n        }\r\n        const thingUrl = internal_toIriString(subjectNode);\r\n        const propertyUrl = internal_toIriString(addition.predicate);\r\n        (_a = changeLogsByThingAndProperty[thingUrl]) !== null && _a !== void 0 ? _a : (changeLogsByThingAndProperty[thingUrl] = {});\r\n        (_b = (_c = changeLogsByThingAndProperty[thingUrl])[propertyUrl]) !== null && _b !== void 0 ? _b : (_c[propertyUrl] = {\r\n            added: [],\r\n            deleted: [],\r\n        });\r\n        changeLogsByThingAndProperty[thingUrl][propertyUrl].added.push(addition.object);\r\n    });\r\n    return changeLogsByThingAndProperty;\r\n}\r\nfunction getReadableChangeLogSummary(solidDataset, thing) {\r\n    const subject = DataFactory.namedNode(thing.url);\r\n    const nrOfAdditions = solidDataset.internal_changeLog.additions.reduce((count, addition) => (addition.subject.equals(subject) ? count + 1 : count), 0);\r\n    const nrOfDeletions = solidDataset.internal_changeLog.deletions.reduce((count, deletion) => (deletion.subject.equals(subject) ? count + 1 : count), 0);\r\n    const additionString = nrOfAdditions === 1\r\n        ? \"1 new value added\"\r\n        : nrOfAdditions + \" new values added\";\r\n    const deletionString = nrOfDeletions === 1 ? \"1 value removed\" : nrOfDeletions + \" values removed\";\r\n    return `(${additionString} / ${deletionString})`;\r\n}\r\nfunction getNamedNodesForLocalNodes(quad) {\r\n    const subject = isNamedNode(quad.subject)\r\n        ? getNamedNodeFromLocalNode(quad.subject)\r\n        : /* istanbul ignore next: We don't allow non-NamedNodes as the Subject, so this code path should never be hit: */\r\n            quad.subject;\r\n    const object = isNamedNode(quad.object)\r\n        ? getNamedNodeFromLocalNode(quad.object)\r\n        : quad.object;\r\n    return DataFactory.quad(subject, quad.predicate, object, quad.graph);\r\n}\r\nfunction getNamedNodeFromLocalNode(node) {\r\n    if (isLocalNodeIri(node.value)) {\r\n        return DataFactory.namedNode(\"#\" + getLocalNodeName(node.value));\r\n    }\r\n    return node;\r\n}\r\nfunction resolveLocalIrisInSolidDataset(solidDataset) {\r\n    const resourceIri = getSourceUrl(solidDataset);\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const thingIris = Object.keys(defaultGraph);\r\n    const updatedDefaultGraph = thingIris.reduce((graphAcc, thingIri) => {\r\n        const resolvedThing = resolveLocalIrisInThing(graphAcc[thingIri], resourceIri);\r\n        const resolvedThingIri = isLocalNodeIri(thingIri)\r\n            ? `${resourceIri}#${getLocalNodeName(thingIri)}`\r\n            : thingIri;\r\n        const updatedGraph = Object.assign({}, graphAcc);\r\n        delete updatedGraph[thingIri];\r\n        updatedGraph[resolvedThingIri] = resolvedThing;\r\n        return freeze(updatedGraph);\r\n    }, defaultGraph);\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: updatedDefaultGraph }));\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs }));\r\n}\r\nfunction resolveLocalIrisInThing(thing, baseIri) {\r\n    const predicateIris = Object.keys(thing.predicates);\r\n    const updatedPredicates = predicateIris.reduce((predicatesAcc, predicateIri) => {\r\n        var _a;\r\n        const namedNodes = (_a = predicatesAcc[predicateIri].namedNodes) !== null && _a !== void 0 ? _a : [];\r\n        if (namedNodes.every((namedNode) => !isLocalNodeIri(namedNode))) {\r\n            // This Predicate has no local node Objects, so return it unmodified:\r\n            return predicatesAcc;\r\n        }\r\n        const updatedNamedNodes = freeze(namedNodes.map((namedNode) => isLocalNodeIri(namedNode)\r\n            ? `${baseIri}#${getLocalNodeName(namedNode)}`\r\n            : namedNode));\r\n        const updatedPredicate = freeze(Object.assign(Object.assign({}, predicatesAcc[predicateIri]), { namedNodes: updatedNamedNodes }));\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { [predicateIri]: updatedPredicate }));\r\n    }, thing.predicates);\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates, url: isLocalNodeIri(thing.url)\r\n            ? `${baseIri}#${getLocalNodeName(thing.url)}`\r\n            : thing.url }));\r\n}\r\n/**\r\n * @hidden\r\n *\r\n * Fetch a SolidDataset containing information about the capabilities of the\r\n * storage server that hosts the given resource URL. For more information,\r\n * please see the [ESS\r\n * Documentation](https://docs.inrupt.com/ess/latest/services/discovery-endpoint/#well-known-solid).\r\n *\r\n * **Note:** The data contained in this dataset has changed between ESS 1.1 and\r\n * ESS 2.0, as such you will need to check for multiple predicates to support\r\n * both versions.\r\n *\r\n * ```typescript\r\n * const wellKnown = await getWellKnownSolid(resource);\r\n *\r\n * // The wellKnown dataset uses a blank node for the subject all of it’s predicates,\r\n * // such that we need to call getThingAll with acceptBlankNodes set to true to\r\n * // retrieve back predicates contained within the dataset\r\n * const wellKnownSubjects = getThingAll(wellKnown, {\r\n *   acceptBlankNodes: true,\r\n * });\r\n * const wellKnownSubject = wellKnownSubjects[0];\r\n *\r\n * // Retrieve a value from the wellKnown dataset:\r\n * let notificationGateway = getIri(\r\n *   wellKnownSubject,\r\n *   \"http://www.w3.org/ns/solid/terms#notificationGateway\"\r\n * );\r\n * ```\r\n *\r\n *\r\n * @param url URL of a Resource.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch`\r\n * function to make the HTTP request, compatible with the browser-native [fetch\r\n * API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a [[SolidDataset]] containing the data at\r\n * '.well-known/solid' for the given Resource, or rejecting if fetching it\r\n * failed.\r\n * @since 1.12.0\r\n */\r\nasync function getWellKnownSolid(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    // Try to fetch the well-known solid dataset from the server's root\r\n    try {\r\n        const wellKnownSolidUrl = new URL(\"/.well-known/solid\", new URL(urlString).origin).href;\r\n        return await getSolidDataset(wellKnownSolidUrl);\r\n    }\r\n    catch (e) {\r\n        // In case of error, do nothing and try to discover the .well-known\r\n        // at the pod's root.\r\n    }\r\n    const resourceMetadata = await getResourceInfo(urlString, {\r\n        fetch: options.fetch,\r\n        // Discovering the .well-known/solid document is useful even for resources\r\n        // we don't have access to.\r\n        ignoreAuthenticationErrors: true,\r\n    });\r\n    const linkedResources = getLinkedResourceUrlAll(resourceMetadata);\r\n    const rootResources = linkedResources[pim.storage];\r\n    const rootResource = (rootResources === null || rootResources === void 0 ? void 0 : rootResources.length) === 1 ? rootResources[0] : null;\r\n    // If pod root (storage) was advertised, retrieve well known solid from pod's root\r\n    if (rootResource !== null) {\r\n        const wellKnownSolidUrl = new URL(\".well-known/solid\", rootResource.endsWith(\"/\") ? rootResource : rootResource + \"/\").href;\r\n        return await getSolidDataset(wellKnownSolidUrl, Object.assign(Object.assign({}, options), { parsers: {\r\n                \"application/ld+json\": getJsonLdParser(),\r\n            } }));\r\n    }\r\n    throw new Error(\"Could not determine storage root or well-known solid resource.\");\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst { Response } = crossFetch;\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new [[SolidDataset]] with metadata as though the\r\n * SolidDataset has been retrieved from the given URL. The mock SolidDataset can be used in\r\n * unit tests that require persisted SolidDatasets; e.g., unit tests that call [[getSourceUrl]].\r\n *\r\n * @param url The URL from which the returned SolidDataset appears to be retrieved.\r\n * @returns A mock SolidDataset that appears to be retrieved from the `url`.\r\n * @since 0.2.0\r\n */\r\nfunction mockSolidDatasetFrom(url) {\r\n    const solidDataset = createSolidDataset();\r\n    const solidDatasetWithResourceInfo = Object.assign(Object.assign({}, solidDataset), { internal_resourceInfo: {\r\n            sourceIri: internal_toIriString(url),\r\n            isRawData: false,\r\n            contentType: \"text/turtle\",\r\n            linkedResources: {},\r\n        } });\r\n    return solidDatasetWithResourceInfo;\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new Container [[SolidDataset]] with metadata as though the\r\n * Container has been retrieved from the given URL. The mock SolidDataset can be used in\r\n * unit tests that require persisted Containers; e.g., unit tests that call [[isContainer]].\r\n *\r\n * @param url The URL from which the returned Container appears to be retrieved. The `url` must end in a slash.\r\n * @returns A mock SolidDataset that appears to be retrieved from the `url`.\r\n * @since 0.2.0\r\n */\r\nfunction mockContainerFrom(url) {\r\n    const sourceIri = internal_toIriString(url);\r\n    if (!sourceIri.endsWith(\"/\")) {\r\n        throw new Error(\"A Container's URL should end in a slash. Please update your tests.\");\r\n    }\r\n    return mockSolidDatasetFrom(sourceIri);\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new File with metadata as though the\r\n * File has been retrieved from the given URL. The mock File can be used in\r\n * unit tests that require persisted Files; e.g. unit tests that call [[getSourceUrl]].\r\n *\r\n * @param url The URL from which the returned File appears to be retrieved.\r\n * @returns A mock File that appears to be retrieved from the `url`.\r\n * @since 0.2.0\r\n */\r\nfunction mockFileFrom(url, options) {\r\n    const file = new Blob();\r\n    const fileWithResourceInfo = Object.assign(file, {\r\n        internal_resourceInfo: {\r\n            sourceIri: internal_toIriString(url),\r\n            isRawData: true,\r\n            contentType: options === null || options === void 0 ? void 0 : options.contentType,\r\n            linkedResources: {},\r\n        },\r\n    });\r\n    return fileWithResourceInfo;\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests**.\r\n * ```\r\n *\r\n * This function initialises a new Error object with metadata as though the\r\n * it was the result of getting a 404 when trying to fetch the Resource at the\r\n * given URL. The mock Error can be used in unit tests that require functions\r\n * that fetch Resources (like [[getSolidDataset]]) to fail.\r\n *\r\n * @param url The URL of the Resource that could not be fetched according to the error.\r\n * @param statusCode Optional status code (defaults to 404) that caused the error.\r\n * @returns A mock Error that represents not having been able to fetch the Resource at `url` due to a 404 Response.\r\n * @since 1.1.0\r\n */\r\nfunction mockFetchError(fetchedUrl, statusCode = 404) {\r\n    const failedResponse = new Response(undefined, {\r\n        status: statusCode,\r\n    });\r\n    return new FetchError(`Fetching the Resource at [${fetchedUrl}] failed: [${failedResponse.status}] [${failedResponse.statusText}].`, failedResponse);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create a new Thing with a URL added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setUrl]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a URL value to.\r\n * @param property Property for which to add the given URL value.\r\n * @param url URL to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addUrl = (thing, property, url) => {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    if (!isThing(url) && !internal_isValidUrl(url)) {\r\n        throw new ValidValueUrlExpectedError(url);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingNamedNodes = (_b = existingPredicate.namedNodes) !== null && _b !== void 0 ? _b : [];\r\n    let iriToAdd;\r\n    if (isNamedNode(url)) {\r\n        iriToAdd = url.value;\r\n    }\r\n    else if (typeof url === \"string\") {\r\n        iriToAdd = url;\r\n    }\r\n    else if (isThingLocal(url)) {\r\n        iriToAdd = url.url;\r\n    }\r\n    else {\r\n        iriToAdd = asIri(url);\r\n    }\r\n    const updatedNamedNodes = freeze(existingNamedNodes.concat(internal_toIriString(iriToAdd)));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { namedNodes: updatedNamedNodes }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n};\r\n/** @hidden Alias for [[addUrl]] for those who prefer IRI terminology. */\r\nconst addIri = addUrl;\r\n/**\r\n * Create a new Thing with a boolean added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setBoolean]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a boolean value to.\r\n * @param property Property for which to add the given boolean value.\r\n * @param value Boolean to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeBoolean(value), xmlSchemaTypes.boolean);\r\n};\r\n/**\r\n * Create a new Thing with a datetime added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a datetime value to.\r\n * @param property Property for which to add the given datetime value.\r\n * @param value Datetime to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDatetime(value), xmlSchemaTypes.dateTime);\r\n};\r\n/**\r\n * Create a new Thing with a date added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDate]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a date value to.\r\n * @param property Property for which to add the given date value.\r\n * @param value Date to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst addDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDate(value), xmlSchemaTypes.date);\r\n};\r\n/**\r\n * Create a new Thing with a time added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a datetime value to.\r\n * @param property Property for which to add the given datetime value.\r\n * @param value time to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst addTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeTime(value), xmlSchemaTypes.time);\r\n};\r\n/**\r\n * Create a new Thing with a decimal added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDecimal]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a decimal value to.\r\n * @param property Property for which to add the given decimal value.\r\n * @param value Decimal to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDecimal(value), xmlSchemaTypes.decimal);\r\n};\r\n/**\r\n * Create a new Thing with an integer added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setInteger]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add an integer value to.\r\n * @param property Property for which to add the given integer value.\r\n * @param value Integer to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeInteger(value), xmlSchemaTypes.integer);\r\n};\r\n/**\r\n * Create a new Thing with an English string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringEnglish]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a localised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.13.0\r\n */\r\nfunction addStringEnglish(thing, property, value) {\r\n    return addStringWithLocale(thing, property, value, \"en\");\r\n}\r\n/**\r\n * Create a new Thing with a localised string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringWithLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a localised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @param locale Locale of the added string.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addStringWithLocale(thing, property, value, locale) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const normalizedLocale = normalizeLocale(locale);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLangStrings = (_b = existingPredicate.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingStringsInLocale = (_c = existingLangStrings[normalizedLocale]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedStringsInLocale = freeze(existingStringsInLocale.concat(value));\r\n    const updatedLangStrings = freeze(Object.assign(Object.assign({}, existingLangStrings), { [normalizedLocale]: updatedStringsInLocale }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { langStrings: updatedLangStrings }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\r\n/**\r\n * Create a new Thing with an unlocalised string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringNoLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add an unlocalised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, value, xmlSchemaTypes.string);\r\n};\r\n/**\r\n * Create a new Thing with a Named Node added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setNamedNode]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Named Node to.\r\n * @param property Property for which to add a value.\r\n * @param value The Named Node to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addNamedNode(thing, property, value) {\r\n    return addUrl(thing, property, value.value);\r\n}\r\n/**\r\n * Create a new Thing with a Literal added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setLiteral]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Literal to.\r\n * @param property Property for which to add a value.\r\n * @param value The Literal to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addLiteral(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const typeIri = value.datatype.value;\r\n    if (typeIri === xmlSchemaTypes.langString) {\r\n        return addStringWithLocale(thing, property, value.value, value.language);\r\n    }\r\n    return addLiteralOfType(thing, property, value.value, value.datatype.value);\r\n}\r\n/**\r\n * Creates a new Thing with a Term added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setTerm]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Term to.\r\n * @param property Property for which to add a value.\r\n * @param value The Term to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 0.3.0\r\n */\r\nfunction addTerm(thing, property, value) {\r\n    var _a, _b;\r\n    if (value.termType === \"NamedNode\") {\r\n        return addNamedNode(thing, property, value);\r\n    }\r\n    if (value.termType === \"Literal\") {\r\n        return addLiteral(thing, property, value);\r\n    }\r\n    if (value.termType === \"BlankNode\") {\r\n        internal_throwIfNotThing(thing);\r\n        if (!internal_isValidUrl(property)) {\r\n            throw new ValidPropertyUrlExpectedError(property);\r\n        }\r\n        const predicateIri = internal_toIriString(property);\r\n        const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n        const existingBlankNodes = (_b = existingPredicate.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n        const updatedBlankNodes = freeze(existingBlankNodes.concat(getBlankNodeId(value)));\r\n        const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { blankNodes: updatedBlankNodes }));\r\n        const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n        const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n        return updatedThing;\r\n    }\r\n    throw new Error(`Term type [${value.termType}] is not supported by @inrupt/solid-client.`);\r\n}\r\nfunction addLiteralOfType(thing, property, value, type) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicate.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[type]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValuesOfType = freeze(existingValuesOfType.concat(value));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [type]: updatedValuesOfType }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction removeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const newPredicates = Object.assign({}, thing.predicates);\r\n    delete newPredicates[predicateIri];\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: freeze(newPredicates) }));\r\n}\r\n/**\r\n * Create a new Thing with the given URL removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a URL value from.\r\n * @param property Property for which to remove the given URL value.\r\n * @param value URL to remove from `thing` for the given `Property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeUrl = (thing, property, value) => {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    if (!isThing(value) && !internal_isValidUrl(value)) {\r\n        throw new ValidValueUrlExpectedError(value);\r\n    }\r\n    const iriToRemove = isNamedNode(value)\r\n        ? value.value\r\n        : typeof value === \"string\"\r\n            ? value\r\n            : asIri(value);\r\n    const updatedNamedNodes = freeze((_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b.filter((namedNode) => namedNode.toLowerCase() !== iriToRemove.toLowerCase())) !== null && _c !== void 0 ? _c : []);\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, thing.predicates[predicateIri]), { namedNodes: updatedNamedNodes }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n};\r\n/** @hidden Alias of [[removeUrl]] for those who prefer IRI terminology. */\r\nconst removeIri = removeUrl;\r\n/**\r\n * Create a new Thing with the given boolean removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a boolean value from.\r\n * @param property Property for which to remove the given boolean value.\r\n * @param value Boolean to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.boolean, (foundBoolean) => deserializeBoolean(foundBoolean) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given datetime removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a datetime value from.\r\n * @param property Property for which to remove the given datetime value.\r\n * @param value Datetime to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.dateTime, (foundDatetime) => { var _a; return ((_a = deserializeDatetime(foundDatetime)) === null || _a === void 0 ? void 0 : _a.getTime()) === value.getTime(); });\r\n};\r\n/**\r\n * Create a new Thing with the given date removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a date value from.\r\n * @param property Property for which to remove the given date value.\r\n * @param value Date to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst removeDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.date, function (foundDate) {\r\n        const deserializedDate = deserializeDate(foundDate);\r\n        if (deserializedDate) {\r\n            return (deserializedDate.getFullYear() === value.getFullYear() &&\r\n                deserializedDate.getMonth() === value.getMonth() &&\r\n                deserializedDate.getDate() === value.getDate());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n};\r\n/**\r\n * Create a new Thing with the given datetime removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a datetime value from.\r\n * @param property Property for which to remove the given datetime value.\r\n * @param value Time to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst removeTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.time, function (foundTime) {\r\n        const deserializedTime = deserializeTime(foundTime);\r\n        if (deserializedTime) {\r\n            return (deserializedTime.hour === value.hour &&\r\n                deserializedTime.minute === value.minute &&\r\n                deserializedTime.second === value.second &&\r\n                deserializedTime.millisecond === value.millisecond &&\r\n                deserializedTime.timezoneHourOffset === value.timezoneHourOffset &&\r\n                deserializedTime.timezoneMinuteOffset === value.timezoneMinuteOffset);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n};\r\n/**\r\n * Create a new Thing with the given decimal removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a decimal value from.\r\n * @param property Property for which to remove the given decimal value.\r\n * @param value Decimal to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.decimal, (foundDecimal) => deserializeDecimal(foundDecimal) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given integer removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove an integer value from.\r\n * @param property Property for which to remove the given integer value.\r\n * @param value Integer to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.integer, (foundInteger) => deserializeInteger(foundInteger) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given English string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a localised string value from.\r\n * @param property Property for which to remove the given localised string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.13.0\r\n */\r\nfunction removeStringEnglish(thing, property, value) {\r\n    return removeStringWithLocale(thing, property, value, \"en\");\r\n}\r\n/**\r\n * Create a new Thing with the given localised string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a localised string value from.\r\n * @param property Property for which to remove the given localised string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @param locale Locale of the string to remove.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeStringWithLocale(thing, property, value, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingLangStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const matchingLocale = Object.keys(existingLangStrings).find((existingLocale) => normalizeLocale(existingLocale) === normalizeLocale(locale) &&\r\n        Array.isArray(existingLangStrings[existingLocale]) &&\r\n        existingLangStrings[existingLocale].length > 0);\r\n    if (typeof matchingLocale !== \"string\") {\r\n        // Nothing to remove.\r\n        return thing;\r\n    }\r\n    const existingStringsInLocale = existingLangStrings[matchingLocale];\r\n    const updatedStringsInLocale = freeze(existingStringsInLocale.filter((existingString) => existingString !== value));\r\n    const updatedLangStrings = freeze(Object.assign(Object.assign({}, existingLangStrings), { [matchingLocale]: updatedStringsInLocale }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, thing.predicates[predicateIri]), { langStrings: updatedLangStrings }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n}\r\n/**\r\n * Create a new Thing with the given unlocalised string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove an unlocalised string value from.\r\n * @param property Property for which to remove the given string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.string, (foundString) => foundString === value);\r\n};\r\n/**\r\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing Thing to remove a NamedNode value from.\r\n * @param property Property for which to remove the given NamedNode value.\r\n * @param value NamedNode to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeNamedNode(thing, property, value) {\r\n    return removeUrl(thing, property, value.value);\r\n}\r\n/**\r\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing Thing to remove a Literal value from.\r\n * @param property Property for which to remove the given Literal value.\r\n * @param value Literal to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeLiteral(thing, property, value) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const typeIri = value.datatype.value;\r\n    if (typeIri === xmlSchemaTypes.langString) {\r\n        return removeStringWithLocale(thing, property, value.value, value.language);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicateValues = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicateValues.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[typeIri]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValues = freeze(existingValuesOfType.filter((existingValue) => existingValue !== value.value));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [typeIri]: updatedValues }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicateValues), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\r\n/**\r\n * @param thing Thing to remove a Literal value from.\r\n * @param property Property for which to remove the given Literal value.\r\n * @param type Data type that the Literal should be stored as.\r\n * @param matcher Function that returns true if the given value is an equivalent serialisation of the value to remove. For example, when removing a `false` boolean, the matcher should return true for both \"0\" and \"false\".\r\n */\r\nfunction removeLiteralMatching(thing, property, type, matcher) {\r\n    var _a, _b, _c;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicateValues = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicateValues.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[type]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValues = freeze(existingValuesOfType.filter((existingValue) => !matcher(existingValue)));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [type]: updatedValues }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicateValues), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create a new Thing with existing values replaced by the given URL for the given Property.\r\n *\r\n * To preserve existing values, see [[addUrl]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a URL value on.\r\n * @param property Property for which to set the given URL value.\r\n * @param url URL to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setUrl = (thing, property, url) => {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    if (!isThing(url) && !internal_isValidUrl(url)) {\r\n        throw new ValidValueUrlExpectedError(url);\r\n    }\r\n    return addUrl(removeAll(thing, property), property, url);\r\n};\r\n/** @hidden Alias of [[setUrl]] for those who prefer IRI terminology. */\r\nconst setIri = setUrl;\r\n/**\r\n * Create a new Thing with existing values replaced by the given boolean for the given Property.\r\n *\r\n * To preserve existing values, see [[addBoolean]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a boolean value on.\r\n * @param property Property for which to set the given boolean value.\r\n * @param value Boolean to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addBoolean(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given datetime for the given Property.\r\n *\r\n * To preserve existing values, see [[addDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an datetime value on.\r\n * @param property Property for which to set the given datetime value.\r\n * @param value Datetime to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDatetime(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given date for the given Property.\r\n *\r\n * To preserve existing values, see [[addDate]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an date value on.\r\n * @param property Property for which to set the given date value.\r\n * @param value Date to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst setDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDate(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given time for the given Property.\r\n *\r\n * To preserve existing values, see [[addTime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an time value on.\r\n * @param property Property for which to set the given time value.\r\n * @param value time to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst setTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addTime(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given decimal for the given Property.\r\n *\r\n * To preserve existing values, see [[addDecimal]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a decimal value on.\r\n * @param property Property for which to set the given decimal value.\r\n * @param value Decimal to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDecimal(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given integer for the given Property.\r\n *\r\n * To preserve existing values, see [[addInteger]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an integer value on.\r\n * @param property Property for which to set the given integer value.\r\n * @param value Integer to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addInteger(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given localised string for the given Property.\r\n *\r\n * To preserve existing values, see [[addStringWithLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a localised string value on.\r\n * @param property Property for which to set the given localised string value.\r\n * @param value Localised string to set on `thing` for the given `property`.\r\n * @param locale Locale of the added string.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setStringWithLocale(thing, property, value, locale) {\r\n    internal_throwIfNotThing(thing);\r\n    return addStringWithLocale(removeAll(thing, property), property, value, locale);\r\n}\r\n/**\r\n * Create a new Thing with existing values replaced by the given unlocalised string for the given Property.\r\n *\r\n * To preserve existing values, see [[addStringNoLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an unlocalised string value on.\r\n * @param property Property for which to set the given unlocalised string value.\r\n * @param value Unlocalised string to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addStringNoLocale(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given Named Node for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addNamedNode]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a NamedNode on.\r\n * @param property Property for which to set the value.\r\n * @param value The NamedNode to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setNamedNode(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    return addNamedNode(removeAll(thing, property), property, value);\r\n}\r\n/**\r\n * Create a new Thing with existing values replaced by the given Literal for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addLiteral]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a Literal on.\r\n * @param property Property for which to set the value.\r\n * @param value The Literal to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setLiteral(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteral(removeAll(thing, property), property, value);\r\n}\r\n/**\r\n * Creates a new Thing with existing values replaced by the given Term for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addTerm]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a Term on.\r\n * @param property Property for which to set the value.\r\n * @param value The raw RDF/JS value to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 0.3.0\r\n */\r\nfunction setTerm(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    return addTerm(removeAll(thing, property), property, value);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create or modify a [[Thing]], setting multiple properties in a single expresssion.\r\n *\r\n * For example, you can create a new Thing and initialise several properties as follows:\r\n *\r\n *     const me = buildThing()\r\n *       .addUrl(rdf.type, schema.Person)\r\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\r\n *       .build();\r\n *\r\n * Take note of the final call to `.build()` to obtain the actual Thing.\r\n *\r\n * @param init Optionally pass an existing [[Thing]] to modify the properties of. If left empty, `buildThing` will initialise a new Thing.\r\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\r\n * @since 1.9.0\r\n */\r\nfunction buildThing(init = createThing()) {\r\n    let thing = isThing(init) ? init : createThing(init);\r\n    function getAdder(adder) {\r\n        return (property, value) => {\r\n            thing = adder(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getSetter(setter) {\r\n        return (property, value) => {\r\n            thing = setter(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getRemover(remover) {\r\n        return (property, value) => {\r\n            thing = remover(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    const builder = {\r\n        build: () => thing,\r\n        addUrl: getAdder(addUrl),\r\n        addIri: getAdder(addIri),\r\n        addBoolean: getAdder(addBoolean),\r\n        addDatetime: getAdder(addDatetime),\r\n        addDate: getAdder(addDate),\r\n        addTime: getAdder(addTime),\r\n        addDecimal: getAdder(addDecimal),\r\n        addInteger: getAdder(addInteger),\r\n        addStringNoLocale: getAdder(addStringNoLocale),\r\n        addStringEnglish: (property, value) => {\r\n            thing = addStringWithLocale(thing, property, value, \"en\");\r\n            return builder;\r\n        },\r\n        addStringWithLocale: (property, value, locale) => {\r\n            thing = addStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        addNamedNode: getAdder(addNamedNode),\r\n        addLiteral: getAdder(addLiteral),\r\n        addTerm: getAdder(addTerm),\r\n        setUrl: getSetter(setUrl),\r\n        setIri: getSetter(setIri),\r\n        setBoolean: getSetter(setBoolean),\r\n        setDatetime: getSetter(setDatetime),\r\n        setDate: getSetter(setDate),\r\n        setTime: getSetter(setTime),\r\n        setDecimal: getSetter(setDecimal),\r\n        setInteger: getSetter(setInteger),\r\n        setStringNoLocale: getSetter(setStringNoLocale),\r\n        setStringEnglish: (property, value) => {\r\n            thing = setStringWithLocale(thing, property, value, \"en\");\r\n            return builder;\r\n        },\r\n        setStringWithLocale: (property, value, locale) => {\r\n            thing = setStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        setNamedNode: getSetter(setNamedNode),\r\n        setLiteral: getSetter(setLiteral),\r\n        setTerm: getSetter(setTerm),\r\n        removeAll: (property) => {\r\n            thing = removeAll(thing, property);\r\n            return builder;\r\n        },\r\n        removeUrl: getRemover(removeUrl),\r\n        removeIri: getRemover(removeIri),\r\n        removeBoolean: getRemover(removeBoolean),\r\n        removeDatetime: getRemover(removeDatetime),\r\n        removeDate: getRemover(removeDate),\r\n        removeTime: getRemover(removeTime),\r\n        removeDecimal: getRemover(removeDecimal),\r\n        removeInteger: getRemover(removeInteger),\r\n        removeStringNoLocale: getRemover(removeStringNoLocale),\r\n        removeStringEnglish: (property, value) => buildThing(removeStringWithLocale(thing, property, value, \"en\")),\r\n        removeStringWithLocale: (property, value, locale) => buildThing(removeStringWithLocale(thing, property, value, locale)),\r\n        removeNamedNode: getRemover(removeNamedNode),\r\n        removeLiteral: getRemover(removeLiteral),\r\n    };\r\n    return builder;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Function for use in unit tests to mock a [[Thing]] with a given URL.\r\n *\r\n * Warning: do not use this function in actual production code.\r\n * This function initialises a new empty Thing and sets its URL to a given URL.\r\n * This is useful to mock a Thing in tests of code that call e.g.\r\n * [[asUrl]].\r\n *\r\n * @param url The URL that the mocked Thing pretends identifies it.\r\n * @returns A new Thing, pretending to be identified by the given URL.\r\n * @since 0.2.0\r\n */\r\nfunction mockThingFrom(url) {\r\n    const iri = internal_toIriString(url);\r\n    const thing = {\r\n        type: \"Subject\",\r\n        predicates: {},\r\n        url: iri,\r\n    };\r\n    return thing;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param linkedAccessResource A Resource exposed via the Link header of another Resource with rel=\"acl\".\r\n * @returns Whether that Resource is an ACP ACR or not (in which case it's likely a WAC ACL).\r\n */\r\nfunction isAcr(linkedAccessResource) {\r\n    const relTypeLinks = getLinkedResourceUrlAll(linkedAccessResource)[\"type\"];\r\n    return (Array.isArray(relTypeLinks) &&\r\n        relTypeLinks.includes(acp.AccessControlResource));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * This (currently internal) function fetches the ACL indicated in the [[WithServerResourceInfo]]\r\n * attached to a resource.\r\n *\r\n * @internal\r\n * @param resourceInfo The Resource info with the ACL URL\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\r\n */\r\nasync function internal_fetchAcl(resourceInfo, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(resourceInfo)) {\r\n        return {\r\n            resourceAcl: null,\r\n            fallbackAcl: null,\r\n        };\r\n    }\r\n    try {\r\n        const resourceAcl = await internal_fetchResourceAcl(resourceInfo, options);\r\n        const acl = resourceAcl === null\r\n            ? {\r\n                resourceAcl: null,\r\n                fallbackAcl: await internal_fetchFallbackAcl(resourceInfo, options),\r\n            }\r\n            : { resourceAcl: resourceAcl, fallbackAcl: null };\r\n        return acl;\r\n    }\r\n    catch (e) {\r\n        /* istanbul ignore else: fetchResourceAcl swallows all non-AclIsAcrErrors */\r\n        if (e instanceof AclIsAcrError) {\r\n            return {\r\n                resourceAcl: null,\r\n                fallbackAcl: null,\r\n            };\r\n        }\r\n        /* istanbul ignore next: fetchResourceAcl swallows all non-AclIsAcrErrors */\r\n        throw e;\r\n    }\r\n}\r\n/** @internal */\r\nasync function internal_fetchResourceAcl(dataset, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(dataset)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const aclSolidDataset = await getSolidDataset(dataset.internal_resourceInfo.aclUrl, options);\r\n        if (isAcr(aclSolidDataset)) {\r\n            throw new AclIsAcrError(dataset, aclSolidDataset);\r\n        }\r\n        return freeze(Object.assign(Object.assign({}, aclSolidDataset), { internal_accessTo: getSourceUrl(dataset) }));\r\n    }\r\n    catch (e) {\r\n        if (e instanceof AclIsAcrError) {\r\n            throw e;\r\n        }\r\n        // Since a Solid server adds a `Link` header to an ACL even if that ACL does not exist,\r\n        // failure to fetch the ACL is expected to happen - we just return `null` and let callers deal\r\n        // with it.\r\n        return null;\r\n    }\r\n}\r\n/** @internal */\r\nasync function internal_fetchFallbackAcl(resource, options = internal_defaultFetchOptions) {\r\n    const resourceUrl = new URL(getSourceUrl(resource));\r\n    const resourcePath = resourceUrl.pathname;\r\n    // Note: we're currently assuming that the Origin is the root of the Pod. However, it is not yet\r\n    //       set in stone that that will always be the case. We might need to check the Container's\r\n    //       metadata at some point in time to check whether it is actually the root of the Pod.\r\n    //       See: https://github.com/solid/specification/issues/153#issuecomment-624630022\r\n    if (resourcePath === \"/\") {\r\n        // We're already at the root, so there's no Container we can retrieve:\r\n        return null;\r\n    }\r\n    const containerPath = internal_getContainerPath(resourcePath);\r\n    const containerIri = new URL(containerPath, resourceUrl.origin).href;\r\n    const containerInfo = await getResourceInfo(containerIri, options);\r\n    if (!hasAccessibleAcl(containerInfo)) {\r\n        // If the current user does not have access to this Container's ACL,\r\n        // we cannot determine whether its ACL is the one that applies. Thus, return null:\r\n        return null;\r\n    }\r\n    const containerAcl = await internal_fetchResourceAcl(containerInfo, options);\r\n    if (containerAcl === null) {\r\n        return internal_fetchFallbackAcl(containerInfo, options);\r\n    }\r\n    return containerAcl;\r\n}\r\n/**\r\n * Given the path to a Resource, get the URL of the Container one level up in the hierarchy.\r\n * @param resourcePath The path of the Resource of which we need to determine the Container's path.\r\n * @hidden For internal use only.\r\n */\r\nfunction internal_getContainerPath(resourcePath) {\r\n    const resourcePathWithoutTrailingSlash = resourcePath.substring(resourcePath.length - 1) === \"/\"\r\n        ? resourcePath.substring(0, resourcePath.length - 1)\r\n        : resourcePath;\r\n    const containerPath = resourcePath.substring(0, resourcePathWithoutTrailingSlash.lastIndexOf(\"/\")) + \"/\";\r\n    return containerPath;\r\n}\r\n/** @internal */\r\nfunction internal_getAclRules(aclDataset) {\r\n    const things = getThingAll(aclDataset);\r\n    return things.filter(isAclRule);\r\n}\r\nfunction isAclRule(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acl.Authorization);\r\n}\r\n/** @internal */\r\nfunction internal_getResourceAclRulesForResource(aclRules, resource) {\r\n    return aclRules.filter((rule) => appliesToResource(rule, resource));\r\n}\r\nfunction appliesToResource(aclRule, resource) {\r\n    return getIriAll(aclRule, acl.accessTo).includes(resource);\r\n}\r\n/** @internal */\r\nfunction internal_getDefaultAclRulesForResource(aclRules, resource) {\r\n    return aclRules.filter((rule) => isDefaultForResource(rule, resource));\r\n}\r\nfunction isDefaultForResource(aclRule, resource) {\r\n    return (getIriAll(aclRule, acl.default).includes(resource) ||\r\n        getIriAll(aclRule, acl.defaultForNew).includes(resource));\r\n}\r\n/** @internal */\r\nfunction internal_getAccess(rule) {\r\n    const ruleAccessModes = getIriAll(rule, acl.mode);\r\n    const writeAccess = ruleAccessModes.includes(internal_accessModeIriStrings.write);\r\n    return writeAccess\r\n        ? {\r\n            read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\r\n            append: true,\r\n            write: true,\r\n            control: ruleAccessModes.includes(internal_accessModeIriStrings.control),\r\n        }\r\n        : {\r\n            read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\r\n            append: ruleAccessModes.includes(internal_accessModeIriStrings.append),\r\n            write: false,\r\n            control: ruleAccessModes.includes(internal_accessModeIriStrings.control),\r\n        };\r\n}\r\n/** @internal */\r\nfunction internal_combineAccessModes(modes) {\r\n    return modes.reduce((accumulator, current) => {\r\n        const writeAccess = accumulator.write || current.write;\r\n        return writeAccess\r\n            ? {\r\n                read: accumulator.read || current.read,\r\n                append: true,\r\n                write: true,\r\n                control: accumulator.control || current.control,\r\n            }\r\n            : {\r\n                read: accumulator.read || current.read,\r\n                append: accumulator.append || current.append,\r\n                write: false,\r\n                control: accumulator.control || current.control,\r\n            };\r\n    }, { read: false, append: false, write: false, control: false });\r\n}\r\n/** @internal */\r\nfunction internal_removeEmptyAclRules(aclDataset) {\r\n    const aclRules = internal_getAclRules(aclDataset);\r\n    const aclRulesToRemove = aclRules.filter(isEmptyAclRule);\r\n    // Is this too clever? It iterates over aclRulesToRemove, one by one removing them from aclDataset.\r\n    const updatedAclDataset = aclRulesToRemove.reduce(removeThing, aclDataset);\r\n    return updatedAclDataset;\r\n}\r\nfunction isEmptyAclRule(aclRule) {\r\n    // If there are Quads in there unrelated to Access Control,\r\n    // this is not an empty ACL rule that can be deleted:\r\n    if (subjectToRdfJsQuads(aclRule.predicates, DataFactory.namedNode(aclRule.url), DataFactory.defaultGraph()).some((quad) => !isAclQuad(quad))) {\r\n        return false;\r\n    }\r\n    // If the rule does not apply to any Resource, it is no longer working:\r\n    if (getIri(aclRule, acl.accessTo) === null &&\r\n        getIri(aclRule, acl.default) === null &&\r\n        getIri(aclRule, acl.defaultForNew) === null) {\r\n        return true;\r\n    }\r\n    // If the rule does not specify Access Modes, it is no longer working:\r\n    if (getIri(aclRule, acl.mode) === null) {\r\n        return true;\r\n    }\r\n    // If the rule does not specify whom it applies to, it is no longer working:\r\n    if (getIri(aclRule, acl.agent) === null &&\r\n        getIri(aclRule, acl.agentGroup) === null &&\r\n        getIri(aclRule, acl.agentClass) === null) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isAclQuad(quad) {\r\n    const predicate = quad.predicate;\r\n    const object = quad.object;\r\n    if (predicate.equals(DataFactory.namedNode(rdf.type)) &&\r\n        object.equals(DataFactory.namedNode(acl.Authorization))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.accessTo)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.default)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.defaultForNew))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.mode)) &&\r\n        Object.values(internal_accessModeIriStrings).some((mode) => object.equals(DataFactory.namedNode(mode)))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.agent)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.agentGroup)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.agentClass))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.origin))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * IRIs of potential Access Modes\r\n * @internal\r\n */\r\nconst internal_accessModeIriStrings = {\r\n    read: \"http://www.w3.org/ns/auth/acl#Read\",\r\n    append: \"http://www.w3.org/ns/auth/acl#Append\",\r\n    write: \"http://www.w3.org/ns/auth/acl#Write\",\r\n    control: \"http://www.w3.org/ns/auth/acl#Control\",\r\n};\r\n/** @internal\r\n * This function finds, among a set of ACL rules, the ones granting access to a given entity (the target)\r\n * and identifying it with a specific property (`acl:agent` or `acl:agentGroup`).\r\n * @param aclRules The set of rules to filter\r\n * @param targetIri The IRI of the target\r\n * @param targetType The property linking the rule to the target\r\n */\r\nfunction internal_getAclRulesForIri(aclRules, targetIri, targetType) {\r\n    return aclRules.filter((rule) => getIriAll(rule, targetType).includes(targetIri));\r\n}\r\n/** @internal\r\n * This function transforms a given set of rules into a map associating the IRIs\r\n * of the entities to which permissions are granted by these rules, and the permissions\r\n * granted to them. Additionally, it filters these entities based on the predicate\r\n * that refers to them in the rule.\r\n */\r\nfunction internal_getAccessByIri(aclRules, targetType) {\r\n    const targetIriAccess = {};\r\n    aclRules.forEach((rule) => {\r\n        const ruleTargetIri = getIriAll(rule, targetType);\r\n        const access = internal_getAccess(rule);\r\n        // A rule might apply to multiple agents. If multiple rules apply to the same agent, the Access\r\n        // Modes granted by those rules should be combined:\r\n        ruleTargetIri.forEach((targetIri) => {\r\n            targetIriAccess[targetIri] =\r\n                typeof targetIriAccess[targetIri] === \"undefined\"\r\n                    ? access\r\n                    : internal_combineAccessModes([targetIriAccess[targetIri], access]);\r\n        });\r\n    });\r\n    return targetIriAccess;\r\n}\r\n/**\r\n * Initialises a new ACL Rule that grants some access - but does not yet specify to whom.\r\n *\r\n * @hidden This is an internal utility function that should not be used directly by downstreams.\r\n * @param access Access mode that this Rule will grant\r\n */\r\nfunction internal_initialiseAclRule(access) {\r\n    let newRule = createThing();\r\n    newRule = setIri(newRule, rdf.type, acl.Authorization);\r\n    if (access.read) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.read);\r\n    }\r\n    if (access.append && !access.write) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.append);\r\n    }\r\n    if (access.write) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.write);\r\n    }\r\n    if (access.control) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.control);\r\n    }\r\n    return newRule;\r\n}\r\n/**\r\n * Creates a new ACL Rule with the same ACL values as the input ACL Rule, but having a different IRI.\r\n *\r\n * Note that non-ACL values will not be copied over.\r\n *\r\n * @hidden This is an internal utility function that should not be used directly by downstreams.\r\n * @param sourceRule ACL rule to duplicate.\r\n */\r\nfunction internal_duplicateAclRule(sourceRule) {\r\n    let targetRule = createThing();\r\n    targetRule = setIri(targetRule, rdf.type, acl.Authorization);\r\n    function copyIris(inputRule, outputRule, predicate) {\r\n        return getIriAll(inputRule, predicate).reduce((outputRule, iriTarget) => addIri(outputRule, predicate, iriTarget), outputRule);\r\n    }\r\n    targetRule = copyIris(sourceRule, targetRule, acl.accessTo);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.default);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.defaultForNew);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agent);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agentGroup);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agentClass);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.origin);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.mode);\r\n    return targetRule;\r\n}\r\nfunction internal_setAcl(resource, acl) {\r\n    return Object.assign(internal_cloneResource(resource), { internal_acl: acl });\r\n}\r\nconst supportedActorPredicates = [\r\n    acl.agent,\r\n    acl.agentClass,\r\n    acl.agentGroup,\r\n    acl.origin,\r\n];\r\n/**\r\n * Given an ACL Rule, returns two new ACL Rules that cover all the input Rule's use cases,\r\n * except for giving the given Actor access to the given Resource.\r\n *\r\n * @param rule The ACL Rule that should no longer apply for a given Actor to a given Resource.\r\n * @param actor The Actor that should be removed from the Rule for the given Resource.\r\n * @param resourceIri The Resource to which the Rule should no longer apply for the given Actor.\r\n * @returns A tuple with the original ACL Rule without the given Actor, and a new ACL Rule for the given Actor for the remaining Resources, respectively.\r\n */\r\nfunction internal_removeActorFromRule(rule, actor, actorPredicate, resourceIri, ruleType) {\r\n    // If the existing Rule does not apply to the given Actor, we don't need to split up.\r\n    // Without this check, we'd be creating a new rule for the given Actor (ruleForOtherTargets)\r\n    // that would give it access it does not currently have:\r\n    if (!getIriAll(rule, actorPredicate).includes(actor)) {\r\n        const emptyRule = internal_initialiseAclRule({\r\n            read: false,\r\n            append: false,\r\n            write: false,\r\n            control: false,\r\n        });\r\n        return [rule, emptyRule];\r\n    }\r\n    // The existing rule will keep applying to Actors other than the given one:\r\n    const ruleWithoutActor = removeIri(rule, actorPredicate, actor);\r\n    // The actor might have been given other access in the existing rule, so duplicate it...\r\n    let ruleForOtherTargets = internal_duplicateAclRule(rule);\r\n    // ...but remove access to the original Resource...\r\n    ruleForOtherTargets = removeIri(ruleForOtherTargets, ruleType === \"resource\" ? acl.accessTo : acl.default, resourceIri);\r\n    // Prevents the legacy predicate 'acl:defaultForNew' to lead to privilege escalation\r\n    if (ruleType === \"default\") {\r\n        ruleForOtherTargets = removeIri(ruleForOtherTargets, acl.defaultForNew, resourceIri);\r\n    }\r\n    // ...and only apply the new Rule to the given Actor (because the existing Rule covers the others):\r\n    ruleForOtherTargets = setIri(ruleForOtherTargets, actorPredicate, actor);\r\n    supportedActorPredicates\r\n        .filter((predicate) => predicate !== actorPredicate)\r\n        .forEach((predicate) => {\r\n        ruleForOtherTargets = removeAll(ruleForOtherTargets, predicate);\r\n    });\r\n    return [ruleWithoutActor, ruleForOtherTargets];\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Actor's access.\r\n *\r\n * If rules for Actor's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Actors through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Actors for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param actor The Actor to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Actor for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction internal_setActorAccess$2(aclDataset, access, actorPredicate, accessType, actor) {\r\n    // First make sure that none of the pre-existing rules in the given ACL SolidDataset\r\n    // give the Agent access to the Resource:\r\n    let filteredAcl = aclDataset;\r\n    getThingAll(aclDataset).forEach((aclRule) => {\r\n        // Obtain both the Rule that no longer includes the given Actor,\r\n        // and a new Rule that includes all ACL Quads\r\n        // that do not pertain to the given Actor-Resource combination.\r\n        // Note that usually, the latter will no longer include any meaningful statements;\r\n        // we'll clean them up afterwards.\r\n        const [filteredRule, remainingRule] = internal_removeActorFromRule(aclRule, actor, actorPredicate, aclDataset.internal_accessTo, accessType);\r\n        filteredAcl = setThing(filteredAcl, filteredRule);\r\n        filteredAcl = setThing(filteredAcl, remainingRule);\r\n    });\r\n    // Create a new Rule that only grants the given Actor the given Access Modes:\r\n    let newRule = internal_initialiseAclRule(access);\r\n    newRule = setIri(newRule, accessType === \"resource\" ? acl.accessTo : acl.default, aclDataset.internal_accessTo);\r\n    newRule = setIri(newRule, actorPredicate, actor);\r\n    const updatedAcl = setThing(filteredAcl, newRule);\r\n    // Remove any remaining Rules that do not contain any meaningful statements:\r\n    return internal_removeEmptyAclRules(updatedAcl);\r\n}\r\nfunction internal_setResourceAcl(resource, acl) {\r\n    const newAcl = {\r\n        resourceAcl: acl,\r\n        fallbackAcl: null,\r\n    };\r\n    return internal_setAcl(resource, newAcl);\r\n}\r\nfunction internal_getResourceAcl(resource) {\r\n    return resource.internal_acl.resourceAcl;\r\n}\r\n/**\r\n * This error indicates that, if we're following a Link with rel=\"acl\",\r\n * it does not result in a WAC ACL, but in an ACP ACR.\r\n */\r\nclass AclIsAcrError extends Error {\r\n    constructor(sourceResource, aclResource) {\r\n        super(`[${getSourceIri(sourceResource)}] is governed by Access Control Policies in [${getSourceIri(aclResource)}] rather than by Web Access Control.`);\r\n    }\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verify whether a given SolidDataset was fetched together with its Access Control List.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have its ACLs attached.\r\n * @returns True if `dataset` was fetched together with its ACLs.\r\n */\r\nfunction hasAcl(dataset) {\r\n    const potentialAcl = dataset;\r\n    return typeof potentialAcl.internal_acl === \"object\";\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verifies whether the given Resource has a resource ACL (Access Control List) attached.\r\n *\r\n * The [[hasResourceAcl]] function checks that:\r\n * - a given Resource has a resource ACL attached, and\r\n * - the user calling [[hasResourceAcl]] has Control access to the Resource.\r\n *\r\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\r\n *\r\n * @param resource A Resource that might have an ACL attached.\r\n * @returns `true` if the Resource has a resource ACL attached that is accessible by the user.\r\n */\r\nfunction hasResourceAcl(resource) {\r\n    return (resource.internal_acl.resourceAcl !== null &&\r\n        getSourceUrl(resource) ===\r\n            resource.internal_acl.resourceAcl.internal_accessTo &&\r\n        resource.internal_resourceInfo.aclUrl ===\r\n            getSourceUrl(resource.internal_acl.resourceAcl));\r\n}\r\n/**\r\n * Experimental: fetch a SolidDataset and its associated Access Control List.\r\n *\r\n * This is an experimental function that fetches both a Resource, the linked ACL Resource (if\r\n * available), and the ACL that applies to it if the linked ACL Resource is not available. This can\r\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\r\n * provide this info in a single request. Therefore, and because this function is still\r\n * experimental, prefer [[getSolidDataset]] instead.\r\n *\r\n * If the Resource does not advertise the ACL Resource (because the authenticated user does not have\r\n * access to it), the `acl` property in the returned value will be null. `acl.resourceAcl` will be\r\n * undefined if the Resource's linked ACL Resource could not be fetched (because it does not exist),\r\n * and `acl.fallbackAcl` will be null if the applicable Container's ACL is not accessible to the\r\n * authenticated user.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and the ACLs that apply to it, if available to the authenticated user.\r\n */\r\nasync function getSolidDatasetWithAcl(url, options = internal_defaultFetchOptions) {\r\n    const solidDataset = await getSolidDataset(url, options);\r\n    const acl = await internal_fetchAcl(solidDataset, options);\r\n    return internal_setAcl(solidDataset, acl);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieves a file, its resource ACL (Access Control List) if available,\r\n * and its fallback ACL from a URL and returns them as a blob.\r\n *\r\n * If the user calling the function does not have access to the file's resource ACL,\r\n * [[hasAccessibleAcl]] on the returned blob returns false.\r\n * If the user has access to the file's resource ACL but the resource ACL does not exist,\r\n * [[getResourceAcl]] on the returned blob returns null.\r\n * If the fallback ACL is inaccessible by the user,\r\n * [[getFallbackAcl]] on the returned blob returns null.\r\n *\r\n * ```{tip}\r\n * To retrieve the ACLs, the function results in multiple HTTP requests rather than a single\r\n * request as mandated by the Solid spec. As such, prefer [[getFile]] instead if you do not need the ACL.\r\n * ```\r\n *\r\n * @param url The URL of the fetched file\r\n * @param options Fetching options: a custom fetcher and/or headers.\r\n * @returns A file and its ACLs, if available to the authenticated user, as a blob.\r\n * @since 0.2.0\r\n */\r\nasync function getFileWithAcl(input, options = internal_defaultFetchOptions) {\r\n    const file = await getFile(input, options);\r\n    const acl = await internal_fetchAcl(file, options);\r\n    return internal_setAcl(file, acl);\r\n}\r\n/**\r\n * Experimental: fetch a Resource's metadata and its associated Access Control List.\r\n *\r\n * This is an experimental function that fetches both a Resource's metadata, the linked ACL Resource (if\r\n * available), and the ACL that applies to it if the linked ACL Resource is not available (if accessible). This can\r\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\r\n * provide this info in a single request.\r\n *\r\n * If the Resource's linked ACL Resource could not be fetched (because it does not exist, or because\r\n * the authenticated user does not have access to it), `acl.resourceAcl` will be `null`. If the\r\n * applicable Container's ACL is not accessible to the authenticated user, `acl.fallbackAcl` will be\r\n * `null`.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Resource's metadata and the ACLs that apply to the Resource, if available to the authenticated user.\r\n */\r\nasync function getResourceInfoWithAcl(url, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfo(url, options);\r\n    const acl = await internal_fetchAcl(resourceInfo, options);\r\n    return internal_setAcl(resourceInfo, acl);\r\n}\r\nfunction getResourceAcl(resource) {\r\n    if (!hasResourceAcl(resource)) {\r\n        return null;\r\n    }\r\n    return resource.internal_acl.resourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verifies whether the given Resource has a fallback ACL (Access Control List) attached.\r\n *\r\n * A fallback ACL for a Resource is inherited from the Resource's parent Container\r\n * (or another of its ancestor Containers) and applies if the Resource does\r\n * not have its own resource ACL.\r\n *\r\n * The [[hasFallbackAcl]] function checks that:\r\n * - a given Resource has a fallback ACL attached, and\r\n * - the user calling [[hasFallbackAcl]] has Control access to the Container\r\n * from which the Resource inherits its ACL.\r\n *\r\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\r\n *\r\n * @param resource A [[SolidDataset]] that might have a fallback ACL attached.\r\n *\r\n * @returns `true` if the Resource has a fallback ACL attached that is accessible to the user.\r\n */\r\nfunction hasFallbackAcl(resource) {\r\n    return resource.internal_acl.fallbackAcl !== null;\r\n}\r\nfunction getFallbackAcl(dataset) {\r\n    if (!hasFallbackAcl(dataset)) {\r\n        return null;\r\n    }\r\n    return dataset.internal_acl.fallbackAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Creates an empty resource ACL (Access Control List) for a given Resource.\r\n *\r\n * @param targetResource A Resource that does not have its own ACL yet (see [[hasResourceAcl]]).\r\n * @returns An empty resource ACL for the given Resource.\r\n */\r\nfunction createAcl(targetResource) {\r\n    const emptyResourceAcl = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_accessTo: getSourceUrl(targetResource), internal_resourceInfo: {\r\n            sourceIri: targetResource.internal_resourceInfo.aclUrl,\r\n            isRawData: false,\r\n            linkedResources: {},\r\n        } }));\r\n    return emptyResourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Creates a resource ACL (Access Control List), initialised from the fallback ACL\r\n * inherited from the given Resource's Container (or another of its ancestor Containers).\r\n * That is, the new ACL has the same rules/entries as the fallback ACL that currently\r\n * applies to the Resource.\r\n *\r\n * @param resource A Resource without its own resource ACL (see [[hasResourceAcl]]) but with an accessible fallback ACL (see [[hasFallbackAcl]]).\r\n * @returns A resource ACL initialised with the rules/entries from the Resource's fallback ACL.\r\n */\r\nfunction createAclFromFallbackAcl(resource) {\r\n    const emptyResourceAcl = createAcl(resource);\r\n    const fallbackAclRules = internal_getAclRules(resource.internal_acl.fallbackAcl);\r\n    const defaultAclRules = internal_getDefaultAclRulesForResource(fallbackAclRules, resource.internal_acl.fallbackAcl.internal_accessTo);\r\n    const newAclRules = defaultAclRules.map((rule) => {\r\n        rule = removeAll(rule, acl.default);\r\n        rule = removeAll(rule, acl.defaultForNew);\r\n        rule = setIri(rule, acl.accessTo, getSourceUrl(resource));\r\n        rule = setIri(rule, acl.default, getSourceUrl(resource));\r\n        return rule;\r\n    });\r\n    // Iterate over every ACL Rule we want to import, inserting them into `emptyResourceAcl` one by one:\r\n    const initialisedResourceAcl = newAclRules.reduce(setThing, emptyResourceAcl);\r\n    return initialisedResourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves the resource ACL for a Resource.\r\n *\r\n * @param resource The Resource to which the given resource ACL applies.\r\n * @param resourceAcl An [[AclDataset]] whose ACL Rules will apply to `resource`.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n */\r\nasync function saveAclFor(resource, resourceAcl, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(resource)) {\r\n        throw new Error(`Could not determine the location of the ACL for the Resource at [${getSourceUrl(resource)}]; possibly the current user does not have Control access to that Resource. Try calling \\`hasAccessibleAcl()\\` before calling \\`saveAclFor()\\`.`);\r\n    }\r\n    const savedDataset = await saveSolidDatasetAt(resource.internal_resourceInfo.aclUrl, resourceAcl, options);\r\n    const savedAclDataset = Object.assign(Object.assign({}, savedDataset), { internal_accessTo: getSourceUrl(resource) });\r\n    return savedAclDataset;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the resource ACL (Access Control List) from a Resource.\r\n *\r\n * Once the resource ACL is removed from the Resource, the Resource relies on the\r\n * fallback ACL inherited from the Resource's parent Container (or another of its ancestor Containers).\r\n *\r\n * @param resource The Resource for which you want to delete the ACL.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n */\r\nasync function deleteAclFor(resource, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(resource.internal_resourceInfo.aclUrl, {\r\n        method: \"DELETE\",\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error(`Deleting the ACL of the Resource at [${getSourceUrl(resource)}] failed: [${response.status}] [${response.statusText}].`);\r\n    }\r\n    const storedResource = Object.assign(internal_cloneResource(resource), {\r\n        acl: {\r\n            resourceAcl: null,\r\n        },\r\n    });\r\n    return storedResource;\r\n}\r\n/**\r\n * Given a [[SolidDataset]], verify whether its Access Control List is accessible to the current user.\r\n *\r\n * This should generally only be true for SolidDatasets fetched by\r\n * [[getSolidDatasetWithAcl]].\r\n *\r\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\r\n * function is still experimental and can change in a non-major release.\r\n *\r\n * @param dataset A [[SolidDataset]].\r\n * @returns Whether the given `dataset` has a an ACL that is accessible to the current user.\r\n */\r\nfunction hasAccessibleAcl(dataset) {\r\n    return typeof dataset.internal_resourceInfo.aclUrl === \"string\";\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's explicitly-granted Access Modes for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Agent through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to the Agent for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccess$5(resourceInfo, agent) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getAgentResourceAccess(resourceInfo.internal_acl.resourceAcl, agent);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getAgentDefaultAccess(resourceInfo.internal_acl.fallbackAcl, agent);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Returns all explicitly-granted Access Modes per Agent for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to Agents through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which Agents may have been granted access.\r\n * @returns Access Modes per Agent that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccessAll$5(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        const resourceAcl = getResourceAcl(resourceInfo);\r\n        return getAgentResourceAccessAll(resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        const fallbackAcl = getFallbackAcl(resourceInfo);\r\n        return getAgentDefaultAccessAll(fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes explicitly granted to an Agent for the Resource\r\n * associated with an ACL (Access ControlList).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the child Resources if the associated Resource is a Container (see [[getAgentDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the explicitly granted Access Modes per Agent for the Resource associated\r\n * with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @returns Access Modes per Agent that have been explicitly granted for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules for Agent's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentResourceAccess$1(aclDataset, agent, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agent, \"resource\", agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's Access Modes explicitly granted for the children of the\r\n * Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself (see [[getAgentResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules for a certain Container.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Container's children.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes, per Agent, that have been explicitly granted for the children\r\n * of the Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agents through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agents for the Container Resource itself (see [[getAgentResourceAccessAll]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @returns Access Modes, per Agent, that have been explicitly granted for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set an Agent's Access Modes for the Container's children.\r\n * Specifically, the function returns a new default ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules already exist for the Agent in the given ACL, in the returned ACL, they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent.\r\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentDefaultAccess(aclDataset, agent, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agent, \"default\", agent);\r\n}\r\nfunction getAgentAclRulesForAgent(aclRules, agent) {\r\n    return internal_getAclRulesForIri(aclRules, agent, acl.agent);\r\n}\r\nfunction getAgentAclRules(aclRules) {\r\n    return aclRules.filter(isAgentAclRule);\r\n}\r\nfunction isAgentAclRule(aclRule) {\r\n    return getIri(aclRule, acl.agent) !== null;\r\n}\r\nfunction getAccessByAgent(aclRules) {\r\n    return internal_getAccessByIri(aclRules, acl.agent);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Returns a Group's explicity-granted Access Modes for a given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Group through other\r\n * ACL rules, e.g., public permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Group may have been granted access.\r\n * @param group URL of the Group for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to the `group` for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getGroupAccess$2(resourceInfo, group) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getGroupResourceAccess(resourceInfo.internal_acl.resourceAcl, group);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getGroupDefaultAccess(resourceInfo.internal_acl.fallbackAcl, group);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns all explicitly-granted Access Modes per Group for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Group through other\r\n * ACL rules, e.g., public permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Group may have been granted access.\r\n * @returns Access Modes per Group that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getGroupAccessAll$2(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        const resourceAcl = getResourceAcl(resourceInfo);\r\n        return getGroupResourceAccessAll(resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        const fallbackAcl = getFallbackAcl(resourceInfo);\r\n        return getGroupDefaultAccessAll(fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes explicitly granted to a Group for the Resource\r\n * associated with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public permissions.\r\n * - Access Modes granted to the Group for the child Resources if the associated Resource is a Container\r\n *   (see [[getGroupDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param group URL of the Group for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes explicitly granted to a Group for the Resource associated with an ACL.\r\n */\r\nfunction getGroupResourceAccess(aclDataset, group) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const groupResourceRules = getGroupAclRuleForGroup(resourceRules, group);\r\n    const groupAccessModes = groupResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(groupAccessModes);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the explicitly granted Access Modes per Group for the Resource associated\r\n * with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public permissions.\r\n * - Access Modes granted to Groups for the child Resources if the associated Resource is a Container.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @returns Access Modes per Group that have been explicitly granted for the Resource associated with an ACL.\r\n */\r\nfunction getGroupResourceAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    return getAccessByGroup(resourceRules);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns a Group's Access Modes explicitly granted for the children of the\r\n * Container associated with an ACL (Access ControlList).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g. public permissions.\r\n * - Access Modes granted to the Group for the Container Resource itself (see [[getGroupResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules for a certain Container.\r\n * @param group URL of the Group for which to retrieve what access it has to the child Resources of the given Container.\r\n * @returns Access Modes that have been explicitly granted to the Group for the children of the Container associated with the given ACL.\r\n */\r\nfunction getGroupDefaultAccess(aclDataset, group) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const defaultRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const groupDefaultRules = getGroupAclRuleForGroup(defaultRules, group);\r\n    const groupAccessModes = groupDefaultRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(groupAccessModes);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes, per Group, that have been explicitly granted for the children\r\n * of the Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Groups through other ACL rules, e.g. public permissions.\r\n * - Access Modes granted to the Groups for the Container Resource itself (see [[getGroupResourceAccessAll]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\r\n * @returns Access Modes per Group that have been explicitly granted for the children of the Container associated with the given ACL SolidDataset.\r\n */\r\nfunction getGroupDefaultAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const defaultRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    return getAccessByGroup(defaultRules);\r\n}\r\nfunction getGroupAclRuleForGroup(rules, group) {\r\n    return internal_getAclRulesForIri(rules, group, acl.agentGroup);\r\n}\r\nfunction getAccessByGroup(aclRules) {\r\n    return internal_getAccessByIri(aclRules, acl.agentGroup);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Group.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Group's access.\r\n *\r\n * If rules for Groups's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Groups through other ACL rules, e.g., public or Agent-specific permissions.\r\n * - Access Modes granted to Groups for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param group The Group to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Group for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `group`.\r\n * @since 1.4.0\r\n */\r\nfunction setGroupResourceAccess$1(aclDataset, group, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentGroup, \"resource\", group);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set a Group's Access Modes for the Container's children.\r\n * Specifically, the function returns a new default ACL initialised with the given ACL and\r\n * new rules for the Group's access.\r\n *\r\n * If rules already exist for the Group in the given ACL, in the returned ACL, they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted indirectly to the Group through other ACL rules, e.g., public or Agent-specific permissions.\r\n * - Access Modes granted to the Group for the Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param group The Group to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Group.\r\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `group`.\r\n * @since 1.4.0\r\n */\r\nfunction setGroupDefaultAccess(aclDataset, group, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentGroup, \"default\", group);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for a Resource.\r\n *\r\n * This function does not return Access Modes granted to specific Agents\r\n * through other ACL (Access Control List) rules, e.g., agent- or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @returns Access Modes granted to the public in general for the Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getPublicAccess$5(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getPublicResourceAccess(resourceInfo.internal_acl.resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getPublicDefaultAccess(resourceInfo.internal_acl.fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for the Resource\r\n * associated with an ACL (Access Control List).\r\n *\r\n * This function does not return:\r\n * - Access Modes granted to specific Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to child Resources if the associated Resource is a Container (see [[getPublicDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @returns Access Modes granted to the public in general for the Resource associated with the `aclDataset`.\r\n */\r\nfunction getPublicResourceAccess(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const publicResourceRules = getClassAclRulesForClass(resourceRules, foaf.Agent);\r\n    const publicAccessModes = publicResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(publicAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for the child Resources\r\n * of the Container associated with an ACL (Access Control List).\r\n *\r\n * This function does not return:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to the Container Resource itself (see [[getPublicResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\r\n * @returns Access Modes granted to the public in general for the children of the Container associated with the given `aclDataset`.\r\n */\r\nfunction getPublicDefaultAccess(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const publicResourceRules = getClassAclRulesForClass(resourceRules, foaf.Agent);\r\n    const publicAccessModes = publicResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(publicAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the public.\r\n * Specifically, the function returns a new resource ACL (Access Control List) initialised\r\n * with the given resource ACL and new rules for the given public access.\r\n *\r\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param access The Access Modes to grant to the public.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and public `access`.\r\n */\r\nfunction setPublicResourceAccess$1(aclDataset, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentClass, \"resource\", foaf.Agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set the public's default Access Modes\r\n * to child resources. Specifically, the function returns a new default ACL initialised\r\n * with the given default ACL and new rules for the given public access.\r\n *\r\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param access The Access Modes to grant to the public.\r\n * @returns A new default ACL initialised with the given `aclDataset` and public `access`.\r\n */\r\nfunction setPublicDefaultAccess(aclDataset, access) {\r\n    return internal_setActorAccess$2(aclDataset, access, acl.agentClass, \"default\", foaf.Agent);\r\n}\r\nfunction getClassAclRulesForClass(aclRules, agentClass) {\r\n    return aclRules.filter((rule) => appliesToClass(rule, agentClass));\r\n}\r\nfunction appliesToClass(aclRule, agentClass) {\r\n    return getIriAll(aclRule, acl.agentClass).includes(agentClass);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction setMockAclUrl(resource, aclUrl) {\r\n    const resourceWithAclUrl = Object.assign(internal_cloneResource(resource), {\r\n        internal_resourceInfo: Object.assign(Object.assign({}, resource.internal_resourceInfo), { aclUrl: aclUrl }),\r\n    });\r\n    return resourceWithAclUrl;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code. For use in **unit tests** that\r\n * require a [[SolidDataset]] with a resource ACL (Access Control List).\r\n * ```\r\n *\r\n * Initialises a new empty ACL and attaches it to a given [[SolidDataset]] for use\r\n * in **unit tests**; e.g., unit tests that call [[getResourceAcl]].\r\n *\r\n * @param resource The Resource to mock up with a new resource ACL.\r\n * @returns The input Resource with an empty resource ACL attached.\r\n * @since 0.2.0\r\n */\r\nfunction addMockResourceAclTo(resource) {\r\n    var _a;\r\n    const aclUrl = (_a = resource.internal_resourceInfo.aclUrl) !== null && _a !== void 0 ? _a : \"https://your.pod/mock-acl.ttl\";\r\n    const resourceWithAclUrl = Object.assign(internal_cloneResource(resource), {\r\n        internal_resourceInfo: Object.assign(Object.assign({}, resource.internal_resourceInfo), { aclUrl: aclUrl }),\r\n    });\r\n    const aclDataset = createAcl(resourceWithAclUrl);\r\n    const resourceWithResourceAcl = internal_setAcl(resourceWithAclUrl, {\r\n        resourceAcl: aclDataset,\r\n        fallbackAcl: null,\r\n    });\r\n    return resourceWithResourceAcl;\r\n}\r\n/**\r\n *\r\n * ```{warning}\r\n * Do not use this function in production code.  For use in **unit tests** that require a\r\n * [[SolidDataset]] with a fallback ACL (Access Control List).\r\n * ```\r\n *\r\n * Initialises a new empty fallback ACL and attaches it to a given [[SolidDataset]] for use\r\n * in **unit tests**; e.g., unit tests that call [[getFallbackAcl]].\r\n *\r\n * @param resource The Resource to mock up with new fallback ACL.\r\n * @returns The input Resource with an empty fallback ACL attached.\r\n * @since 0.2.0\r\n */\r\nfunction addMockFallbackAclTo(resource) {\r\n    const containerUrl = internal_getContainerPath(getSourceIri(resource));\r\n    const aclUrl = containerUrl + \".acl\";\r\n    const mockContainer = setMockAclUrl(mockContainerFrom(containerUrl), aclUrl);\r\n    const aclDataset = createAcl(mockContainer);\r\n    const resourceWithFallbackAcl = internal_setAcl(internal_cloneResource(resource), {\r\n        resourceAcl: null,\r\n        fallbackAcl: aclDataset,\r\n    });\r\n    return resourceWithFallbackAcl;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst rdfJsDataset = rdfJsDatasetModule.dataset;\r\n/**\r\n * Convert an RDF/JS Dataset into a [[SolidDataset]]\r\n *\r\n * Parse an RDF/JS\r\n * {@link https://rdf.js.org/dataset-spec/#datasetcore-interface DatasetCore},\r\n * into a [[SolidDataset]]. Note that, when saving the returned SolidDataset to\r\n * a Solid Pod, only Quads in the Default Graph will be stored.\r\n *\r\n * @param rdfJsDataset The source RDF/JS Dataset.\r\n * @returns A [[SolidDataset]] containing the same data as the given RDF/JS Dataset.\r\n * @since 1.9.0\r\n */\r\nfunction fromRdfJsDataset(rdfJsDataset) {\r\n    const dataset = {\r\n        graphs: { default: {} },\r\n        type: \"Dataset\",\r\n    };\r\n    const quads = Array.from(rdfJsDataset);\r\n    const chainBlankNodes = getChainBlankNodes(quads);\r\n    // Quads with chain Blank Nodes as their Subject will be parsed when those\r\n    // Blank Nodes are referred to in an Object. See `addRdfJsQuadToObjects`.\r\n    const quadsWithoutChainBlankNodeSubjects = quads.filter((quad) => chainBlankNodes.every((chainBlankNode) => !chainBlankNode.equals(quad.subject)));\r\n    return quadsWithoutChainBlankNodeSubjects.reduce((datasetAcc, quad) => addRdfJsQuadToDataset(datasetAcc, quad, {\r\n        otherQuads: quads,\r\n        chainBlankNodes: chainBlankNodes,\r\n    }), dataset);\r\n}\r\n/**\r\n * Convert a [[SolidDataset]] into an RDF/JS Dataset\r\n *\r\n * Export a [[SolidDataset]] into an RDF/JS\r\n * {@link https://rdf.js.org/dataset-spec/#datasetcore-interface DatasetCore}.\r\n *\r\n * @param set A [[SolidDataset]] to export into an RDF/JS Dataset.\r\n * @param options Optional parameter that allows you to pass in your own RDF/JS DataFactory or DatasetCoreFactory.\r\n * @returns An RDF/JS Dataset containing the data from the given SolidDataset.\r\n * @since 1.9.0\r\n */\r\nfunction toRdfJsDataset(set, options = {}) {\r\n    var _a, _b;\r\n    const datasetFactory = (_b = (_a = options.datasetFactory) === null || _a === void 0 ? void 0 : _a.dataset) !== null && _b !== void 0 ? _b : rdfJsDataset;\r\n    return datasetFactory(toRdfJsQuads(set, options));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction getProfileFromProfileDoc(profileDataset, webId) {\r\n    const profile = getThing(profileDataset, webId);\r\n    if (profile === null) {\r\n        throw new Error(`Profile document [${getSourceUrl(profileDataset)}] does not include WebID [${webId}]`);\r\n    }\r\n    return profile;\r\n}\r\n/**\r\n * Set a JWKS IRI associated with a WebID in a profile document.\r\n *\r\n * @param profileDocument The profile document dataset.\r\n * @param webId The WebID associated with the profile document.\r\n * @param jwksIri The JWKS IRI to be set.\r\n * @returns A modified copy of the profile document, with the JWKS IRI set.\r\n * @since 1.12.0\r\n */\r\nfunction setProfileJwks(profileDocument, webId, jwksIri) {\r\n    return setThing(profileDocument, setIri(getProfileFromProfileDoc(profileDocument, webId), security.publicKey, jwksIri));\r\n}\r\n/**\r\n * Look for a JWKS IRI optionally advertized from a profile document.\r\n *\r\n * @param profileDocument The profile document.\r\n * @param webId The WebID featured in the profile document.\r\n * @returns The JWKS IRI associated with the WebID, if any.\r\n * @since 1.12.0\r\n */\r\nfunction getProfileJwksIri(profileDocument, webId) {\r\n    return getUrl(getProfileFromProfileDoc(profileDocument, webId), security.publicKey);\r\n}\r\nconst isJwks = (jwksDocument) => {\r\n    return typeof jwksDocument.keys !== \"undefined\";\r\n};\r\n/**\r\n * Fetch a JWKS at a given IRI, and add the given JWK to the obtained key set.\r\n *\r\n * @param jwk The JWK to add to the set.\r\n * @param jwksIri The IRI where the key set should be looked up.\r\n * @param options @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a JWKS where the given key has been added.\r\n * @since 1.12.0\r\n */\r\nasync function addJwkToJwks(jwk, jwksIri, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const jwksResponse = await config.fetch(jwksIri);\r\n    if (!jwksResponse.ok) {\r\n        throw new Error(`Fetching [${jwksIri}] returned an error: ${jwksResponse.status} ${jwksResponse.statusText}`);\r\n    }\r\n    try {\r\n        const jwksDocument = await jwksResponse.json();\r\n        if (!isJwks(jwksDocument)) {\r\n            throw new Error(`[${jwksIri}] does not dereference to a valid JWKS: ${JSON.stringify(jwksDocument)}`);\r\n        }\r\n        return {\r\n            keys: [...jwksDocument.keys, jwk],\r\n        };\r\n    }\r\n    catch (e) {\r\n        throw new Error(`Parsing the document at [${jwksIri}] failed: ${e}`);\r\n    }\r\n}\r\n/**\r\n * Adds a public key to the JWKS listed in the profile associated to the given WebID.\r\n * Retrieves the profile document for the specified WebID and looks up the associated\r\n * JWKS. Having added the given key to the JWKS, this function overwrites the\r\n * previous JWKS so that the new version is saved. This assumes the JWKS is hosted\r\n * at a read-write IRI, such as in a Solid Pod.\r\n *\r\n * @param publicKey The public key value to set.\r\n * @param webId The WebID whose profile document references the key set to which we wish to add the specified public key.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 1.12.0\r\n */\r\nasync function addPublicKeyToProfileJwks(publicKey, webId, options = internal_defaultFetchOptions) {\r\n    const profileDataset = await getSolidDataset(webId, {\r\n        fetch: options.fetch,\r\n    });\r\n    if (profileDataset === null) {\r\n        throw new Error(`The profile document associated with WebID [${webId}] could not be retrieved.`);\r\n    }\r\n    const jwksIri = getProfileJwksIri(profileDataset, webId);\r\n    if (jwksIri === null) {\r\n        throw new Error(`No key set is declared for the property [${security.publicKey}] in the profile of [${webId}]`);\r\n    }\r\n    const updatedJwks = await addJwkToJwks(publicKey, jwksIri, options);\r\n    return overwriteFile(jwksIri, new Blob([JSON.stringify(updatedJwks)]), {\r\n        contentType: \"application/json\",\r\n        fetch: options.fetch,\r\n    });\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * List all the alternative profiles IRI found in a given WebID profile.\r\n *\r\n * Note that some of these profiles may be private, and you may not have access to\r\n * the resulting resource.\r\n *\r\n * @param webId The WebID of the user's whose alternative profiles you are discovering.\r\n * @param webIdProfile The WebID profile obtained dereferencing the provided WebID.\r\n * @returns A list of URLs of the user's alternative profiles.\r\n * @since 1.20.0\r\n */\r\nfunction getAltProfileUrlAllFrom(webId, webIdProfile) {\r\n    const webIdThing = getThing(webIdProfile, webId);\r\n    const altProfileUrlAll = getThingAll(webIdProfile)\r\n        .filter((thing) => getIriAll(thing, foaf.primaryTopic).length > 0)\r\n        .map(asIri)\r\n        .concat(webIdThing ? getIriAll(webIdThing, foaf.isPrimaryTopicOf) : [])\r\n        .filter((profileIri) => profileIri !== getSourceIri(webIdProfile));\r\n    // Deduplicate the results.\r\n    return Array.from(new Set(altProfileUrlAll));\r\n}\r\nasync function getProfileAll(webId, options = internal_defaultFetchOptions) {\r\n    var _a, _b;\r\n    const authFetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : fetch;\r\n    const webIdProfile = (_b = options.webIdProfile) !== null && _b !== void 0 ? _b : (await getSolidDataset(webId, { fetch: fetch$1 }));\r\n    const altProfileAll = (await Promise.allSettled(getAltProfileUrlAllFrom(webId, webIdProfile).map((uniqueProfileIri) => getSolidDataset(uniqueProfileIri, { fetch: authFetch }))))\r\n        // Ignore the alternative profiles lookup which failed.\r\n        .filter((result) => result.status === \"fulfilled\")\r\n        .map((successfulResult) => successfulResult.value);\r\n    return {\r\n        webIdProfile,\r\n        altProfileAll,\r\n    };\r\n}\r\n/**\r\n * Discover the Pods an agent advertises for in their profile resources. Both the\r\n * agent's WebID and alternative profiles are fetched. Note that this function will\r\n * only return URLs of Pods linked to using the `pim:storage`, i.e. a triple\r\n * looking like <myWebid, pim:storage, myPodUrl> should appear in the profile\r\n * resources.\r\n *\r\n * @param webId The WebID of the agent whose Pods should be discovered\r\n * @param options Optional parameter\r\n * - `options.fetch`: An alternative `fetch` function to make the HTTP request,\r\n *    compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns a Promise resolving to an array containing the URLs of all the Pods\r\n * linked from the agent's profile resource using the `pim:storage` predicate.\r\n * @since 1.18.0\r\n */\r\nasync function getPodUrlAll(webId, options = internal_defaultFetchOptions) {\r\n    const profiles = await getProfileAll(webId, options);\r\n    return getPodUrlAllFrom(profiles, webId);\r\n}\r\n/**\r\n * Discover the Pods advertised for in the provided profile resources. Note that\r\n * this function will only return URLs of Pods linked to using the `pim:storage`\r\n * predicate, i.e. a triple looking like <myWebid, pim:storage, myPodUrl>\r\n * should appear in the profile resources.\r\n *\r\n * @param profiles The profile resources in which the Pods should be discovered\r\n * @param webId The WebID of the agent whose Pods should be discovered\r\n * @returns An array containing the URLs of all the Pods linked from the agent's\r\n * profile resource using the `pim:storage` predicate.\r\n * @since 1.18.0\r\n */\r\nfunction getPodUrlAllFrom(profiles, webId) {\r\n    const result = new Set();\r\n    [profiles.webIdProfile, ...profiles.altProfileAll].forEach((profileResource) => {\r\n        const webIdThing = getThing(profileResource, webId);\r\n        if (webIdThing !== null) {\r\n            getIriAll(webIdThing, pim.storage).forEach((podIri) => result.add(podIri));\r\n        }\r\n    });\r\n    return Array.from(result);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst prefixes = {\r\n    acl: \"http://www.w3.org/ns/auth/acl#\",\r\n    acp: \"http://www.w3.org/ns/solid/acp#\",\r\n    cc: \"http://creativecommons.org/ns#\",\r\n    cert: \"http://www.w3.org/ns/auth/cert#\",\r\n    csvw: \"http://www.w3.org/ns/csvw#\",\r\n    current: \"#\",\r\n    dc: \"http://purl.org/dc/terms/\",\r\n    dcam: \"http://purl.org/dc/dcam/\",\r\n    dcat: \"http://www.w3.org/ns/dcat#\",\r\n    dctype: \"http://purl.org/dc/dcmitype/\",\r\n    foaf: \"http://xmlns.com/foaf/0.1/\",\r\n    ldp: \"http://www.w3.org/ns/ldp#\",\r\n    owl: \"http://www.w3.org/2002/07/owl#\",\r\n    posixstat: \"http://www.w3.org/ns/posix/stat#\",\r\n    rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\r\n    rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\r\n    schema: \"https://schema.org/\",\r\n    shacl: \"http://www.w3.org/ns/shacl#\",\r\n    skos: \"http://www.w3.org/2004/02/skos/core#\",\r\n    skosxl: \"http://www.w3.org/2008/05/skos-xl#\",\r\n    solid: \"http://www.w3.org/ns/solid/terms#\",\r\n    swapdoc: \"http://www.w3.org/2000/10/swap/pim/doc#\",\r\n    ui: \"http://www.w3.org/ns/ui#\",\r\n    vann: \"http://purl.org/vocab/vann/\",\r\n    vcard: \"http://www.w3.org/2006/vcard/ns#\",\r\n    ws: \"http://www.w3.org/ns/pim/space#\",\r\n    xsd: \"http://www.w3.org/2001/XMLSchema#\",\r\n};\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * A function to serialise a Solid Dataset as Turtle\r\n *\r\n * @param dataset The Dataset to serialize as Turtle\r\n * @param options.prefixes The Prefixes to use for Turtle serialisation (defaulting to a set of well known prefixes)\r\n * @param options.thing Restricts serialisation to the part of a dataset related to the thing\r\n * @returns RDF serialised as Turtle\r\n * @since 1.20.0\r\n */\r\nasync function solidDatasetAsTurtle(dataset, options) {\r\n    const { prefixes: prefixes$1 = prefixes, thing } = Object.assign({}, options);\r\n    const writer = new Writer({ format: \"application/turtle\", prefixes: prefixes$1 });\r\n    const subject = thing ? new NamedNode(thing) : undefined;\r\n    // If the subject is undefined, all the triples match.\r\n    for (const quad of toRdfJsDataset(dataset).match(subject)) {\r\n        writer.addQuad(quad);\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        writer.end((error, result) => {\r\n            /* istanbul ignore next */\r\n            if (error) {\r\n                return reject(error);\r\n            }\r\n            resolve(result);\r\n        });\r\n    });\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction internal_getAcr(resource) {\r\n    if (!hasAccessibleAcr(resource)) {\r\n        throw new Error(`An Access Control Resource for [${getSourceUrl(resource)}] is not available. This could be because the current user is not allowed to see it, or because their Pod Server does not support Access Control Resources.`);\r\n    }\r\n    return resource.internal_acp.acr;\r\n}\r\n/** @hidden */\r\nfunction internal_setAcr(resource, acr) {\r\n    return Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: Object.assign(Object.assign({}, resource.internal_acp), { acr: acr }),\r\n    });\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new [[Control]].\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_createControl(options) {\r\n    let control = createThing(options);\r\n    control = setIri(control, rdf.type, acp.AccessControl);\r\n    return control;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Find an [[Control]] with a given URL in a given Resource with an Access Control Resource.\r\n *\r\n * @returns The requested Access Control, or `null` if it could not be found.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_getControl(withAccessControlResource, url, options) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const foundThing = getThing(acr, url, options);\r\n    if (foundThing === null ||\r\n        !getIriAll(foundThing, rdf.type).includes(acp.AccessControl)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[Control]]s in the Access Control Resource of a given Resource.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_getControlAll(withAccessControlResource, options) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const foundThings = getThingAll(acr, options);\r\n    const explicitAccessControl = foundThings.filter((foundThing) => getIriAll(foundThing, rdf.type).includes(acp.AccessControl));\r\n    const implicitAccessControl = foundThings\r\n        .filter((foundThing) => getIriAll(foundThing, acp.accessControl).length > 0)\r\n        .map((thingWithAccessControl) => {\r\n        // The initial filter ensures that at least one AccessControl will be found.\r\n        const controlIri = getIriAll(thingWithAccessControl, acp.accessControl)[0];\r\n        // The found control is only an object in the current dataset, so we create the\r\n        // associated thing in order to possibly make it a subject.\r\n        return createThing({ url: controlIri });\r\n    });\r\n    return explicitAccessControl.concat(implicitAccessControl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert an [[Control]] into the [[AccessControlResource]] of a Resource, replacing previous\r\n * instances of that Access Control.\r\n *\r\n * @param withAccessControlResource A Resource with the Access Control Resource into which to insert an Access Control.\r\n * @param control The Control to insert into the Access Control Resource.\r\n * @returns The given Resource with a new Access Control Resource equal to the original Access Control Resource, but with the given Access Control.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction internal_setControl(withAccessControlResource, control) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const updatedAcr = setThing(acr, control);\r\n    const updatedResource = internal_setAcr(withAccessControlResource, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an [[Control]] such that that Policy applies to the Resource to which\r\n * the [[Control]] is linked.\r\n *\r\n * @param accessControl The [[Control]] to which the Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given policy added to it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_addPolicyUrl(accessControl, policyUrl) {\r\n    return addIri(accessControl, acp.apply, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all Policies that apply to the Resource to which the given [[Control]] is linked, and\r\n * which can be removed by anyone with Write access to the Access Control Resource that contains the\r\n * [[Control]].\r\n *\r\n * @param accessControl The [[Control]] of which to get the Policies.\r\n * @returns The Policies that are listed in this [[Control]] as applying to the Resource it is linked to, and as removable by anyone with Write access to the Access Control Resource.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_getPolicyUrlAll(accessControl) {\r\n    return getIriAll(accessControl, acp.apply);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove a given Policy that applies to the Resource to which the given [[Control]] is linked,\r\n * and which can be removed by anyone with Write access to the Access Control Resource that contains\r\n * the Access Control.\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Policies.\r\n * @param policyUrl URL of the Policy that should no longer apply to the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given Policy removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removePolicyUrl(accessControl, policyUrl) {\r\n    return removeIri(accessControl, acp.apply, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove all Policies that apply to the Resource to which the given [[Control]] is linked, and\r\n * which can be removed by anyone with Write access to the Access Control Resource that contains the\r\n * [[Control]].\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Policies.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with all Policies removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removePolicyUrlAll(accessControl) {\r\n    return removeAll(accessControl, acp.apply);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an [[Control]] such that that Policy applies to the children of the\r\n * Resource to which the [[Control]] is linked.\r\n *\r\n * @param accessControl The [[Control]] to which the Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the children of the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given policy added to it as a Member Policy.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_addMemberPolicyUrl(accessControl, policyUrl) {\r\n    return addIri(accessControl, acp.applyMembers, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all Policies that apply to the children of the Resource to which the given [[Control]] is\r\n * linked, and which can be removed by anyone with Write access to the Access Control Resource that\r\n * contains the [[Control]].\r\n *\r\n * @param accessControl The [[Control]] of which to get the Policies.\r\n * @returns The Policies that are listed in this [[Control]] as applying to the children of the Resource it is linked to, and as removable by anyone with Write access to the Access Control Resource.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_getMemberPolicyUrlAll(accessControl) {\r\n    return getIriAll(accessControl, acp.applyMembers);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove a given Policy that applies to the children of the Resource to which the given Access\r\n * Control is linked, and which can be removed by anyone with Write access to the Access Control\r\n * Resource that contains the Access Control.\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Member Policy.\r\n * @param policyUrl URL of the Member Policy that should no longer apply to the Resource to which the [[Control]] is linked.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with the given Member Policy removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removeMemberPolicyUrl(accessControl, policyUrl) {\r\n    return removeIri(accessControl, acp.applyMembers, policyUrl);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove all Policies that apply to the children of the Resource to which the given Access Control\r\n * is linked, and which can be removed by anyone with Write access to the Access Control Resource\r\n * that contains the Access Control.\r\n *\r\n * @param accessControl The [[Control]] of which to remove the Member Policies.\r\n * @returns A new [[Control]] equal to the given [[Control]], but with all Member Policies removed from it.\r\n * @hidden Developers don't need to care about working with Controls - they can just add Policies to the Resource directly.\r\n * @deprecated\r\n */\r\nfunction internal_removeMemberPolicyUrlAll(accessControl) {\r\n    return removeAll(accessControl, acp.applyMembers);\r\n}\r\nfunction internal_getInitialisedControl(resourceWithAcr) {\r\n    const allControls = internal_getControlAll(resourceWithAcr);\r\n    return allControls.length === 0 ? internal_createControl() : allControls[0];\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a Resource, check whether it is governed by Access Policies.\r\n * (Specifically, a Resource that is governed by Access Policies will refer to exactly one Access\r\n * Control Resource, and expose that to users who are allowed to see or modify access to the given\r\n * Resource.)\r\n *\r\n * @param resource Resource which may or may not be governed by Access Policies.\r\n * @returns True if the Resource refers to an Access Control Resource and is hence governed by Access Policies, or false if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction hasLinkedAcr(resource) {\r\n    return (hasServerResourceInfo(resource) &&\r\n        Array.isArray(resource.internal_resourceInfo.linkedResources[acp.accessControl]) &&\r\n        resource.internal_resourceInfo.linkedResources[acp.accessControl].length ===\r\n            1);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an Access Control Resource such that that [[Policy]] applies to the Access\r\n * Control Resource itself, rather than the Resource it governs.\r\n *\r\n * @param resourceWithAcr The Resource with an Access Control Resource to which the ACR Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Access Control Resource.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy added to it.\r\n * @since 1.6.0\r\n */\r\nfunction addAcrPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    var _a;\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    let acrThing = (_a = getThing(acr, acrUrl)) !== null && _a !== void 0 ? _a : createThing({ url: acrUrl });\r\n    acrThing = addIri(acrThing, acp.access, policyUrl);\r\n    const updatedAcr = setThing(acr, acrThing);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to a Resource's Access Control Resource such that that\r\n * Policy applies to the Access Control Resources of child Resources.\r\n *\r\n * @param resourceWithAcr The Resource with an Access Control Resource to which the ACR Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Access Control Resources of children of the Resource.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy added to it.\r\n * @since 1.6.0\r\n */\r\nfunction addMemberAcrPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    var _a;\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    let acrThing = (_a = getThing(acr, acrUrl)) !== null && _a !== void 0 ? _a : createThing({ url: acrUrl });\r\n    acrThing = addIri(acrThing, acp.accessMembers, policyUrl);\r\n    const updatedAcr = setThing(acr, acrThing);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to an Access Control Resource itself, rather than\r\n * to the Resource it governs.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to it.\r\n * @returns URLs of the Policies that govern access to the given Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getAcrPolicyUrlAll$1(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, acp.access);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to the Access Control Resources of the Resource's\r\n * children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to its children.\r\n * @returns URLs of the Policies that govern access to the Access Control Resources of the given Resource's children.\r\n * @since 1.6.0\r\n */\r\nfunction getMemberAcrPolicyUrlAll$1(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, acp.accessMembers);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to an Access Control Resource itself.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to which the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given ACR Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removeAcrPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeIri(acrThing, acp.access, policyUrl);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to the Access Control Resources of the\r\n * Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to whose children's ACRs the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given member ACR Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberAcrPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeIri(acrThing, acp.accessMembers, policyUrl);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to an Access Control Resource itself.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to which no more Policies should apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to it.\r\n * @since 1.6.0\r\n */\r\nfunction removeAcrPolicyUrlAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeAll(acrThing, acp.access);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to the Access Control Resources of the Resource's\r\n * children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource that should no longer apply Policies to its children's ACRs.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to its children's ACRs.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberAcrPolicyUrlAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const acrThing = getThing(acr, acrUrl);\r\n    if (acrThing === null) {\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcrThing = removeAll(acrThing, acp.accessMembers);\r\n    const updatedAcr = setThing(acr, updatedAcrThing);\r\n    return internal_setAcr(resourceWithAcr, updatedAcr);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to an Access Control Resource such that that [[Policy]] applies to that Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the ACR Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Resource.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Policy added to it.\r\n * @since 1.6.0\r\n */\r\nfunction addPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    const control = internal_getInitialisedControl(resourceWithAcr);\r\n    const updatedControl = internal_addPolicyUrl(control, policyUrl);\r\n    const updatedResource = internal_setControl(resourceWithAcr, updatedControl);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a [[Policy]] to a Resource's Access Control Resource such that that\r\n * Policy applies to that Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource to whose Access Control Resource the Policy should be added.\r\n * @param policyUrl URL of the Policy that should apply to the given Resource's children.\r\n * @returns A new Resource equal to the given Resource, but with the given Member Policy added to its Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction addMemberPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    const control = internal_getInitialisedControl(resourceWithAcr);\r\n    const updatedControl = internal_addMemberPolicyUrl(control, policyUrl);\r\n    const updatedResource = internal_setControl(resourceWithAcr, updatedControl);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to a Resource.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to it.\r\n * @returns URLs of the Policies that govern access to the given Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getPolicyUrlAll$1(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const policyUrlsByControl = controls.map((control) => internal_getPolicyUrlAll(control));\r\n    const uniquePolicyUrls = new Set();\r\n    policyUrlsByControl.forEach((policyUrls) => {\r\n        policyUrls.forEach((url) => uniquePolicyUrls.add(url));\r\n    });\r\n    return Array.from(uniquePolicyUrls);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the URLs of the Access Policies that apply to a Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource of which to get the URLs of the Policies that govern access to its children.\r\n * @returns URLs of the Policies that govern access to the given Resource's children.\r\n * @since 1.6.0\r\n */\r\nfunction getMemberPolicyUrlAll$1(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const memberPolicyUrlsByControl = controls.map((control) => internal_getMemberPolicyUrlAll(control));\r\n    const uniquePolicyUrls = new Set();\r\n    memberPolicyUrlsByControl.forEach((policyUrls) => {\r\n        policyUrls.forEach((url) => uniquePolicyUrls.add(url));\r\n    });\r\n    return Array.from(uniquePolicyUrls);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to a Resource.\r\n *\r\n * @param resourceWithAcr The Resource, with its Access Control Resource, to which the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removePolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removePolicyUrl(control, policyUrl));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop the URL of a given [[Policy]] from applying to the Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource to whose children the given URL of a Policy should no longer apply.\r\n * @param policyUrl The URL of the Policy that should no longer apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but with the given Member Policy removed from it.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberPolicyUrl$1(resourceWithAcr, policyUrl) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removeMemberPolicyUrl(control, policyUrl));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to a Resource.\r\n *\r\n * @param resourceWithAcr The Resource, with its Access Control Resource, to which no more Policies should apply.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to the Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removePolicyUrlAll(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removePolicyUrlAll(control));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Stop all URL of Access Policies from applying to the Resource's children.\r\n *\r\n * @param resourceWithAcr The Resource with the Access Control Resource that should no longer apply Policies to its children.\r\n * @returns A Resource with a new Access Control Resource equal to the original ACR, but without any Policy applying to the Resource's children.\r\n * @since 1.6.0\r\n */\r\nfunction removeMemberPolicyUrlAll(resourceWithAcr) {\r\n    const controls = internal_getControlAll(resourceWithAcr);\r\n    const updatedControls = controls.map((control) => internal_removeMemberPolicyUrlAll(control));\r\n    const updatedResource = updatedControls.reduce(internal_setControl, resourceWithAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Control]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param resourceWithAcr The Resource with an attached Access Control Resource of which you want to get a human-readable representation.\r\n * @since 1.6.0\r\n * @deprecated\r\n */\r\nfunction acrAsMarkdown(resourceWithAcr) {\r\n    let markdown = `# Access controls for ${getSourceUrl(resourceWithAcr)}\\n`;\r\n    const policyUrls = getPolicyUrlAll$1(resourceWithAcr);\r\n    const memberPolicyUrls = getMemberPolicyUrlAll$1(resourceWithAcr);\r\n    const acrPolicyUrls = getAcrPolicyUrlAll$1(resourceWithAcr);\r\n    const memberAcrPolicyUrls = getMemberAcrPolicyUrlAll$1(resourceWithAcr);\r\n    if (policyUrls.length === 0 &&\r\n        memberPolicyUrls.length === 0 &&\r\n        acrPolicyUrls.length === 0 &&\r\n        memberAcrPolicyUrls.length === 0) {\r\n        markdown += \"\\n<no policies specified yet>\\n\";\r\n    }\r\n    if (policyUrls.length > 0) {\r\n        markdown += \"\\nThe following policies apply to this resource:\\n- \";\r\n        markdown += policyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (acrPolicyUrls.length > 0) {\r\n        markdown +=\r\n            \"\\nThe following policies apply to the access control resource for this resource:\\n- \";\r\n        markdown += acrPolicyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (memberPolicyUrls.length > 0) {\r\n        markdown +=\r\n            \"\\nThe following policies apply to the children of this resource:\\n- \";\r\n        markdown += memberPolicyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (memberAcrPolicyUrls.length > 0) {\r\n        markdown +=\r\n            \"\\nThe following policies apply to the access control resources for children of this resource:\\n- \";\r\n        markdown += memberAcrPolicyUrls.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nconst ACP_NAMESPACE = \"http://www.w3.org/ns/solid/acp#\";\r\n/** @hidden */\r\nconst ACP = {\r\n    AccessControl: ACP_NAMESPACE.concat(\"AccessControl\"),\r\n    AccessControlResource: ACP_NAMESPACE.concat(\"AccessControlResource\"),\r\n    AuthenticatedAgent: ACP_NAMESPACE.concat(\"AuthenticatedAgent\"),\r\n    CreatorAgent: ACP_NAMESPACE.concat(\"CreatorAgent\"),\r\n    Matcher: ACP_NAMESPACE.concat(\"Matcher\"),\r\n    Policy: ACP_NAMESPACE.concat(\"Policy\"),\r\n    PublicAgent: ACP_NAMESPACE.concat(\"PublicAgent\"),\r\n    access: ACP_NAMESPACE.concat(\"access\"),\r\n    accessControl: ACP_NAMESPACE.concat(\"accessControl\"),\r\n    agent: ACP_NAMESPACE.concat(\"agent\"),\r\n    allOf: ACP_NAMESPACE.concat(\"allOf\"),\r\n    allow: ACP_NAMESPACE.concat(\"allow\"),\r\n    anyOf: ACP_NAMESPACE.concat(\"anyOf\"),\r\n    apply: ACP_NAMESPACE.concat(\"apply\"),\r\n    client: ACP_NAMESPACE.concat(\"client\"),\r\n    deny: ACP_NAMESPACE.concat(\"deny\"),\r\n    memberAccessControl: ACP_NAMESPACE.concat(\"memberAccessControl\"),\r\n    noneOf: ACP_NAMESPACE.concat(\"noneOf\"),\r\n    vc: ACP_NAMESPACE.concat(\"vc\"),\r\n};\r\n/** @hidden */\r\nconst ACL_NAMESPACE = \"http://www.w3.org/ns/auth/acl#\";\r\n/** @hidden */\r\nconst ACL = {\r\n    Append: ACL_NAMESPACE.concat(\"Append\"),\r\n    Control: ACL_NAMESPACE.concat(\"Control\"),\r\n    Read: ACL_NAMESPACE.concat(\"Read\"),\r\n    Write: ACL_NAMESPACE.concat(\"Write\"),\r\n};\r\n/** @hidden */\r\nconst VC_ACCESS_GRANT = \"http://www.w3.org/ns/solid/vc#SolidAccessGrant\";\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getAccessControlResourceThing(resource) {\r\n    const acr = internal_getAcr(resource);\r\n    const acrUrl = getSourceUrl(acr);\r\n    return getThing(acr, acrUrl);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nconst DEFAULT_ACCESS_CONTROL = \"defaultAccessControl\";\r\n/** @hidden */\r\nconst DEFAULT_ACR_ACCESS_CONTROL = \"defaultAcrAccessControl\";\r\n/** @hidden */\r\nconst DEFAULT_MEMBER_ACCESS_CONTROL = \"defaultMemberAccessControl\";\r\n/** @hidden */\r\nconst DEFAULT_MEMBER_ACR_ACCESS_CONTROL = \"defaultMemberAcrAccessControl\";\r\n/** @hidden */\r\nfunction getDefaultAccessControlUrl(resource, name) {\r\n    const acr = internal_getAcr(resource);\r\n    const acrUrl = getSourceUrl(acr);\r\n    return acrUrl.concat(\"#\").concat(name);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getDefaultAccessControlThing(resource, name) {\r\n    const acr = internal_getAcr(resource);\r\n    const defaultAccessControlUrl = getDefaultAccessControlUrl(resource, name);\r\n    const accessControlThing = getThing(acr, defaultAccessControlUrl);\r\n    if (accessControlThing === null ||\r\n        typeof accessControlThing === \"undefined\") {\r\n        return createThing({ url: defaultAccessControlUrl });\r\n    }\r\n    return accessControlThing;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getModes(policy, type) {\r\n    const modes = getIriAll(policy, type);\r\n    return {\r\n        read: modes.includes(ACL.Read),\r\n        append: modes.includes(ACL.Append),\r\n        write: modes.includes(ACL.Write),\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @hidden\r\n *\r\n * Internal function that attaches an ACR to a Resource. Prefer using this than\r\n * setting the internal values manually (easier to refactor when changing the internals).\r\n */\r\nfunction setAcr(resource, acr) {\r\n    return Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: {\r\n            acr,\r\n        },\r\n    });\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction setModes(policy, modes, type) {\r\n    let newPolicy = removeAll(policy, type);\r\n    if (modes.read || modes.controlRead) {\r\n        newPolicy = addIri(newPolicy, type, ACL.Read);\r\n    }\r\n    if (modes.append) {\r\n        newPolicy = addIri(newPolicy, type, ACL.Append);\r\n    }\r\n    if (modes.write || modes.controlWrite) {\r\n        newPolicy = addIri(newPolicy, type, ACL.Write);\r\n    }\r\n    return newPolicy;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DEFAULT_VC_POLICY_NAME = \"defaultVcPolicy\";\r\nconst DEFAULT_VC_MATCHER_NAME = \"defaultVcMatcher\";\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Set the maximum access modes that are allowed for a VC holder for a given resource.\r\n * If the resource owner issued an Access Grant for the resource, the agent that\r\n * has been granted access will have at most the permissions set by this function.\r\n * The Access Grant may be more restrictive.\r\n *\r\n * Note that additional access may have been set if the ACR has been manipulated\r\n * not using this library, which is currently out of scope. In this case, the access\r\n * set by this function may not apply.\r\n *\r\n * @param resourceWithAcr The resource for which the access modes are being set for VC holders.\r\n * @param access The access modes to set. Setting a mode to `true` will enable it, to `false`\r\n * will disable it, and to `undefined` will leave it unchanged compared to what was previously\r\n * set.\r\n * @returns A copy of the resource and its attached ACR, updated to the new access modes.\r\n * @since 1.17.0\r\n */\r\nfunction setVcAccess(resourceWithAcr, access) {\r\n    var _a, _b;\r\n    let acr = internal_getAcr(resourceWithAcr);\r\n    const defaultVcPolicyIri = `${getSourceIri(acr)}#${DEFAULT_VC_POLICY_NAME}`;\r\n    const defaultVcMatcherIri = `${getSourceIri(acr)}#${DEFAULT_VC_MATCHER_NAME}`;\r\n    let accessControl = getDefaultAccessControlThing(resourceWithAcr, \"defaultAccessControl\");\r\n    let acrThing = (_a = getAccessControlResourceThing(resourceWithAcr)) !== null && _a !== void 0 ? _a : buildThing({ url: getSourceIri(acr) })\r\n        .addIri(ACP.accessControl, accessControl)\r\n        .build();\r\n    if (!getIriAll(acrThing, ACP.accessControl).includes(asIri(accessControl))) {\r\n        // Case when the ACR Thing existed, but did not include a link to the default Access Control.\r\n        acrThing = addIri(acrThing, ACP.accessControl, accessControl);\r\n    }\r\n    let vcPolicy = getThing(acr, defaultVcPolicyIri);\r\n    if (vcPolicy === null) {\r\n        // If the policy does not exist, create it and link the default Access Control to it.\r\n        vcPolicy = buildThing({ url: defaultVcPolicyIri })\r\n            .addIri(rdf.type, ACP.Policy)\r\n            .addIri(ACP.anyOf, defaultVcMatcherIri)\r\n            .build();\r\n        accessControl = addIri(accessControl, ACP.apply, vcPolicy);\r\n    }\r\n    const vcMatcher = (_b = getThing(acr, defaultVcMatcherIri)) !== null && _b !== void 0 ? _b : buildThing({ url: defaultVcMatcherIri })\r\n        .addIri(rdf.type, ACP.Matcher)\r\n        .addIri(ACP.vc, VC_ACCESS_GRANT)\r\n        .build();\r\n    const currentModes = getModes(vcPolicy, ACP.allow);\r\n    // Only change the modes which are set in `access`, and preserve the others.\r\n    vcPolicy = setModes(vcPolicy, Object.assign(Object.assign({}, currentModes), access), ACP.allow);\r\n    // Write the changed access control, policy and matchers in the ACR\r\n    acr = [acrThing, accessControl, vcPolicy, vcMatcher].reduce(setThing, acr);\r\n    return setAcr(resourceWithAcr, acr);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DEFAULT_NO_ACCESS = {\r\n    read: false,\r\n    append: false,\r\n    write: false,\r\n    controlRead: false,\r\n    controlWrite: false,\r\n};\r\nconst linkExists = (subject, predicate, object) => getIriAll(subject, predicate).includes(asIri(object));\r\n// TODO: It should be possible to write a `chainExists` function, taking in a chain\r\n// of Thing, predicate, Thing, predicate... and checks whether such chain exists\r\n// in a given dataset. It would make the following function much easier to read,\r\n// instead of checking at each link that it isn't null and it is connected to the\r\n// next link.\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the maximum access modes that are allowed for a VC holder for a given resource.\r\n * If the resource owner issued an Access Grant for the resource, the agent that\r\n * has been granted access will have at most the permissions returned by this function.\r\n * The Access Grant may be more restrictive.\r\n *\r\n * Note that only the modes set using [[setVcAccess]] will be returned by this function.\r\n * Additional access may have been set if the ACR has been manipulated not using this\r\n * library, which is currently out of scope.\r\n *\r\n * @param resourceWithAcr The resource for which the VC access modes are looked up.\r\n * @returns The access modes available to a VC holder.\r\n * @since 1.17.0\r\n */\r\nfunction getVcAccess(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const accessControl = getDefaultAccessControlThing(resourceWithAcr, \"defaultAccessControl\");\r\n    const acrThing = getAccessControlResourceThing(resourceWithAcr);\r\n    if (acrThing === null ||\r\n        !linkExists(acrThing, ACP.accessControl, accessControl)) {\r\n        return DEFAULT_NO_ACCESS;\r\n    }\r\n    const defaultVcPolicyIri = `${getSourceIri(acr)}#${DEFAULT_VC_POLICY_NAME}`;\r\n    const vcPolicy = getThing(acr, defaultVcPolicyIri);\r\n    if (vcPolicy === null || !linkExists(accessControl, ACP.apply, vcPolicy)) {\r\n        return DEFAULT_NO_ACCESS;\r\n    }\r\n    const defaultVcMatcherIri = `${getSourceIri(acr)}#${DEFAULT_VC_MATCHER_NAME}`;\r\n    const vcMatcher = getThing(acr, defaultVcMatcherIri);\r\n    if (vcMatcher === null || !linkExists(vcPolicy, ACP.anyOf, vcMatcher)) {\r\n        return DEFAULT_NO_ACCESS;\r\n    }\r\n    return getModes(vcPolicy, ACP.allow);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a SolidDataset and its associated Access Control Resource (if available to the current user).\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and the ACR that applies to it, if available to the authenticated user.\r\n * @since 1.6.0\r\n */\r\nasync function getSolidDatasetWithAcr(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const solidDataset = await getSolidDataset(urlString, config);\r\n    const acp = await fetchAcr(solidDataset, config);\r\n    return Object.assign(Object.assign({}, solidDataset), acp);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a file and its associated Access Control Resource (if available to the current user).\r\n *\r\n * @param url URL of the file to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A file and the ACR that applies to it, if available to the authenticated user.\r\n * @since 1.6.0\r\n */\r\nasync function getFileWithAcr(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const file = await getFile(urlString, config);\r\n    const acp = await fetchAcr(file, config);\r\n    return Object.assign(file, acp);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieve information about a Resource and its associated Access Control Resource (if available to\r\n * the current user), without fetching the Resource itself.\r\n *\r\n * @param url URL of the Resource about which to fetch its information.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Metadata describing a Resource, and the ACR that applies to it, if available to the authenticated user.\r\n * @since 1.6.0\r\n */\r\nasync function getResourceInfoWithAcr(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const resourceInfo = await getResourceInfo(urlString, config);\r\n    const acp = await fetchAcr(resourceInfo, config);\r\n    return Object.assign(Object.assign({}, resourceInfo), acp);\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a SolidDataset, and:\r\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\r\n *                                          the current user), and all the Access Control Policies\r\n *                                          referred to therein, if available to the current user.\r\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\r\n *                                          user), or its Fallback ACL if it does not exist.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and either the ACL access data or the ACR access data, if available to the current user.\r\n * @since 1.6.0\r\n */\r\nasync function getSolidDatasetWithAccessDatasets(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const solidDataset = await getSolidDataset(urlString, config);\r\n    if (hasAccessibleAcl(solidDataset)) {\r\n        const acl = await internal_fetchAcl(solidDataset, config);\r\n        return internal_setAcl(solidDataset, acl);\r\n    }\r\n    else {\r\n        const acr = await fetchAcr(solidDataset, config);\r\n        return Object.assign(Object.assign({}, solidDataset), acr);\r\n    }\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch a File, and:\r\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\r\n *                                          the current user), and all the Access Control Policies\r\n *                                          referred to therein, if available to the current user.\r\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\r\n *                                          user), or its Fallback ACL if it does not exist.\r\n *\r\n * @param url URL of the File to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A File and either the ACL access data or the ACR access data, if available to the current user.\r\n * @since 1.6.0\r\n */\r\nasync function getFileWithAccessDatasets(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const file = await getFile(urlString, config);\r\n    if (hasAccessibleAcl(file)) {\r\n        const acl = await internal_fetchAcl(file, config);\r\n        return internal_setAcl(file, acl);\r\n    }\r\n    else {\r\n        const acr = await fetchAcr(file, config);\r\n        return Object.assign(file, acr);\r\n    }\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Fetch information about a Resource, and:\r\n * - if the Resource is governed by an ACR: its associated Access Control Resource (if available to\r\n *                                          the current user), and all the Access Control Policies\r\n *                                          referred to therein, if available to the current user.\r\n * - if the Resource is governed by an ACL: its associated Resource ACL (if available to the current\r\n *                                          user), or its Fallback ACL if it does not exist.\r\n *\r\n * @param url URL of the Resource information about which to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Information about a Resource and either the ACL access data or the ACR access data, if available to the current user.\r\n * @since 1.6.0\r\n */\r\nasync function getResourceInfoWithAccessDatasets(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const resourceInfo = await getResourceInfo(urlString, config);\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        const acl = await internal_fetchAcl(resourceInfo, config);\r\n        return internal_setAcl(resourceInfo, acl);\r\n    }\r\n    else {\r\n        const acr = await fetchAcr(resourceInfo, config);\r\n        return Object.assign(Object.assign({}, resourceInfo), acr);\r\n    }\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Save a Resource's Access Control Resource.\r\n *\r\n * @param resource Resource with an Access Control Resource that should be saved.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 1.6.0\r\n */\r\nasync function saveAcrFor(resource, options = internal_defaultFetchOptions) {\r\n    const acr = internal_getAcr(resource);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const savedAcr = await saveSolidDatasetAt(getSourceUrl(acr), acr, config);\r\n    return internal_setAcr(resource, savedAcr);\r\n}\r\n/**\r\n * @param resource Resource of which to check whether it has an Access Control Resource attached.\r\n * @returns Boolean representing whether the given Resource has an Access Control Resource attached for use in e.g. [[getPolicyUrlAll]].\r\n * @since 1.6.0\r\n */\r\nfunction hasAccessibleAcr(resource) {\r\n    return (typeof resource.internal_acp === \"object\" &&\r\n        resource.internal_acp !== null &&\r\n        typeof resource.internal_acp.acr === \"object\" &&\r\n        resource.internal_acp.acr !== null);\r\n}\r\nasync function fetchAcr(resource, options) {\r\n    let acrUrl = undefined;\r\n    if (hasLinkedAcr(resource)) {\r\n        // Whereas a Resource can generally have multiple linked Resources for the same relation,\r\n        // it can only have one Access Control Resource for that ACR to be valid.\r\n        // Hence the accessing of [0] directly:\r\n        acrUrl =\r\n            resource.internal_resourceInfo.linkedResources[acp.accessControl][0];\r\n    }\r\n    else if (hasAccessibleAcl(resource)) {\r\n        // The ACP proposal will be updated to expose the Access Control Resource\r\n        // via a Link header with rel=\"acl\", just like WAC. That means that if\r\n        // an ACL is advertised, we can still fetch its metadata — if that indicates\r\n        // that it's actually an ACP Access Control Resource, then we can fetch that\r\n        // instead.\r\n        const aclResourceInfo = await getResourceInfo(resource.internal_resourceInfo.aclUrl, options);\r\n        if (isAcr(aclResourceInfo)) {\r\n            acrUrl = getSourceUrl(aclResourceInfo);\r\n        }\r\n    }\r\n    // If the Resource doesn't advertise an ACR via the old Link header,\r\n    // nor via a rel=\"acl\" header, then return, indicating that no ACR could be\r\n    // fetched:\r\n    if (typeof acrUrl !== \"string\") {\r\n        return {\r\n            internal_acp: {\r\n                acr: null,\r\n            },\r\n        };\r\n    }\r\n    let acr;\r\n    try {\r\n        acr = await getSolidDataset(acrUrl, options);\r\n    }\r\n    catch (e) {\r\n        return {\r\n            internal_acp: {\r\n                acr: null,\r\n            },\r\n        };\r\n    }\r\n    const acrDataset = Object.assign(Object.assign({}, acr), { accessTo: getSourceUrl(resource) });\r\n    const acpInfo = {\r\n        internal_acp: {\r\n            acr: acrDataset,\r\n        },\r\n    };\r\n    return acpInfo;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * To make it easy to fetch all the relevant Access Policy Resources,\r\n * this function returns all referenced Access Policy Resources referenced in an\r\n * Access Control Resource.\r\n * In other words, if Access Controls refer to different Policies in the same\r\n * Access Policy Resource, this function will only return that Access Policy\r\n * Resource's URL once.\r\n *\r\n * @param withAcr A Resource with an Access Control Resource attached.\r\n * @returns List of all unique Access Policy Resources that are referenced in the given Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getReferencedPolicyUrlAll(withAcr) {\r\n    const policyUrls = getPolicyUrlAll$1(withAcr)\r\n        .map(normalizeServerSideIri)\r\n        .concat(getMemberPolicyUrlAll$1(withAcr).map(normalizeServerSideIri))\r\n        .concat(getAcrPolicyUrlAll$1(withAcr).map(normalizeServerSideIri))\r\n        .concat(getMemberAcrPolicyUrlAll$1(withAcr).map(normalizeServerSideIri));\r\n    const uniqueUrls = Array.from(new Set(policyUrls));\r\n    return uniqueUrls;\r\n}\r\n/**\r\n * Verify whether the access to the given resource is controlled using the ACP\r\n * system.\r\n * @param resource The target resource\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns True if the access to the resource is controlled using ACP, false otherwise.\r\n * @since 1.14.0.\r\n */\r\nasync function isAcpControlled(resource, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(resource);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const resourceInfo = await getResourceInfo(urlString, config);\r\n    return hasAccessibleAcr(await fetchAcr(resourceInfo, config));\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a Resource, find out the URL of its governing Access Control Resource.\r\n *\r\n * @param resource Resource which should be governed by Access Policies.\r\n * @returns The URL of the Access Control Resource, or undefined if not ACR is found.\r\n * @since 1.15.0\r\n */\r\nfunction getLinkedAcrUrl(resource) {\r\n    if (!hasServerResourceInfo(resource)) {\r\n        return undefined;\r\n    }\r\n    // Two rels types are acceptable to indicate a link to an ACR.\r\n    const acrLinks = [acp.accessControl, \"acl\"].map((rel) => {\r\n        if (Array.isArray(resource.internal_resourceInfo.linkedResources[rel]) &&\r\n            resource.internal_resourceInfo.linkedResources[rel].length === 1) {\r\n            return resource.internal_resourceInfo.linkedResources[rel][0];\r\n        }\r\n    });\r\n    return acrLinks.find((x) => x !== undefined);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * NOTE: Don't export for now (i.e. if exported, should this be `isAcpRule()` so\r\n * as not to clash with `isAclRule()`.\r\n *\r\n * @param thing the [[Thing]] to check to see if it's an ACP rule or not\r\n */\r\nfunction isRule(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a rule that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" rules,\r\n * they will not be granted access.\r\n *\r\n * Also see [[addAnyOfRuleUrl]] and [[addNoneOfRuleUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rule The rule to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new rule added.\r\n * @since 1.6.0\r\n */\r\nfunction addAllOfRuleUrl(policy, rule) {\r\n    return addIri(policy, acp.allOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a rule that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" rules,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] from which the rule should be removed.\r\n * @param rule The rule to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the rule removed.\r\n * @since 1.6.0\r\n */\r\nfunction removeAllOfRuleUrl(policy, rule) {\r\n    return removeIri(policy, acp.allOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrites the rule refining the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" rules,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rules The rules the policy requires.\r\n * @returns A new [[Policy]] clone of the original one, with the \"All Of\" rules replaced.\r\n * @since 1.6.0\r\n */\r\nfunction setAllOfRuleUrl(policy, rule) {\r\n    return setIri(policy, acp.allOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"All Of\" [[Rule]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the rules should be read.\r\n * @returns A list of the \"All Of\" [[Rule]]s\r\n * @since 1.6.0\r\n */\r\nfunction getAllOfRuleUrlAll(policy) {\r\n    return getIriAll(policy, acp.allOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a rule that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" rules,\r\n * they will be granted access.\r\n *\r\n * Also see [[addAllOfRuleUrl]] and [[addNoneOfRuleUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rule The rule to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new rule added.\r\n * @since 1.6.0\r\n */\r\nfunction addAnyOfRuleUrl(policy, rule) {\r\n    return addIri(policy, acp.anyOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a rule that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" rules,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] from which the rule should be removed.\r\n * @param rule The rule to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the rule removed.\r\n * @since 1.6.0\r\n */\r\nfunction removeAnyOfRuleUrl(policy, rule) {\r\n    return removeIri(policy, acp.anyOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the rule extending the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" rules,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rules The rules the policy accepts.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" rules replaced.\r\n * @since 1.6.0\r\n */\r\nfunction setAnyOfRuleUrl(policy, rule) {\r\n    return setIri(policy, acp.anyOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"Any Of\" [[Rule]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the rules should be read.\r\n * @returns A list of the \"Any Of\" [[Rule]]s\r\n * @since 1.6.0\r\n */\r\nfunction getAnyOfRuleUrlAll(policy) {\r\n    return getIriAll(policy, acp.anyOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a rule that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the forbidden rules,\r\n * they will **not** be granted access.\r\n *\r\n * Also see [[addAllOfRuleUrl]] and [[addAnyOfRuleUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rule The rule to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new rule added.\r\n * @since 1.6.0\r\n */\r\nfunction addNoneOfRuleUrl(policy, rule) {\r\n    return addIri(policy, acp.noneOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a rule that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the forbidden rules,\r\n * they will **not** be granted access.\r\n * @param policy The [[Policy]] from which the rule should be removed.\r\n * @param rule The rule to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the rule removed.\r\n * @since 1.6.0\r\n */\r\nfunction removeNoneOfRuleUrl(policy, rule) {\r\n    return removeIri(policy, acp.noneOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set the rules restrincting the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"None Of\" rules,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the rule should be added.\r\n * @param rules The rules the policy accepts.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" rules replaced.\r\n * @since 1.6.0\r\n */\r\nfunction setNoneOfRuleUrl(policy, rule) {\r\n    return setIri(policy, acp.noneOf, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"None Of\" [[Rule]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the rules should be read.\r\n * @returns A list of the forbidden [[Rule]]s\r\n * @since 1.6.0\r\n */\r\nfunction getNoneOfRuleUrlAll(policy) {\r\n    return getIriAll(policy, acp.noneOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Rule]].\r\n *\r\n * @param url URL that identifies this [[Rule]].\r\n * @since 1.6.0\r\n */\r\nfunction createRule(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let ruleThing = createThing({ url: stringUrl });\r\n    ruleThing = setUrl(ruleThing, rdf.type, acp.Rule);\r\n    return ruleThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourceRule]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the new Rule is to apply.\r\n * @param name Name that identifies this [[Rule]].\r\n * @since 1.6.0\r\n */\r\nfunction createResourceRuleFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let ruleThing = createThing({ url: url.href });\r\n    ruleThing = setUrl(ruleThing, rdf.type, acp.Rule);\r\n    return ruleThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Rule]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param ruleResource The Resource that contains the given [[Rule]].\r\n * @param url URL that identifies this [[Rule]].\r\n * @returns The requested [[Rule]], if it exists, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getRule(ruleResource, url) {\r\n    const foundThing = getThing(ruleResource, url);\r\n    if (foundThing === null || getUrl(foundThing, rdf.type) !== acp.Rule) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourceRule]] with the given name from an Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains the given [[ResourceRule]].\r\n * @param name Name that identifies this [[ResourceRule]].\r\n * @returns The requested [[ResourceRule]], if it exists, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceRule(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (foundThing === null || !isRule(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[Rule]]s from a [[SolidDataset]].\r\n *\r\n * @param ruleResource The Resource that contains (zero or more) [[Rule]]s.\r\n * @returns The [[Rule]]s contained in this resource.\r\n * @since 1.6.0\r\n */\r\nfunction getRuleAll(ruleResource) {\r\n    const things = getThingAll(ruleResource);\r\n    return things.filter(isRule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[ResourceRule]]s from a Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceRule]]s.\r\n * @returns The [[ResourceRule]]s contained in this Resource's Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceRuleAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const things = getThingAll(acr);\r\n    return things.filter(isRule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[Rule]] from the given [[SolidDataset]].\r\n *\r\n * @param ruleResource The Resource that contains (zero or more) [[Rule]]s.\r\n * @returns A new SolidDataset equal to the given Rule Resource, but without the given Rule.\r\n * @since 1.6.0\r\n */\r\nfunction removeRule(ruleResource, rule) {\r\n    return removeThing(ruleResource, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[ResourceRule]] from the given Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceRule]]s.\r\n * @returns A new Resource equal to the given Resource, but without the given Rule in its ACR.\r\n * @since 1.6.0\r\n */\r\nfunction removeResourceRule(resourceWithAcr, rule) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let ruleToRemove;\r\n    if (typeof rule === \"string\") {\r\n        try {\r\n            new URL(rule);\r\n            ruleToRemove = rule;\r\n        }\r\n        catch (e) {\r\n            // If the given Rule to remove is the name of the Rule,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Rule itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const ruleUrl = new URL(getSourceUrl(acr));\r\n            ruleUrl.hash = `#${rule}`;\r\n            ruleToRemove = ruleUrl.href;\r\n        }\r\n    }\r\n    else if (isNamedNode(rule)) {\r\n        ruleToRemove = internal_toIriString(rule);\r\n    }\r\n    else {\r\n        ruleToRemove = asUrl(rule);\r\n    }\r\n    // Check whether the actual Rule (i.e. with the Rule type) exists:\r\n    const matchingRule = getResourceRule(resourceWithAcr, new URL(ruleToRemove).hash.substring(1));\r\n    if (matchingRule === null) {\r\n        // No such Rule exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, matchingRule);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Rule]] into the given [[SolidDataset]], replacing previous\r\n * instances of that Rule.\r\n *\r\n * @param ruleResource The Resource that contains (zero or more) [[Rule]]s.\r\n * @returns A new SolidDataset equal to the given Rule Resource, but with the given Rule.\r\n * @since 1.6.0\r\n */\r\nfunction setRule(ruleResource, rule) {\r\n    return setThing(ruleResource, rule);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourceRule]] into the given Resource's Access Control Resource,\r\n * replacing previous instances of that Rule.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceRule]]s.\r\n * @returns A new Resource equal to the given Resource, but with the given Rule in its ACR.\r\n * @since 1.6.0\r\n */\r\nfunction setResourceRule(resourceWithAcr, rule) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, rule);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the agents a [[Rule]] applies **directly** to. This will not include agents\r\n * that are part of a group the [[Rule]] applies to, nor will it include specific agent\r\n * classes, such as authenticated or public agents.\r\n *\r\n * @param rule The rule from which agents are read.\r\n * @returns A list of the WebIDs of agents included in the rule.\r\n * @since 1.6.0\r\n */\r\nfunction getAgentAll$1(rule) {\r\n    return getIriAll(rule, acp.agent).filter((agent) => agent !== acp.PublicAgent &&\r\n        agent !== acp.AuthenticatedAgent &&\r\n        agent !== acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the agents the [[Rule]] applies to with the provided agents.\r\n *\r\n * @param rule The rule for which agents are set.\r\n * @param agent The agent the rule should apply to.\r\n * @returns A copy of the input rule, applying to a different set of agents.\r\n * @since 1.6.0\r\n */\r\nfunction setAgent$1(rule, agent) {\r\n    // Preserve the special agent classes authenticated and public, which we\r\n    // don't want to overwrite with this function.\r\n    const isPublic = hasPublic$1(rule);\r\n    const isAuthenticated = hasAuthenticated$1(rule);\r\n    const isCreator = hasCreator$1(rule);\r\n    let result = setIri(rule, acp.agent, agent);\r\n    // Restore public and authenticated\r\n    if (isPublic) {\r\n        result = setPublic$1(result);\r\n    }\r\n    if (isAuthenticated) {\r\n        result = setAuthenticated$1(result);\r\n    }\r\n    if (isCreator) {\r\n        result = setCreator$1(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Rule]] to an additional agent.\r\n *\r\n * @param rule The [[Rule]] to be applied to an additional agent.\r\n * @param agent The agent the [[Rule]] should apply to.\r\n * @returns A copy of the [[Rule]], applying to an additional agent.\r\n * @since 1.6.0\r\n */\r\nfunction addAgent$1(rule, agent) {\r\n    return addIri(rule, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Rule]] from applying to a given agent directly. This will not\r\n * remove the agent from any groups the rule applies to.\r\n *\r\n * @param rule The [[Rule]] that should no longer apply to a given agent.\r\n * @param agent The agent the rule should no longer apply to.\r\n * @returns A copy of the rule, not applying to the given agent.\r\n * @since 1.6.0\r\n */\r\nfunction removeAgent$1(rule, agent) {\r\n    return removeIri(rule, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Lists all the groups a [[Rule]] applies to.\r\n *\r\n * @param rule The rule from which groups are read.\r\n * @returns A list of the [[URL]]'s of groups included in the rule.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction getGroupAll(rule) {\r\n    return getIriAll(rule, acp.group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the groups the [[Rule]] applies to with the provided groups.\r\n *\r\n * @param rule The rule for which groups are set.\r\n * @param group The group the rule should apply to.\r\n * @returns A copy of the input rule, applying to a different set of groups.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction setGroup(rule, group) {\r\n    return setIri(rule, acp.group, group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Rule]] to an additional group.\r\n *\r\n * @param rule The [[Rule]] to be applied to an additional group.\r\n * @param agent The group the [[Rule]] should apply to.\r\n * @returns A copy of the [[Rule]], applying to an additional group.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction addGroup(rule, group) {\r\n    return addIri(rule, acp.group, group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Rule]] from applying to a given group.\r\n *\r\n * @param rule The [[Rule]] that should no longer apply to a given group.\r\n * @param agent The group the rule should no longer apply to.\r\n * @returns A copy of the rule, not applying to the given group.\r\n * @since 1.6.0\r\n * @deprecated Access Control Policies will no longer support vcard:Group. You can re-use a Rule listing multiple Agents to get the same functionality.\r\n */\r\nfunction removeGroup(rule, group) {\r\n    return removeIri(rule, acp.group, group);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to any agent.\r\n *\r\n * @param rule The rule checked for public access.\r\n * @returns Whether the rule applies to any agent or not.\r\n * @since 1.6.0\r\n */\r\nfunction hasPublic$1(rule) {\r\n    return (getIriAll(rule, acp.agent).filter((agent) => agent === acp.PublicAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to apply to any Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply to any agent.\r\n * @since 1.6.0\r\n */\r\nfunction setPublic$1(rule) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setPublic` no longer takes a second parameter. It is now used together with `removePublic` instead.\");\r\n    }\r\n    return addIri(rule, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to no longer apply to any Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to no longer apply to any agent.\r\n * @since 1.6.0\r\n */\r\nfunction removePublic$1(rule) {\r\n    return removeIri(rule, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to any authenticated agent.\r\n *\r\n * @param rule The rule checked for authenticated access.\r\n * @returns Whether the rule applies to any authenticated agent or not.\r\n * @since 1.6.0\r\n */\r\nfunction hasAuthenticated$1(rule) {\r\n    return (getIriAll(rule, acp.agent).filter((agent) => agent === acp.AuthenticatedAgent).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to apply to any authenticated Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply to any authenticated Agent.\r\n * @since 1.6.0\r\n */\r\nfunction setAuthenticated$1(rule) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setAuthenticated` no longer takes a second parameter. It is now used together with `removeAuthenticated` instead.\");\r\n    }\r\n    return addIri(rule, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to no longer apply to any authenticated Agent.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply/not apply to any authenticated agent.\r\n * @since 1.6.0\r\n */\r\nfunction removeAuthenticated$1(rule) {\r\n    return removeIri(rule, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to the creator of the Resource.\r\n *\r\n * @param rule The rule checked for authenticated access.\r\n * @returns Whether the rule applies to the creator of the Resource or not.\r\n * @since 1.6.0\r\n */\r\nfunction hasCreator$1(rule) {\r\n    return (getIriAll(rule, acp.agent).filter((agent) => agent === acp.CreatorAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to apply to the creator of a Resource.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply to the creator of a Resource.\r\n * @since 1.6.0\r\n */\r\nfunction setCreator$1(rule) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setCreator` no longer takes a second parameter. It is now used together with `removeCreator` instead.\");\r\n    }\r\n    return addIri(rule, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Rule to no longer apply to the creator of a Resource.\r\n *\r\n * @param rule The rule being modified.\r\n * @returns A copy of the rule, updated to apply/not apply to the creator of a Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removeCreator$1(rule) {\r\n    return removeIri(rule, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the clients a [[Rule]] applies **directly** to. This will not include\r\n * specific client classes, such as public clients.\r\n *\r\n * @param rule The rule from which clients are read.\r\n * @returns A list of the WebIDs of clients included in the rule.\r\n * @since 1.6.0\r\n */\r\nfunction getClientAll$1(rule) {\r\n    return getIriAll(rule, acp.client).filter((client) => client !== solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the clients the [[Rule]] applies to with the provided Client.\r\n *\r\n * @param rule The rule for which clients are set.\r\n * @param client The Client the rule should apply to.\r\n * @returns A copy of the input rule, applying to a different set of Clients.\r\n * @since 1.6.0\r\n */\r\nfunction setClient$1(rule, client) {\r\n    // Preserve the special \"any client\" class, which we\r\n    // don't want to overwrite with this function.\r\n    const anyClientEnabled = hasAnyClient$1(rule);\r\n    let result = setIri(rule, acp.client, client);\r\n    // Restore the \"any client\" class\r\n    if (anyClientEnabled) {\r\n        result = setAnyClient$1(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Rule]] to an additional Client.\r\n *\r\n * @param rule The [[Rule]] to be applied to an additional Client.\r\n * @param client The Client the [[Rule]] should apply to.\r\n * @returns A copy of the [[Rule]], applying to an additional Client.\r\n * @since 1.6.0\r\n */\r\nfunction addClient$1(rule, client) {\r\n    return addIri(rule, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Rule]] from applying to a given Client directly.\r\n *\r\n * @param rule The [[Rule]] that should no longer apply to a given Client.\r\n * @param client The Client the rule should no longer apply to.\r\n * @returns A copy of the rule, not applying to the given Client.\r\n * @since 1.6.0\r\n */\r\nfunction removeClient$1(rule, client) {\r\n    return removeIri(rule, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the rule applies to any client, i.e. all the applications\r\n * regardless of their identifier.\r\n *\r\n * @param rule The rule checked for authenticated access.\r\n * @returns Whether the rule applies to public clients.\r\n * @since 1.6.0\r\n */\r\nfunction hasAnyClient$1(rule) {\r\n    return (getIriAll(rule, acp.client).filter((client) => client === solid.PublicOidcClient).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Rule]] apply to any client application.\r\n *\r\n * @param rule The rule for which clients are set.\r\n * @returns A copy of the rule, updated to apply to any client\r\n * @since 1.6.0\r\n */\r\nfunction setAnyClient$1(rule) {\r\n    return addIri(rule, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Rule]] no longer apply to any client application.\r\n *\r\n * @param rule The rule for which clients are set.\r\n * @returns A copy of the rule, updated to no longer apply to any client\r\n * @since 1.6.0\r\n */\r\nfunction removeAnyClient$1(rule) {\r\n    return removeIri(rule, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Rule]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param rule The Rule to get a human-readable representation of.\r\n * @since 1.6.0\r\n */\r\nfunction ruleAsMarkdown(rule) {\r\n    let markdown = `## Rule: ${asUrl(rule)}\\n\\n`;\r\n    let targetEnumeration = \"\";\r\n    if (hasPublic$1(rule)) {\r\n        targetEnumeration += \"- Everyone\\n\";\r\n    }\r\n    if (hasAuthenticated$1(rule)) {\r\n        targetEnumeration += \"- All authenticated agents\\n\";\r\n    }\r\n    if (hasCreator$1(rule)) {\r\n        targetEnumeration += \"- The creator of this resource\\n\";\r\n    }\r\n    if (hasAnyClient$1(rule)) {\r\n        targetEnumeration += \"- Users of any client application\\n\";\r\n    }\r\n    const targetAgents = getAgentAll$1(rule);\r\n    if (targetAgents.length > 0) {\r\n        targetEnumeration += \"- The following agents:\\n  - \";\r\n        targetEnumeration += targetAgents.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    const targetGroups = getGroupAll(rule);\r\n    if (targetGroups.length > 0) {\r\n        targetEnumeration += \"- Members of the following groups:\\n  - \";\r\n        targetEnumeration += targetGroups.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    const targetClients = getClientAll$1(rule);\r\n    if (targetClients.length > 0) {\r\n        targetEnumeration += \"- Users of the following client applications:\\n  - \";\r\n        targetEnumeration += targetClients.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    markdown +=\r\n        targetEnumeration.length > 0\r\n            ? \"This rule applies to:\\n\" + targetEnumeration\r\n            : \"<empty>\\n\";\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param thing the [[Thing]] to check to see if it's an ACP Policy or not\r\n */\r\nfunction isPolicy(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Policy);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Policy]].\r\n *\r\n * @param url URL that identifies this Policy.\r\n * @since 1.6.0\r\n */\r\nfunction createPolicy(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let policyThing = createThing({ url: stringUrl });\r\n    policyThing = setUrl(policyThing, rdf.type, acp.Policy);\r\n    return policyThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Policy]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param policyResource The Resource that contains the given Policy.\r\n * @param url URL that identifies this Policy.\r\n * @returns The requested Policy, if it exists, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getPolicy(policyResource, url) {\r\n    const foundThing = getThing(policyResource, url);\r\n    if (foundThing === null || !isPolicy(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[Policy]]'s in a given [[SolidDataset]].\r\n *\r\n * @param policyResource The Resource that contains Access Policies.\r\n * @since 1.6.0\r\n */\r\nfunction getPolicyAll(policyResource) {\r\n    const foundThings = getThingAll(policyResource);\r\n    const foundPolicies = foundThings.filter((thing) => !isThingLocal(thing) && isPolicy(thing));\r\n    return foundPolicies;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove the given [[Policy]] from the given [[SolidDataset]].\r\n *\r\n * @param policyResource The Resource that contains Access Policies.\r\n * @param policy The Policy to remove from the resource.\r\n * @since 1.6.0\r\n */\r\nfunction removePolicy(policyResource, policy) {\r\n    return removeThing(policyResource, policy);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Policy]] into the given [[SolidDataset]], replacing previous instances of that Policy.\r\n *\r\n * @param policyResource The Resource that contains Access Policies.\r\n * @param policy The Policy to insert into the Resource.\r\n * @returns A new dataset equal to the given resource, but with the given Policy.\r\n * @since 1.6.0\r\n */\r\nfunction setPolicy(policyResource, policy) {\r\n    return setThing(policyResource, policy);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes allowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to allow.\r\n * @param modes Modes to allow for this Policy.\r\n * @since Not released yet.\r\n */\r\nfunction setAllowModesV2(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.allow);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, internal_accessModeIriStrings.read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, internal_accessModeIriStrings.append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, internal_accessModeIriStrings.write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes allowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to allow.\r\n * @param modes Modes to allow for this Policy.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[setAllowModesV2]].\r\n */\r\nfunction setAllowModesV1(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.allow);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, acp.Read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, acp.Append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.allow, acp.Write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it allows.\r\n *\r\n * @param policy The Policy for which you want to know the Access Modes it allows.\r\n * @since Not released yet.\r\n */\r\nfunction getAllowModesV2(policy) {\r\n    const allowedModes = getIriAll(policy, acp.allow);\r\n    return {\r\n        read: allowedModes.includes(internal_accessModeIriStrings.read),\r\n        append: allowedModes.includes(internal_accessModeIriStrings.append),\r\n        write: allowedModes.includes(internal_accessModeIriStrings.write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it allows.\r\n *\r\n * @param policy The Policy for which you want to know the Access Modes it allows.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[getAllowModesV2]].\r\n */\r\nfunction getAllowModesV1(policy) {\r\n    const allowedModes = getIriAll(policy, acp.allow);\r\n    return {\r\n        read: allowedModes.includes(acp.Read),\r\n        append: allowedModes.includes(acp.Append),\r\n        write: allowedModes.includes(acp.Write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes disallowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to disallow.\r\n * @param modes Modes to disallow for this Policy.\r\n * @since Not released yet.\r\n */\r\nfunction setDenyModesV2(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.deny);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, internal_accessModeIriStrings.write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]] and a set of [[AccessModes]], return a new Policy based on the given\r\n * Policy, but with the given Access Modes disallowed on it.\r\n *\r\n * @param policy The Policy on which to set the modes to disallow.\r\n * @param modes Modes to disallow for this Policy.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[setDenyModesV2]].\r\n */\r\nfunction setDenyModesV1(policy, modes) {\r\n    let newPolicy = removeAll(policy, acp.deny);\r\n    if (modes.read === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, acp.Read);\r\n    }\r\n    if (modes.append === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, acp.Append);\r\n    }\r\n    if (modes.write === true) {\r\n        newPolicy = addIri(newPolicy, acp.deny, acp.Write);\r\n    }\r\n    return newPolicy;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it disallows.\r\n *\r\n * @param policy The Policy on which you want to know the Access Modes it disallows.\r\n * @since Not released yet.\r\n */\r\nfunction getDenyModesV2(policy) {\r\n    const deniedModes = getIriAll(policy, acp.deny);\r\n    return {\r\n        read: deniedModes.includes(internal_accessModeIriStrings.read),\r\n        append: deniedModes.includes(internal_accessModeIriStrings.append),\r\n        write: deniedModes.includes(internal_accessModeIriStrings.write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Given a [[Policy]], return which [[AccessModes]] it disallows.\r\n *\r\n * @param policy The Policy on which you want to know the Access Modes it disallows.\r\n * @since 1.6.0\r\n * @deprecated The Access Control Policies proposal will be updated to use a different vocabulary for allow- and deny-modes. To be compatible with servers that implement that, use [[getDenyModesV2]].\r\n */\r\nfunction getDenyModesV1(policy) {\r\n    const deniedModes = getIriAll(policy, acp.deny);\r\n    return {\r\n        read: deniedModes.includes(acp.Read),\r\n        append: deniedModes.includes(acp.Append),\r\n        write: deniedModes.includes(acp.Write),\r\n    };\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourcePolicy]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the Policy is to apply.\r\n * @param name The name that identifies this Policy.\r\n * @since 1.6.0\r\n */\r\nfunction createResourcePolicyFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let policyThing = createThing({ url: url.href });\r\n    policyThing = setUrl(policyThing, rdf.type, acp.Policy);\r\n    return policyThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourcePolicy]] with the given name that applies to a Resource\r\n * from its Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose ACR contains the given Policy.\r\n * @param name The name that identifies this Policy.\r\n * @returns The requested Policy, if it exists and applies to the given Resource, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getResourcePolicy(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (!getPolicyUrlAll$1(resourceWithAcr).includes(url.href) ||\r\n        foundThing === null ||\r\n        !isPolicy(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourcePolicy]] with the given name that applies to a Resource's\r\n * Access Control Resource from that Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose ACR contains the given Policy.\r\n * @param name The name that identifies this Policy.\r\n * @returns The requested Policy, if it exists and applies to the Resource's ACR, or `null` if it does not.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceAcrPolicy(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (!getAcrPolicyUrlAll$1(resourceWithAcr).includes(url.href) ||\r\n        foundThing === null ||\r\n        !isPolicy(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[ResourcePolicy]]'s that apply to a Resource in its Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies applying to it.\r\n * @since 1.6.0\r\n */\r\nfunction getResourcePolicyAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const policyUrls = getPolicyUrlAll$1(resourceWithAcr);\r\n    const foundThings = policyUrls.map((policyUrl) => getThing(acr, policyUrl));\r\n    const foundPolicies = foundThings.filter((thing) => thing !== null && isPolicy(thing));\r\n    return foundPolicies;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get all [[ResourcePolicy]]'s that apply to a given Resource's Access Control\r\n * Resource from that Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @since 1.6.0\r\n */\r\nfunction getResourceAcrPolicyAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const policyUrls = getAcrPolicyUrlAll$1(resourceWithAcr);\r\n    const foundThings = policyUrls.map((policyUrl) => getThing(acr, policyUrl));\r\n    const foundPolicies = foundThings.filter((thing) => thing !== null && isPolicy(thing));\r\n    return foundPolicies;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove the given [[ResourcePolicy]] from the given Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to remove from the Resource's Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removeResourcePolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let policyToRemove = policy;\r\n    if (typeof policyToRemove === \"string\") {\r\n        try {\r\n            new URL(policyToRemove);\r\n        }\r\n        catch (e) {\r\n            // If the given Policy to remove is the name of the Policy,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Policy itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const policyUrl = new URL(getSourceUrl(acr));\r\n            policyUrl.hash = `#${policy}`;\r\n            policyToRemove = policyUrl.href;\r\n        }\r\n    }\r\n    let policyUrlString;\r\n    if (typeof policyToRemove === \"string\") {\r\n        policyUrlString = policyToRemove;\r\n    }\r\n    else if (isNamedNode(policyToRemove)) {\r\n        policyUrlString = internal_toIriString(policyToRemove);\r\n    }\r\n    else {\r\n        policyUrlString = asUrl(policyToRemove, getSourceUrl(acr));\r\n    }\r\n    // Check whether the actual Policy (i.e. with the Policy type) exists:\r\n    const matchingRule = getResourcePolicy(resourceWithAcr, new URL(policyUrlString).hash.substring(1));\r\n    if (matchingRule === null) {\r\n        // No such Policy exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, policyToRemove);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return removePolicyUrl$1(updatedResource, policyUrlString);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove the given [[ResourcePolicy]] that applies to a given Resource's Access\r\n * Control Resource from that Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The ACR Policy to remove from the Resource's Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction removeResourceAcrPolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let policyToRemove = policy;\r\n    if (typeof policyToRemove === \"string\") {\r\n        try {\r\n            new URL(policyToRemove);\r\n        }\r\n        catch (e) {\r\n            // If the given Policy to remove is the name of the Policy,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Policy itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const policyUrl = new URL(getSourceUrl(acr));\r\n            policyUrl.hash = `#${policy}`;\r\n            policyToRemove = policyUrl.href;\r\n        }\r\n    }\r\n    let policyUrlString;\r\n    if (typeof policyToRemove === \"string\") {\r\n        policyUrlString = policyToRemove;\r\n    }\r\n    else if (isNamedNode(policyToRemove)) {\r\n        policyUrlString = internal_toIriString(policyToRemove);\r\n    }\r\n    else {\r\n        policyUrlString = asUrl(policyToRemove, getSourceUrl(acr));\r\n    }\r\n    // Check whether the actual Policy (i.e. with the Policy type) exists:\r\n    const matchingRule = getResourceAcrPolicy(resourceWithAcr, new URL(policyUrlString).hash.substring(1));\r\n    if (matchingRule === null) {\r\n        // No such Policy exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, policyToRemove);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return removeAcrPolicyUrl$1(updatedResource, policyUrlString);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\r\n * Resource, replacing previous instances of that Policy.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to insert into the Resource's Access Control Resource.\r\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction setResourcePolicy$1(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, policy);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    const policyUrl = asUrl(policy, getSourceUrl(acr));\r\n    return addPolicyUrl$1(updatedResource, policyUrl);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\r\n * Resource, replacing previous instances of that Policy, to apply to the Access\r\n * Control Resource itself.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to insert into the Resource's Access Control Resource.\r\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource, applying to that Access Control Resource.\r\n * @since 1.6.0\r\n */\r\nfunction setResourceAcrPolicy(resourceWithAcr, policy) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, policy);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    const policyUrl = asUrl(policy, getSourceUrl(acr));\r\n    return addAcrPolicyUrl$1(updatedResource, policyUrl);\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Policy]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param policy The Policy to get a human-readable representation of.\r\n * @since 1.6.0\r\n * @deprecated\r\n */\r\nfunction policyAsMarkdown(policy) {\r\n    function getStatus(allow, deny) {\r\n        if (deny) {\r\n            return \"denied\";\r\n        }\r\n        if (allow) {\r\n            return \"allowed\";\r\n        }\r\n        return \"unspecified\";\r\n    }\r\n    const allowModes = getAllowModesV1(policy);\r\n    const denyModes = getDenyModesV1(policy);\r\n    let markdown = `## Policy: ${asUrl(policy)}\\n\\n`;\r\n    markdown += `- Read: ${getStatus(allowModes.read, denyModes.read)}\\n`;\r\n    markdown += `- Append: ${getStatus(allowModes.append, denyModes.append)}\\n`;\r\n    markdown += `- Write: ${getStatus(allowModes.write, denyModes.write)}\\n`;\r\n    const allOfRules = getAllOfRuleUrlAll(policy);\r\n    const anyOfRules = getAnyOfRuleUrlAll(policy);\r\n    const noneOfRules = getNoneOfRuleUrlAll(policy);\r\n    if (allOfRules.length === 0 &&\r\n        anyOfRules.length === 0 &&\r\n        noneOfRules.length === 0) {\r\n        markdown += \"\\n<no rules specified yet>\\n\";\r\n    }\r\n    if (allOfRules.length > 0) {\r\n        markdown += \"\\nAll of these rules should match:\\n\";\r\n        markdown += \"- \" + allOfRules.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (anyOfRules.length > 0) {\r\n        markdown += \"\\nAt least one of these rules should match:\\n\";\r\n        markdown += \"- \" + anyOfRules.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    if (noneOfRules.length > 0) {\r\n        markdown += \"\\nNone of these rules should match:\\n\";\r\n        markdown += \"- \" + noneOfRules.join(\"\\n- \") + \"\\n\";\r\n    }\r\n    return markdown;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n *\r\n * ```{warning}\r\n * Do not use this function in production code.  For use in **unit tests** that require a\r\n * [[AccessControlResource]].\r\n * ```\r\n *\r\n * Initialises a new empty Access Control Resource for a given Resource for use\r\n * in **unit tests**.\r\n *\r\n * @param resourceUrl The URL of the Resource to which the mocked ACR should apply.\r\n * @returns The mocked empty Access Control Resource for the given Resource.\r\n * @since 1.6.0\r\n */\r\nfunction mockAcrFor(resourceUrl) {\r\n    const acrUrl = new URL(\"access-control-resource\", resourceUrl).href;\r\n    const acr = Object.assign(Object.assign({}, mockSolidDatasetFrom(acrUrl)), { accessTo: resourceUrl });\r\n    return acr;\r\n}\r\n/**\r\n * ```{warning}\r\n * Do not use this function in production code.  For use in **unit tests** that require a\r\n * Resource with an [[AccessControlResource]].\r\n * ```\r\n *\r\n * Attaches an Access Control Resource to a given [[SolidDataset]] for use\r\n * in **unit tests**; e.g., unit tests that call [[getPolicyUrlAll]].\r\n *\r\n * @param resource The Resource to mock up with a new resource ACL.\r\n * @param accessControlResource The Access Control Resource to attach to the given Resource.\r\n * @returns The input Resource with an empty resource ACL attached.\r\n * @since 1.6.0\r\n */\r\nfunction addMockAcrTo(resource, accessControlResource = mockAcrFor(getSourceUrl(resource))) {\r\n    const resourceWithAcr = Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: {\r\n            acr: accessControlResource,\r\n            aprs: {},\r\n        },\r\n    });\r\n    return resourceWithAcr;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v2AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n};\r\nconst v2ControlFunctions = {\r\n    acrAsMarkdown,\r\n    addAcrPolicyUrl: addAcrPolicyUrl$1,\r\n    addMemberAcrPolicyUrl: addMemberAcrPolicyUrl$1,\r\n    addMemberPolicyUrl: addMemberPolicyUrl$1,\r\n    addPolicyUrl: addPolicyUrl$1,\r\n    getAcrPolicyUrlAll: getAcrPolicyUrlAll$1,\r\n    getMemberAcrPolicyUrlAll: getMemberAcrPolicyUrlAll$1,\r\n    getMemberPolicyUrlAll: getMemberPolicyUrlAll$1,\r\n    getPolicyUrlAll: getPolicyUrlAll$1,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl: removeAcrPolicyUrl$1,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl: removeMemberAcrPolicyUrl$1,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl: removeMemberPolicyUrl$1,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl: removePolicyUrl$1,\r\n    removePolicyUrlAll,\r\n};\r\nconst v2PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV1,\r\n    getDenyModes: getDenyModesV1,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV1,\r\n    setDenyModes: setDenyModesV1,\r\n    setPolicy,\r\n};\r\nconst v2RuleFunctions = {\r\n    addAgent: addAgent$1,\r\n    addForbiddenRuleUrl: addNoneOfRuleUrl,\r\n    addGroup,\r\n    addOptionalRuleUrl: addAnyOfRuleUrl,\r\n    addRequiredRuleUrl: addAllOfRuleUrl,\r\n    createRule,\r\n    getAgentAll: getAgentAll$1,\r\n    getForbiddenRuleUrlAll: getNoneOfRuleUrlAll,\r\n    getGroupAll,\r\n    getOptionalRuleUrlAll: getAnyOfRuleUrlAll,\r\n    getRequiredRuleUrlAll: getAllOfRuleUrlAll,\r\n    getRule,\r\n    getRuleAll,\r\n    hasAuthenticated: hasAuthenticated$1,\r\n    hasCreator: hasCreator$1,\r\n    hasPublic: hasPublic$1,\r\n    removeAgent: removeAgent$1,\r\n    removeForbiddenRuleUrl: removeNoneOfRuleUrl,\r\n    removeGroup,\r\n    removeOptionalRuleUrl: removeAnyOfRuleUrl,\r\n    removeRequiredRuleUrl: removeAllOfRuleUrl,\r\n    removeRule,\r\n    ruleAsMarkdown,\r\n    setAgent: setAgent$1,\r\n    setForbiddenRuleUrl: setNoneOfRuleUrl,\r\n    setGroup,\r\n    setOptionalRuleUrl: setAnyOfRuleUrl,\r\n    setRequiredRuleUrl: setAllOfRuleUrl,\r\n    setRule,\r\n};\r\nconst v2MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/* istanbul ignore next Not a supported public API: */\r\n/** @deprecated Replaced by [[setPublic]] */\r\nfunction previousSetPublicSignature(rule, enable) {\r\n    return enable ? setPublic$1(rule) : removePublic$1(rule);\r\n}\r\n/* istanbul ignore next Not a supported public API: */\r\n/** @deprecated Replaced by [[setAuthenticated]] */\r\nfunction previousSetAuthenticatedSignature(rule, enable) {\r\n    return enable ? setAuthenticated$1(rule) : removeAuthenticated$1(rule);\r\n}\r\n/* istanbul ignore next Not a supported public API: */\r\n/** @deprecated Replaced by [[setCreator]] */\r\nfunction previousSetCreatorSignature(rule, enable) {\r\n    return enable ? setCreator$1(rule) : removeCreator$1(rule);\r\n}\r\nconst deprecatedFunctions$1 = {\r\n    /** @deprecated This misspelling was included accidentally. The correct function is [[getForbiddenRuleUrlAll]]. */\r\n    getForbiddenRuleurlAll: getNoneOfRuleUrlAll,\r\n    setPublic: previousSetPublicSignature,\r\n    setAuthenticated: previousSetAuthenticatedSignature,\r\n    setCreator: previousSetCreatorSignature,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Replaced by [[acp_v3]].\r\n */\r\nconst acp_v2 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v2AcpFunctions), v2ControlFunctions), v2PolicyFunctions), v2RuleFunctions), v2MockFunctions), deprecatedFunctions$1);\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v1AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n};\r\nconst v1PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV1,\r\n    getDenyModes: getDenyModesV1,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV1,\r\n    setDenyModes: setDenyModesV1,\r\n    setPolicy,\r\n};\r\nconst v1RuleFunctions = {\r\n    addAgent: addAgent$1,\r\n    addForbiddenRuleUrl: addNoneOfRuleUrl,\r\n    addGroup,\r\n    addOptionalRuleUrl: addAnyOfRuleUrl,\r\n    addRequiredRuleUrl: addAllOfRuleUrl,\r\n    createRule,\r\n    getAgentAll: getAgentAll$1,\r\n    getForbiddenRuleUrlAll: getNoneOfRuleUrlAll,\r\n    getGroupAll,\r\n    getOptionalRuleUrlAll: getAnyOfRuleUrlAll,\r\n    getRequiredRuleUrlAll: getAllOfRuleUrlAll,\r\n    getRule,\r\n    getRuleAll,\r\n    hasAuthenticated: hasAuthenticated$1,\r\n    hasCreator: hasCreator$1,\r\n    hasPublic: hasPublic$1,\r\n    removeAgent: removeAgent$1,\r\n    removeForbiddenRuleUrl: removeNoneOfRuleUrl,\r\n    removeGroup,\r\n    removeOptionalRuleUrl: removeAnyOfRuleUrl,\r\n    removeRequiredRuleUrl: removeAllOfRuleUrl,\r\n    removeRule,\r\n    ruleAsMarkdown,\r\n    setAgent: setAgent$1,\r\n    setForbiddenRuleUrl: setNoneOfRuleUrl,\r\n    setGroup,\r\n    setOptionalRuleUrl: setAnyOfRuleUrl,\r\n    setRequiredRuleUrl: setAllOfRuleUrl,\r\n    setRule,\r\n};\r\nconst v1MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\nconst v1ControlFunctions = {\r\n    hasLinkedAcr,\r\n    addAcrPolicyUrl: addAcrPolicyUrl$1,\r\n    addMemberAcrPolicyUrl: addMemberAcrPolicyUrl$1,\r\n    getAcrPolicyUrlAll: getAcrPolicyUrlAll$1,\r\n    getMemberAcrPolicyUrlAll: getMemberAcrPolicyUrlAll$1,\r\n    removeAcrPolicyUrl: removeAcrPolicyUrl$1,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl: removeMemberAcrPolicyUrl$1,\r\n    removeMemberAcrPolicyUrlAll,\r\n};\r\nconst deprecatedFunctions = {\r\n    createControl: internal_createControl,\r\n    getControl: internal_getControl,\r\n    getAllControl: internal_getControlAll,\r\n    getControlAll: internal_getControlAll,\r\n    setControl: internal_setControl,\r\n    removeControl: removeControl,\r\n    addPolicyUrl: internal_addPolicyUrl,\r\n    getPolicyUrlAll: internal_getPolicyUrlAll,\r\n    removePolicyUrl: internal_removePolicyUrl,\r\n    removePolicyUrlAll: internal_removePolicyUrlAll,\r\n    addMemberPolicyUrl: internal_addMemberPolicyUrl,\r\n    getMemberPolicyUrlAll: internal_getMemberPolicyUrlAll,\r\n    removeMemberPolicyUrl: internal_getMemberPolicyUrlAll,\r\n    removeMemberPolicyUrlAll: internal_removeMemberPolicyUrlAll,\r\n    /** @deprecated This misspelling was included accidentally. The correct function is [[getForbiddenRuleUrlAll]]. */\r\n    getForbiddenRuleurlAll: getNoneOfRuleUrlAll,\r\n    setPublic: previousSetPublicSignature,\r\n    setAuthenticated: previousSetAuthenticatedSignature,\r\n    setCreator: previousSetCreatorSignature,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Replaced by [[acp_v2]].\r\n */\r\nconst acp_v1 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v1AcpFunctions), v1PolicyFunctions), v1RuleFunctions), v1MockFunctions), v1ControlFunctions), deprecatedFunctions);\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Remove an [[Control]] from the [[AccessControlResource]] of a Resource.\r\n *\r\n * @param withAccessControlResource A Resource with the Access Control Resource from which to remove an Access Control.\r\n * @param control The [[Control]] to remove from the given Access Control Resource.\r\n * @returns The given Resource with a new Access Control Resource equal to the original Access Control Resource, excluding the given Access Control.\r\n * @hidden Developers don't need to care about initialising Controls - they can just add Policies directly.\r\n * @deprecated\r\n */\r\nfunction removeControl(withAccessControlResource, control) {\r\n    const acr = internal_getAcr(withAccessControlResource);\r\n    const updatedAcr = removeThing(acr, control);\r\n    const updatedResource = internal_setAcr(withAccessControlResource, updatedAcr);\r\n    return updatedResource;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v3AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getLinkedAcrUrl,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n    isAcpControlled,\r\n};\r\nconst v3ControlFunctions = {\r\n    acrAsMarkdown,\r\n    addAcrPolicyUrl: addAcrPolicyUrl$1,\r\n    addMemberAcrPolicyUrl: addMemberAcrPolicyUrl$1,\r\n    addMemberPolicyUrl: addMemberPolicyUrl$1,\r\n    addPolicyUrl: addPolicyUrl$1,\r\n    getAcrPolicyUrlAll: getAcrPolicyUrlAll$1,\r\n    getMemberAcrPolicyUrlAll: getMemberAcrPolicyUrlAll$1,\r\n    getMemberPolicyUrlAll: getMemberPolicyUrlAll$1,\r\n    getPolicyUrlAll: getPolicyUrlAll$1,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl: removeAcrPolicyUrl$1,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl: removeMemberAcrPolicyUrl$1,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl: removeMemberPolicyUrl$1,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl: removePolicyUrl$1,\r\n    removePolicyUrlAll,\r\n};\r\nconst v3PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV1,\r\n    getDenyModes: getDenyModesV1,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV1,\r\n    setDenyModes: setDenyModesV1,\r\n    setPolicy,\r\n    createResourcePolicyFor,\r\n    getResourceAcrPolicy,\r\n    getResourceAcrPolicyAll,\r\n    getResourcePolicy,\r\n    getResourcePolicyAll,\r\n    removeResourceAcrPolicy,\r\n    removeResourcePolicy,\r\n    setResourceAcrPolicy,\r\n    setResourcePolicy: setResourcePolicy$1,\r\n};\r\nconst v3RuleFunctions = {\r\n    addAgent: addAgent$1,\r\n    addGroup,\r\n    createRule,\r\n    getAgentAll: getAgentAll$1,\r\n    getGroupAll,\r\n    getRule,\r\n    getRuleAll,\r\n    removeAgent: removeAgent$1,\r\n    removeGroup,\r\n    removeRule,\r\n    ruleAsMarkdown,\r\n    setAgent: setAgent$1,\r\n    setGroup,\r\n    setRule,\r\n    addClient: addClient$1,\r\n    getClientAll: getClientAll$1,\r\n    hasAnyClient: hasAnyClient$1,\r\n    removeClient: removeClient$1,\r\n    setAnyClient: setAnyClient$1,\r\n    setClient: setClient$1,\r\n    removeAnyClient: removeAnyClient$1,\r\n    hasAuthenticated: hasAuthenticated$1,\r\n    hasCreator: hasCreator$1,\r\n    hasPublic: hasPublic$1,\r\n    setAuthenticated: setAuthenticated$1,\r\n    setCreator: setCreator$1,\r\n    setPublic: setPublic$1,\r\n    removeAuthenticated: removeAuthenticated$1,\r\n    removeCreator: removeCreator$1,\r\n    removePublic: removePublic$1,\r\n    getAnyOfRuleUrlAll,\r\n    addAnyOfRuleUrl,\r\n    removeAnyOfRuleUrl,\r\n    setAnyOfRuleUrl,\r\n    getAllOfRuleUrlAll,\r\n    addAllOfRuleUrl,\r\n    removeAllOfRuleUrl,\r\n    setAllOfRuleUrl,\r\n    getNoneOfRuleUrlAll,\r\n    addNoneOfRuleUrl,\r\n    removeNoneOfRuleUrl,\r\n    setNoneOfRuleUrl,\r\n    createResourceRuleFor,\r\n    getResourceRule,\r\n    getResourceRuleAll,\r\n    removeResourceRule,\r\n    setResourceRule,\r\n};\r\nconst v3MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Please import \"acp_ess_1\" directly.\r\n */\r\nconst acp_v3 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v3AcpFunctions), v3ControlFunctions), v3PolicyFunctions), v3RuleFunctions), v3MockFunctions);\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction setAccessControlResourceThing(resource, thing) {\r\n    return Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: Object.assign(Object.assign({}, resource.internal_acp), { acr: setThing(resource.internal_acp.acr, thing) }),\r\n    });\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction getAccessControlTypeFromDefaultAccessControlName(name) {\r\n    if (name.includes(\"Member\")) {\r\n        return ACP.memberAccessControl;\r\n    }\r\n    return ACP.accessControl;\r\n}\r\n/** @hidden */\r\nfunction setDefaultAccessControlThingIfNotExist(resource, name) {\r\n    const defaultAccessControlThingUrl = getDefaultAccessControlUrl(resource, name);\r\n    const acr = internal_getAcr(resource);\r\n    // Get the Access Control Resource Thing or create it\r\n    let accessControlResourceThing = getAccessControlResourceThing(resource);\r\n    if (accessControlResourceThing === null ||\r\n        typeof accessControlResourceThing === \"undefined\") {\r\n        accessControlResourceThing = createThing({ url: getSourceUrl(acr) });\r\n    }\r\n    // Get the Default Access Control Thing or create it and return\r\n    const accessControlUrlAll = getIriAll(accessControlResourceThing, getAccessControlTypeFromDefaultAccessControlName(name));\r\n    if (!accessControlUrlAll.includes(defaultAccessControlThingUrl)) {\r\n        accessControlResourceThing = buildThing(accessControlResourceThing)\r\n            .addUrl(getAccessControlTypeFromDefaultAccessControlName(name), defaultAccessControlThingUrl)\r\n            .build();\r\n        return setAccessControlResourceThing(resource, accessControlResourceThing);\r\n    }\r\n    // Return the original resource if the ACR and Default AC exist\r\n    return resource;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the ACR of the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to its access control resource.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_ACR_ACCESS_CONTROL);\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultAccessControl, DEFAULT_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultAccessControl, buildThing(defaultAccessControlThing).addUrl(ACP.access, policyUrl).build());\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the ACRs of the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to its children's access control resources.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addMemberAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_MEMBER_ACR_ACCESS_CONTROL);\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultAccessControl, DEFAULT_MEMBER_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultAccessControl, buildThing(defaultAccessControlThing).addUrl(ACP.access, policyUrl).build());\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to its children.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addMemberPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultMemberAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_MEMBER_ACCESS_CONTROL);\r\n    const defaultMemberAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultMemberAccessControl, DEFAULT_MEMBER_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultMemberAccessControl, buildThing(defaultMemberAccessControlThing)\r\n        .addUrl(ACP.apply, policyUrl)\r\n        .build());\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to it.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_ACCESS_CONTROL);\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultAccessControl, DEFAULT_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultAccessControl, buildThing(defaultAccessControlThing).addUrl(ACP.apply, policyUrl).build());\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URL of all access controls linked to the given resource's ACR.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of access\r\n * controls applying to it.\r\n * @returns Access Control URL array\r\n * @since 1.6.0\r\n */\r\nfunction getAccessControlUrlAll(resourceWithAcr) {\r\n    const acrThing = getAccessControlResourceThing(resourceWithAcr);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, ACP.accessControl);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getPolicyUrls(resource, accessControlUrls, type) {\r\n    const acr = internal_getAcr(resource);\r\n    return Array.from(new Set(accessControlUrls\r\n        .map((accessControlUrl) => {\r\n        const accessControlThing = getThing(acr, accessControlUrl);\r\n        // istanbul ignore next\r\n        if (accessControlThing !== null) {\r\n            return getIriAll(accessControlThing, type);\r\n        }\r\n        // istanbul ignore next\r\n        return [];\r\n    })\r\n        .reduce((previousValue, currentValue) => previousValue.concat(currentValue), [])));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the ACR of the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\r\n * applying to its access control resource.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getAcrPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getAccessControlUrlAll(resourceWithAcr), ACP.access);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URL of all member access controls linked to the given resource's ACR.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of access\r\n * controls inherited by its children.\r\n * @returns Access Control URL array\r\n * @since 1.6.0\r\n */\r\nfunction getMemberAccessControlUrlAll(resourceWithAcr) {\r\n    const acrThing = getAccessControlResourceThing(resourceWithAcr);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, ACP.memberAccessControl);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the ACRs of the given resource's\r\n * children.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\r\n * applying to its children's access control resources.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getMemberAcrPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getMemberAccessControlUrlAll(resourceWithAcr), ACP.access);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs policies\r\n * applying to its children.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getMemberPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getMemberAccessControlUrlAll(resourceWithAcr), ACP.apply);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\r\n * applying to it.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getAccessControlUrlAll(resourceWithAcr), ACP.apply);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the ACR of the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to its access control resource.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removeAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.access, policyUrl));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the ACRs of the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to its children's access control resources.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removeMemberAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_MEMBER_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.access, policyUrl));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to its children.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removeMemberPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_MEMBER_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.apply, policyUrl));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to it.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removePolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.apply, policyUrl));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Insert the given [[ResourcePolicy]] into the given Resource's Acccess Control\r\n * Resource, replacing previous instances of that Policy.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains Access Policies.\r\n * @param policy The Policy to insert into the Resource's Access Control Resource.\r\n * @returns A new Resource equal to the given Resource, but with the given Policy in its Access Control Resource.\r\n * @since 1.18.0\r\n */\r\nfunction setResourcePolicy(resourceWithAcr, policy) {\r\n    return setAccessControlResourceThing(resourceWithAcr, policy);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param thing the [[Thing]] to check to see if it's an ACP Matcher or not\r\n */\r\nfunction isMatcher(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n *\r\n * Also see [[addAnyOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addAllOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeAllOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrites the Matcher refining the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"All Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setAllOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"All Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the \"All Of\" [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getAllOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.allOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n *\r\n * Also see [[addAllOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addAnyOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeAnyOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the Matcher extending the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setAnyOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"Any Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the \"Any Of\" [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getAnyOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.anyOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * by the given Matcher, they will **not** be granted access.\r\n *\r\n * Also see [[addAllOfMatcherUrl]] and [[addAnyOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addNoneOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * in any of the \"None Of\" Matchers, they will **not** be granted access.\r\n *\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeNoneOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set the Matchers restricting the scope of a given [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * by any of the \"None Of\" Matchers, they will not be granted access.\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"None Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setNoneOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"None Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the forbidden [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getNoneOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.noneOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Matcher]].\r\n *\r\n * @param url URL that identifies this [[Matcher]].\r\n * @since Not released yet.\r\n */\r\nfunction createMatcher(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let matcherThing = createThing({ url: stringUrl });\r\n    matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\r\n    return matcherThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourceMatcher]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the new Matcher is to apply.\r\n * @param name Name that identifies this [[Matcher]].\r\n * @since Not released yet.\r\n */\r\nfunction createResourceMatcherFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let matcherThing = createThing({ url: url.href });\r\n    matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\r\n    return matcherThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Matcher]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains the given [[Matcher]].\r\n * @param url URL that identifies this [[Matcher]].\r\n * @returns The requested [[Matcher]], if it exists, or `null` if it does not.\r\n * @since Not released yet.\r\n */\r\nfunction getMatcher(matcherResource, url) {\r\n    const foundThing = getThing(matcherResource, url);\r\n    if (foundThing === null || !isMatcher(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourceMatcher]] with the given name from an Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains the given [[ResourceMatcher]].\r\n * @param name Name that identifies this [[ResourceMatcher]].\r\n * @returns The requested [[ResourceMatcher]], if it exists, or `null` if it does not.\r\n * @since Not released yet.\r\n */\r\nfunction getResourceMatcher(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (foundThing === null || !isMatcher(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[Matcher]]s from a [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns The [[Matcher]]s contained in this resource.\r\n * @since Not released yet.\r\n */\r\nfunction getMatcherAll(matcherResource) {\r\n    const things = getThingAll(matcherResource);\r\n    return things.filter(isMatcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[ResourceMatcher]]s from a Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns The [[ResourceMatcher]]s contained in this Resource's Access Control Resource.\r\n * @since Not released yet.\r\n */\r\nfunction getResourceMatcherAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const things = getThingAll(acr);\r\n    return things.filter(isMatcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[Matcher]] from the given [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns A new SolidDataset equal to the given Matcher Resource, but without the given Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction removeMatcher(matcherResource, matcher) {\r\n    return removeThing(matcherResource, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[ResourceMatcher]] from the given Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns A new Resource equal to the given Resource, but without the given Matcher in its ACR.\r\n * @since Not released yet.\r\n */\r\nfunction removeResourceMatcher(resourceWithAcr, matcher) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let matcherToRemove;\r\n    if (typeof matcher === \"string\") {\r\n        try {\r\n            new URL(matcher);\r\n            matcherToRemove = matcher;\r\n        }\r\n        catch (e) {\r\n            // If the given Matcher to remove is the name of the Matcher,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Matcher itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const matcherUrl = new URL(getSourceUrl(acr));\r\n            matcherUrl.hash = `#${matcher}`;\r\n            matcherToRemove = matcherUrl.href;\r\n        }\r\n    }\r\n    else if (isNamedNode(matcher)) {\r\n        matcherToRemove = internal_toIriString(matcher);\r\n    }\r\n    else {\r\n        matcherToRemove = asUrl(matcher);\r\n    }\r\n    // Check whether the actual Matcher (i.e. with the Matcher type) exists:\r\n    const matchingMatcher = getResourceMatcher(resourceWithAcr, new URL(matcherToRemove).hash.substring(1));\r\n    if (matchingMatcher === null) {\r\n        // No such Matcher exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, matchingMatcher);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Matcher]] into the given [[SolidDataset]], replacing previous\r\n * instances of that Matcher.\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns A new SolidDataset equal to the given Matcher Resource, but with the given Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction setMatcher(matcherResource, matcher) {\r\n    return setThing(matcherResource, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourceMatcher]] into the given Resource's Access Control Resource,\r\n * replacing previous instances of that Matcher.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns A new Resource equal to the given Resource, but with the given Matcher in its ACR.\r\n * @since Not released yet.\r\n */\r\nfunction setResourceMatcher(resourceWithAcr, matcher) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, matcher);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the agents a [[Matcher]] applies **directly** to. This will not include agents\r\n * that are matched on a property other than their WebID.\r\n *\r\n * @param matcher The matcher from which agents are read.\r\n * @returns A list of the WebIDs of agents included in the matcher.\r\n * @since Not released yet.\r\n */\r\nfunction getAgentAll(matcher) {\r\n    return getIriAll(matcher, acp.agent).filter((agent) => agent !== acp.PublicAgent &&\r\n        agent !== acp.AuthenticatedAgent &&\r\n        agent !== acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the agents the [[Matcher]] applies to with the provided agents.\r\n *\r\n * @param matcher The matcher for which agents are set.\r\n * @param agent The agent the matcher should apply to.\r\n * @returns A copy of the input matcher, applying to a different set of agents.\r\n * @since Not released yet.\r\n */\r\nfunction setAgent(matcher, agent) {\r\n    // Preserve the special agent classes authenticated and public, which we\r\n    // don't want to overwrite with this function.\r\n    const isPublic = hasPublic(matcher);\r\n    const isAuthenticated = hasAuthenticated(matcher);\r\n    const isCreator = hasCreator(matcher);\r\n    let result = setIri(matcher, acp.agent, agent);\r\n    // Restore public and authenticated\r\n    if (isPublic) {\r\n        result = setPublic(result);\r\n    }\r\n    if (isAuthenticated) {\r\n        result = setAuthenticated(result);\r\n    }\r\n    if (isCreator) {\r\n        result = setCreator(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Matcher]] to an additional agent.\r\n *\r\n * @param matcher The [[Matcher]] to be applied to an additional agent.\r\n * @param agent The agent the [[Matcher]] should apply to.\r\n * @returns A copy of the [[Matcher]], applying to an additional agent.\r\n * @since Not released yet.\r\n */\r\nfunction addAgent(matcher, agent) {\r\n    return addIri(matcher, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Matcher]] from applying to a given agent directly. This will not\r\n * prevent the agent from matching on other properties than its WebID.\r\n *\r\n * @param matcher The [[Matcher]] that should no longer apply to a given agent.\r\n * @param agent The agent the Matcher should no longer apply to.\r\n * @returns A copy of the Matcher, not applying to the given agent.\r\n * @since Not released yet.\r\n */\r\nfunction removeAgent(matcher, agent) {\r\n    return removeIri(matcher, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any agent.\r\n *\r\n * @param matcher The Matcher checked for public access.\r\n * @returns Whether the Matcher applies to any agent or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasPublic(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.PublicAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to any Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to any agent.\r\n * @since Not released yet.\r\n */\r\nfunction setPublic(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setPublic` no longer takes a second parameter. It is now used together with `removePublic` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to any Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to no longer apply to any agent.\r\n * @since Not released yet.\r\n */\r\nfunction removePublic(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any authenticated agent.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to any authenticated agent or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasAuthenticated(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.AuthenticatedAgent).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to any authenticated Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to any authenticated Agent.\r\n * @since Not released yet.\r\n */\r\nfunction setAuthenticated(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setAuthenticated` no longer takes a second parameter. It is now used together with `removeAuthenticated` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to any authenticated Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply/not apply to any authenticated agent.\r\n * @since Not released yet.\r\n */\r\nfunction removeAuthenticated(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to the creator of the Resource.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to the creator of the Resource or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasCreator(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.CreatorAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to the creator of a Resource.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to the creator of a Resource.\r\n * @since Not released yet.\r\n */\r\nfunction setCreator(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setCreator` no longer takes a second parameter. It is now used together with `removeCreator` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to the creator of a Resource.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply/not apply to the creator of a Resource.\r\n * @since Not released yet.\r\n */\r\nfunction removeCreator(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the clients a [[Matcher]] applies **directly** to. This will not include\r\n * specific client classes, such as public clients.\r\n *\r\n * @param matcher The Matcher from which clients are read.\r\n * @returns A list of the WebIDs of clients included in the Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction getClientAll(matcher) {\r\n    return getIriAll(matcher, acp.client)\r\n        .filter((client) => client !== solid.PublicOidcClient)\r\n        .concat(getStringNoLocaleAll(matcher, acp.client));\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the clients the [[Matcher]] applies to with the provided Client.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @param client The Client the Matcher should apply to.\r\n * @returns A copy of the input Matcher, applying to a different set of Clients.\r\n */\r\nfunction setClient(matcher, client) {\r\n    // Preserve the special \"any client\" class, which we\r\n    // don't want to overwrite with this function.\r\n    const anyClientEnabled = hasAnyClient(matcher);\r\n    let result = setIri(matcher, acp.client, client);\r\n    // Restore the \"any client\" class\r\n    if (anyClientEnabled) {\r\n        result = setAnyClient(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Matcher]] to an additional Client.\r\n *\r\n * @param matcher The [[Matcher]] to be applied to an additional Client.\r\n * @param client The Client the [[Matcher]] should apply to.\r\n * @returns A copy of the [[Matcher]], applying to an additional Client.\r\n * @since Not released yet.\r\n */\r\nfunction addClient(matcher, client) {\r\n    if (!internal_isValidUrl(client)) {\r\n        return addStringNoLocale(matcher, acp.client, client);\r\n    }\r\n    return addIri(matcher, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Matcher]] from applying to a given Client directly.\r\n *\r\n * @param matcher The [[Matcher]] that should no longer apply to a given Client.\r\n * @param client The Client the Matcher should no longer apply to.\r\n * @returns A copy of the Matcher, not applying to the given Client.\r\n * @since Not released yet.\r\n */\r\nfunction removeClient(matcher, client) {\r\n    if (!internal_isValidUrl(client)) {\r\n        return removeStringNoLocale(matcher, acp.client, client);\r\n    }\r\n    return removeIri(matcher, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any client, i.e. all the applications\r\n * regardless of their identifier.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to public clients.\r\n * @since Not released yet.\r\n * @deprecated\r\n */\r\nfunction hasAnyClient(matcher) {\r\n    return (getIriAll(matcher, acp.client).filter((client) => client === solid.PublicOidcClient).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Matcher]] apply to any client application.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @returns A copy of the Matcher, updated to apply to any client\r\n * @since Not released yet.\r\n * @deprecated\r\n */\r\nfunction setAnyClient(matcher) {\r\n    return addIri(matcher, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Matcher]] no longer apply to any client application.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @returns A copy of the Matcher, updated to no longer apply to any client\r\n * @since Not released yet.\r\n * @deprecated\r\n */\r\nfunction removeAnyClient(matcher) {\r\n    return removeIri(matcher, acp.client, solid.PublicOidcClient);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v4AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n    isAcpControlled,\r\n    getVcAccess,\r\n    setVcAccess,\r\n};\r\nconst v4ControlFunctions = {\r\n    addAcrPolicyUrl,\r\n    addMemberAcrPolicyUrl,\r\n    addMemberPolicyUrl,\r\n    addPolicyUrl,\r\n    getAcrPolicyUrlAll,\r\n    getMemberAcrPolicyUrlAll,\r\n    getMemberPolicyUrlAll,\r\n    getPolicyUrlAll,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl,\r\n    removePolicyUrlAll,\r\n};\r\nconst v4PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV2,\r\n    getDenyModes: getDenyModesV2,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV2,\r\n    setDenyModes: setDenyModesV2,\r\n    setPolicy,\r\n    createResourcePolicyFor,\r\n    getResourceAcrPolicy,\r\n    getResourceAcrPolicyAll,\r\n    getResourcePolicy,\r\n    getResourcePolicyAll,\r\n    removeResourceAcrPolicy,\r\n    removeResourcePolicy,\r\n    setResourcePolicy,\r\n};\r\nconst v4MatcherFunctions = {\r\n    addAgent,\r\n    createMatcher,\r\n    getAgentAll,\r\n    getMatcher,\r\n    getMatcherAll,\r\n    removeAgent,\r\n    removeMatcher,\r\n    setAgent,\r\n    setMatcher,\r\n    addClient,\r\n    getClientAll,\r\n    hasAnyClient,\r\n    removeClient,\r\n    setAnyClient,\r\n    setClient,\r\n    removeAnyClient,\r\n    hasAuthenticated,\r\n    hasCreator,\r\n    hasPublic,\r\n    setAuthenticated,\r\n    setCreator,\r\n    setPublic,\r\n    removeAuthenticated,\r\n    removeCreator,\r\n    removePublic,\r\n    getAnyOfMatcherUrlAll,\r\n    addAnyOfMatcherUrl,\r\n    removeAnyOfMatcherUrl,\r\n    setAnyOfMatcherUrl,\r\n    getAllOfMatcherUrlAll,\r\n    addAllOfMatcherUrl,\r\n    removeAllOfMatcherUrl,\r\n    setAllOfMatcherUrl,\r\n    getNoneOfMatcherUrlAll,\r\n    addNoneOfMatcherUrl,\r\n    removeNoneOfMatcherUrl,\r\n    setNoneOfMatcherUrl,\r\n    createResourceMatcherFor,\r\n    getResourceMatcher,\r\n    getResourceMatcherAll,\r\n    removeResourceMatcher,\r\n    setResourceMatcher,\r\n};\r\nconst v4MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Please import \"acp_ess_2\" directly.\r\n */\r\nconst acp_v4 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v4AcpFunctions), v4ControlFunctions), v4PolicyFunctions), v4MatcherFunctions), v4MockFunctions);\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst knownActorRelations$1 = [acp.agent, acp.group];\r\n/**\r\n * Get an overview of what access is defined for a given actor in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this actor.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given actor, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setActorAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent or acp:group) you want to get the access for.\r\n * @param actor Which instance of the given actor type you want to get the access for.\r\n * @returns What Access modes are granted to the given actor explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getActorAccess$1(acpData, actorRelation, actor) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access the given actor has:\r\n        return null;\r\n    }\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    const initialAccess = {\r\n        read: false,\r\n        append: false,\r\n        write: false,\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n    // All allowed reading and writing defined in ACR policies\r\n    // determines whether the `controlRead` and `controlWrite` statuses are `true`.\r\n    const allowedAcrAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV1(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.controlRead = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.controlWrite = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, initialAccess);\r\n    // Then allowed reading, appending and writing in regular policies\r\n    // determines whether the respective status is `true`.\r\n    const withAllowedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV1(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.read = true;\r\n        }\r\n        if (allowModes.append) {\r\n            allAllowedAccess.append = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.write = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, allowedAcrAccess);\r\n    // At this point, everything that has been explicitly allowed is true.\r\n    // However, it could still be overridden by access that is explicitly denied.\r\n    // Starting with `controlRead` and `controlWrite`,\r\n    // by inspecting denied reading and writing defined in the ACR policies.\r\n    const withAcrDeniedAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV1(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.controlRead = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.controlWrite = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAllowedAccess);\r\n    // And finally, we set to `false` those access modes that are explicitly denied\r\n    // in the regular policies:\r\n    const withDeniedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV1(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.read = false;\r\n        }\r\n        if (denyModes.append === true) {\r\n            allDeniedAccess.append = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.write = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAcrDeniedAccess);\r\n    return withDeniedAccess;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Agent in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this Agent.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given Agent, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getAgentAccess$1(acpData, webId) {\r\n    return internal_getActorAccess$1(acpData, acp.agent, webId);\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Group in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this Group.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given Group, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setGroupAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param groupUrl URL of the Group you want to get the access for.\r\n * @returns What Access modes are granted to the given Group explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getGroupAccess(acpData, groupUrl) {\r\n    return internal_getActorAccess$1(acpData, acp.group, groupUrl);\r\n}\r\n/**\r\n * Get an overview of what access is defined for everybody in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to everybody.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to everybody, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setPublicAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @returns What Access modes are granted to everyone explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getPublicAccess$1(acpData) {\r\n    return internal_getActorAccess$1(acpData, acp.agent, acp.PublicAgent);\r\n}\r\nfunction policyAppliesTo$1(policy, actorRelation, actor, acpData) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    if (allowModes.length + denyModes.length === 0) {\r\n        // A Policy that does not specify access modes does not do anything:\r\n        return false;\r\n    }\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyAppliesTo` should already have validated that\r\n    //       the return value of internal_getPoliciesAndRules() did not have any\r\n    //       inaccessible URLs, so we should be able to find every Rule.\r\n    const allOfRules = getAllOfRuleUrlAll(policy).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const anyOfRules = getAnyOfRuleUrlAll(policy).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const noneOfRules = getNoneOfRuleUrlAll(policy).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    // We assume that this Policy applies if this specific actor is mentioned\r\n    // and no further restrictions are in place.\r\n    // (In other words, the Policy may apply to others *in addition to* this\r\n    // actor, but if it applies to this actor *unless* some other condition holds,\r\n    // we cannot be sure whether it will apply to this actor.)\r\n    // This means that:\r\n    return (\r\n    // Every existing allOf Rule explicitly applies explicitly to this given actor:\r\n    allOfRules.every((rule) => ruleAppliesTo(rule, actorRelation, actor)) &&\r\n        // If there are anyOf Rules, at least one applies explicitly to this actor:\r\n        (anyOfRules.length === 0 ||\r\n            anyOfRules.some((rule) => ruleAppliesTo(rule, actorRelation, actor))) &&\r\n        // No further restrictions are in place that make this sometimes not apply\r\n        // to the given actor:\r\n        noneOfRules.length === 0);\r\n}\r\nfunction policyConflictsWith$1(policy, otherAccess) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    return ((otherAccess.read === true && denyModes.includes(acp.Read)) ||\r\n        (otherAccess.read === false &&\r\n            allowModes.includes(acp.Read) &&\r\n            !denyModes.includes(acp.Read)) ||\r\n        (otherAccess.append === true && denyModes.includes(acp.Append)) ||\r\n        (otherAccess.append === false &&\r\n            allowModes.includes(acp.Append) &&\r\n            !denyModes.includes(acp.Append)) ||\r\n        (otherAccess.write === true && denyModes.includes(acp.Write)) ||\r\n        (otherAccess.write === false &&\r\n            allowModes.includes(acp.Write) &&\r\n            !denyModes.includes(acp.Write)));\r\n}\r\nfunction ruleAppliesTo(rule, actorRelation, actor) {\r\n    // A Rule that does not list *any* actor matches for everyone:\r\n    let isEmpty = true;\r\n    knownActorRelations$1.forEach((knownActorRelation) => {\r\n        isEmpty && (isEmpty = getIri(rule, knownActorRelation) === null);\r\n    });\r\n    return isEmpty || getIriAll(rule, actorRelation).includes(actor);\r\n}\r\n/**\r\n * Get a set of all actors mentioned in an ACR by active Rules (i.e. that are\r\n * referenced by Policies referenced by the ACR Control, and therefore that\r\n * effectively apply).\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation\r\n */\r\nfunction internal_findActorAll$1(acpData, actorRelation) {\r\n    const actors = new Set();\r\n    // This code could be prettier using flat(), which isn't supported by nodeJS 10.\r\n    // If you read this comment after April 2021, feel free to refactor.\r\n    acpData.rules.forEach((rule) => {\r\n        getIriAll(rule, actorRelation)\r\n            .filter((iri) => ![\r\n            acp.PublicAgent,\r\n            acp.CreatorAgent,\r\n            acp.AuthenticatedAgent,\r\n        ].includes(iri) || actorRelation != acp.agent)\r\n            .forEach((iri) => actors.add(iri));\r\n    });\r\n    return actors;\r\n}\r\n/**\r\n * Iterate through all the actors active for an ACR, and list all of their access.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation The type of actor we want to list access for\r\n * @returns A map with each actor access indexed by their URL, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getActorAccessAll$1(acpData, actorRelation) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access actors of the given type have:\r\n        return null;\r\n    }\r\n    const result = {};\r\n    const actors = internal_findActorAll$1(acpData, actorRelation);\r\n    actors.forEach((iri) => {\r\n        // The type assertion holds, because if internal_getActorAccess were null,\r\n        // we would have returned {} already.\r\n        const access = internal_getActorAccess$1(acpData, actorRelation, iri);\r\n        result[iri] = access;\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Get an overview of what access are defined for all Groups in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to the mentionned\r\n * Groups.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to individual Groups, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @returns A map with each Group's access indexed by their URL, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getGroupAccessAll(acpData) {\r\n    return internal_getActorAccessAll$1(acpData, acp.group);\r\n}\r\n/**\r\n * Get an overview of what access are defined for all Agents in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Rule applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to the mentionned\r\n * Agents.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to individual Agents, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @returns A map with each Agent's access indexed by their WebID, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getAgentAccessAll$1(acpData) {\r\n    return internal_getActorAccessAll$1(acpData, acp.agent);\r\n}\r\n/**\r\n * Set access to a Resource for a specific actor.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * actor specifically. In other words, it can, for example, add Policies that\r\n * give a particular Group Read access to the Resource. However, if other\r\n * Policies specify that everyone in that Group is *denied* Read access *except*\r\n * for a particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for an agent matching the given actor.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent or acp:group) you want to set the access for.\r\n * @param actor Which instance of the given actor type you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given actor. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setActorAccess$1(resource, acpData, actorRelation, actor, access) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (!hasAccessibleAcr(resource) || acpData.inaccessibleUrls.length > 0) {\r\n        return null;\r\n    }\r\n    // Get the access that currently applies to the given actor\r\n    const existingAccess = internal_getActorAccess$1(acpData, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that above. */\r\n    if (existingAccess === null) {\r\n        return null;\r\n    }\r\n    // Get all Policies that apply specifically to the given actor\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo$1(policy, actorRelation, actor, acpData));\r\n    // We only need to override Policies that define access other than what we want:\r\n    const conflictingAcrPolicies = applicableAcrPolicies.filter((policy) => policyConflictsWith$1(policy, {\r\n        read: access.controlRead,\r\n        write: access.controlWrite,\r\n    }));\r\n    const conflictingPolicies = applicablePolicies.filter((policy) => policyConflictsWith$1(policy, {\r\n        read: access.read,\r\n        append: access.append,\r\n        write: access.write,\r\n    }));\r\n    // For every Policy that applies specifically to the given Actor, but _also_\r\n    // to another actor (i.e. that applies using an anyOf Rule, or a Rule that\r\n    // mentions both the given and another actor)...\r\n    const otherActorAcrPolicies = conflictingAcrPolicies.filter((acrPolicy) => policyHasOtherActors$1(acrPolicy, actorRelation, actor, acpData));\r\n    const otherActorPolicies = conflictingPolicies.filter((policy) => policyHasOtherActors$1(policy, actorRelation, actor, acpData));\r\n    // ...check what access the current actor would have if we removed them...\r\n    const acpDataWithPoliciesExcluded = Object.assign(Object.assign({}, acpData), { acrPolicies: acpData.acrPolicies.filter((acrPolicy) => !otherActorAcrPolicies.includes(acrPolicy)), policies: acpData.policies.filter((policy) => !otherActorPolicies.includes(policy)) });\r\n    const remainingAccess = internal_getActorAccess$1(acpDataWithPoliciesExcluded, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that at the start. */\r\n    if (remainingAccess === null) {\r\n        return null;\r\n    }\r\n    // ...add copies of those Policies and their Rules, but excluding the given actor...\r\n    let updatedResource = resource;\r\n    otherActorAcrPolicies.forEach((acrPolicy) => {\r\n        const [policyCopy, ruleCopies] = copyPolicyExcludingActor$1(acrPolicy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, policyCopy);\r\n        updatedResource = ruleCopies.reduce(setResourceRule, updatedResource);\r\n    });\r\n    otherActorPolicies.forEach((policy) => {\r\n        const [policyCopy, ruleCopies] = copyPolicyExcludingActor$1(policy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourcePolicy$1(updatedResource, policyCopy);\r\n        updatedResource = ruleCopies.reduce(setResourceRule, updatedResource);\r\n    });\r\n    // ...add a new Policy that applies the given access,\r\n    // and the previously applying access for access modes that were undefined...\r\n    const newRuleName = `rule_${encodeURIComponent(`${actorRelation}_${actor}`)}`;\r\n    let newRule = createResourceRuleFor(resource, newRuleName);\r\n    newRule = setIri(newRule, actorRelation, actor);\r\n    const newControlReadAccess = (_a = access.controlRead) !== null && _a !== void 0 ? _a : existingAccess.controlRead;\r\n    const newControlWriteAccess = (_b = access.controlWrite) !== null && _b !== void 0 ? _b : existingAccess.controlWrite;\r\n    let acrPoliciesToUnapply = otherActorAcrPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newControlReadAccess !== remainingAccess.controlRead ||\r\n        newControlWriteAccess !== remainingAccess.controlWrite) {\r\n        const newAcrPolicyName = `acr_policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newAcrPolicy = createResourcePolicyFor(resource, newAcrPolicyName);\r\n        newAcrPolicy = setAllowModesV1(newAcrPolicy, {\r\n            read: newControlReadAccess === true,\r\n            append: false,\r\n            write: newControlWriteAccess === true,\r\n        });\r\n        newAcrPolicy = addIri(newAcrPolicy, acp.allOf, newRule);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, newAcrPolicy);\r\n        updatedResource = setResourceRule(updatedResource, newRule);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // ACR Policies that applied to both the given actor and other actors\r\n        // (because they have been replaced by clones not mentioning the given\r\n        // actor). Hence `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        acrPoliciesToUnapply = conflictingAcrPolicies;\r\n    }\r\n    const newReadAccess = (_c = access.read) !== null && _c !== void 0 ? _c : existingAccess.read;\r\n    const newAppendAccess = (_d = access.append) !== null && _d !== void 0 ? _d : existingAccess.append;\r\n    const newWriteAccess = (_e = access.write) !== null && _e !== void 0 ? _e : existingAccess.write;\r\n    let policiesToUnapply = otherActorPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newReadAccess !== remainingAccess.read ||\r\n        newAppendAccess !== remainingAccess.append ||\r\n        newWriteAccess !== remainingAccess.write) {\r\n        const newPolicyName = `policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newPolicy = createResourcePolicyFor(resource, newPolicyName);\r\n        newPolicy = setAllowModesV1(newPolicy, {\r\n            read: newReadAccess === true,\r\n            append: newAppendAccess === true,\r\n            write: newWriteAccess === true,\r\n        });\r\n        newPolicy = addIri(newPolicy, acp.allOf, newRule);\r\n        updatedResource = setResourcePolicy$1(updatedResource, newPolicy);\r\n        updatedResource = setResourceRule(updatedResource, newRule);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // Policies that applied to both the given actor and other actors (because\r\n        // they have been replaced by clones not mentioning the given actor). Hence\r\n        // `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        policiesToUnapply = conflictingPolicies;\r\n    }\r\n    // ...then remove existing Policy URLs that mentioned both the given actor\r\n    // and other actors from the given Resource and apply the new ones (but do not\r\n    // remove the actual old Policies - they might still apply to other Resources!).\r\n    acrPoliciesToUnapply.forEach((previouslyApplicableAcrPolicy) => {\r\n        updatedResource = removeAcrPolicyUrl$1(updatedResource, asIri(previouslyApplicableAcrPolicy));\r\n    });\r\n    policiesToUnapply.forEach((previouslyApplicablePolicy) => {\r\n        updatedResource = removePolicyUrl$1(updatedResource, asIri(previouslyApplicablePolicy));\r\n    });\r\n    return updatedResource;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * Agent specifically. In other words, it can, for example, add Policies that\r\n * give a particular Agent Read access to the Resource. However, if other\r\n * Policies specify that that Agent is *denied* Read access *except* if they're\r\n * in a particular Group, then that will be left intact.\r\n * This means that, unless *only* this function is used to manipulate access to\r\n * this Resource, the set access might not be equal to the effective access for\r\n * the given Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param webId Which Agent you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given Agent. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setAgentAccess$1(resource, acpData, webId, access) {\r\n    return internal_setActorAccess$1(resource, acpData, acp.agent, webId, access);\r\n}\r\n/**\r\n * Set access to a Resource for a specific Group.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * Group specifically. In other words, it can, for example, add Policies that\r\n * give a particular Group Read access to the Resource. However, if other\r\n * Policies specify that it is *denied* Read access *except* if they're a\r\n * particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for Agents in the given Group.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param groupUrl Which Group you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given Group. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setGroupAccess(resource, acpData, groupUrl, access) {\r\n    return internal_setActorAccess$1(resource, acpData, acp.group, groupUrl, access);\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function adds the relevant Access Control Policies and Rules to a\r\n * Resource's Access Control Resource to define the given access for everybody\r\n * specifically. In other words, it can, for example, add Policies that\r\n * give everybody Read access to the Resource. However, if other\r\n * Policies specify that everybody is *denied* Read access *except* if they're\r\n * in a particular Group, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for a particular Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Rules\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Rules that apply to a particular Resource.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for everybody. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setPublicAccess$1(resource, acpData, access) {\r\n    return internal_setActorAccess$1(resource, acpData, acp.agent, acp.PublicAgent, access);\r\n}\r\nfunction policyHasOtherActors$1(policy, actorRelation, actor, acpData) {\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyHasOtherActors` should already have validated\r\n    //       that the return value of internal_getPoliciesAndRules() did not have\r\n    //       any inaccessible URLs, so we should be able to find every Rule.\r\n    const allOfRules = getIriAll(policy, acp.allOf).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const allOfRulesHaveOtherActors = allOfRules.some((rule) => {\r\n        return ruleHasOtherActors(rule, actorRelation, actor);\r\n    });\r\n    const anyOfRules = getIriAll(policy, acp.anyOf).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    const anyOfRulesHaveOtherActors = anyOfRules.some((rule) => {\r\n        return ruleHasOtherActors(rule, actorRelation, actor);\r\n    });\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Rules */\r\n    const noneOfRules = getIriAll(policy, acp.noneOf).map((ruleUrl) => acpData.rules.find((rule) => asIri(rule) === ruleUrl));\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Rules */\r\n    const noneOfRulesHaveOtherActors = noneOfRules.some((rule) => {\r\n        return ruleHasOtherActors(rule, actorRelation, actor);\r\n    });\r\n    return (allOfRulesHaveOtherActors ||\r\n        anyOfRulesHaveOtherActors ||\r\n        noneOfRulesHaveOtherActors);\r\n}\r\nfunction ruleHasOtherActors(rule, actorRelation, actor) {\r\n    const otherActors = [];\r\n    knownActorRelations$1.forEach((knownActorRelation) => {\r\n        const otherActorsWithThisRelation = getIriAll(rule, knownActorRelation).filter((applicableActor) => applicableActor !== actor || knownActorRelation !== actorRelation);\r\n        // Unfortunately Node 10 does not support `.flat()` yet, hence the use of `push`:\r\n        otherActors.push(...otherActorsWithThisRelation);\r\n    });\r\n    return otherActors.length > 0;\r\n}\r\nfunction copyPolicyExcludingActor$1(inputPolicy, resourceWithAcr, acpData, actorRelationToExclude, actorToExclude) {\r\n    const newIriSuffix = \"_copy_without\" +\r\n        `_${encodeURIComponent(actorRelationToExclude)}_${actorToExclude}` +\r\n        `_${Date.now()}_${Math.random()}`;\r\n    // Create new Rules for the Policy, excluding the given Actor\r\n    const newAllOfRules = copyRulesExcludingActor(getIriAll(inputPolicy, acp.allOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newAnyOfRules = copyRulesExcludingActor(getIriAll(inputPolicy, acp.anyOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newNoneOfRules = copyRulesExcludingActor(getIriAll(inputPolicy, acp.noneOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    // Create a new Policy with the new Rules\r\n    let newPolicy = createResourcePolicyFor(resourceWithAcr, encodeURI(asIri(inputPolicy)) + newIriSuffix);\r\n    getIriAll(inputPolicy, acp.allow).forEach((allowMode) => {\r\n        newPolicy = addIri(newPolicy, acp.allow, allowMode);\r\n    });\r\n    getIriAll(inputPolicy, acp.deny).forEach((denyMode) => {\r\n        newPolicy = addIri(newPolicy, acp.deny, denyMode);\r\n    });\r\n    newAllOfRules.forEach((newRule) => {\r\n        newPolicy = addIri(newPolicy, acp.allOf, newRule);\r\n    });\r\n    newAnyOfRules.forEach((newRule) => {\r\n        newPolicy = addIri(newPolicy, acp.anyOf, newRule);\r\n    });\r\n    /* istanbul ignore next Policies listing noneOf Rules are left alone (because they do not unambiguously apply to the given actor always), so there will usually not be any noneOf Rules to copy. */\r\n    newNoneOfRules.forEach((newRule) => {\r\n        newPolicy = addIri(newPolicy, acp.noneOf, newRule);\r\n    });\r\n    return [\r\n        newPolicy,\r\n        newAllOfRules.concat(newAnyOfRules).concat(newNoneOfRules),\r\n    ];\r\n}\r\n/** Creates clones of all the Rules identified by `ruleIris` in `acpData`, excluding the given Actor */\r\nfunction copyRulesExcludingActor(ruleIris, resourceWithAcr, acpData, iriSuffix, actorRelationToExclude, actorToExclude) {\r\n    return ruleIris\r\n        .map((ruleIri) => {\r\n        const rule = acpData.rules.find((rule) => asIri(rule) === ruleIri);\r\n        /* istanbul ignore if: getPoliciesAndRules should already have fetched all referenced Rules, so this should never be true: */\r\n        if (typeof rule === \"undefined\") {\r\n            return null;\r\n        }\r\n        let newRule = createResourceRuleFor(resourceWithAcr, encodeURI(asIri(rule)) + iriSuffix);\r\n        let listsOtherActors = false;\r\n        knownActorRelations$1.forEach((knownActorRelation) => {\r\n            getIriAll(rule, knownActorRelation).forEach((targetActor) => {\r\n                if (knownActorRelation === actorRelationToExclude &&\r\n                    targetActor === actorToExclude) {\r\n                    return;\r\n                }\r\n                listsOtherActors = true;\r\n                newRule = addIri(newRule, knownActorRelation, targetActor);\r\n            });\r\n        });\r\n        return listsOtherActors ? newRule : null;\r\n    })\r\n        .filter(isNotNull$1);\r\n}\r\nfunction isNotNull$1(value) {\r\n    return value !== null;\r\n}\r\nasync function internal_getPoliciesAndRules(resource, options = internal_defaultFetchOptions) {\r\n    const acrPolicyUrls = getAcrPolicyUrlAll$1(resource);\r\n    const policyUrls = getPolicyUrlAll$1(resource);\r\n    const allPolicyResourceUrls = getResourceUrls$1(acrPolicyUrls).concat(getResourceUrls$1(policyUrls));\r\n    const policyResources = await getResources$1(allPolicyResourceUrls, options);\r\n    const acrPolicies = getThingsFromResources$1(acrPolicyUrls, policyResources).filter(isNotNull$1);\r\n    const policies = getThingsFromResources$1(policyUrls, policyResources).filter(isNotNull$1);\r\n    const ruleUrlSet = new Set();\r\n    acrPolicies.forEach((acrPolicy) => {\r\n        const referencedRuleUrls = getReferencedRuleUrls(acrPolicy);\r\n        referencedRuleUrls.forEach((ruleUrl) => {\r\n            ruleUrlSet.add(ruleUrl);\r\n        });\r\n    });\r\n    policies.forEach((policy) => {\r\n        const referencedRuleUrls = getReferencedRuleUrls(policy);\r\n        referencedRuleUrls.forEach((ruleUrl) => {\r\n            ruleUrlSet.add(ruleUrl);\r\n        });\r\n    });\r\n    const ruleUrls = Array.from(ruleUrlSet);\r\n    const ruleResourceUrls = ruleUrls.map((ruleUrl) => getResourceUrl$1(ruleUrl));\r\n    const unfetchedRuleResourceUrls = ruleResourceUrls.filter((ruleResourceUrl) => !allPolicyResourceUrls.includes(ruleResourceUrl));\r\n    const ruleResources = await getResources$1(unfetchedRuleResourceUrls, options);\r\n    const allResources = Object.assign(Object.assign({}, policyResources), ruleResources);\r\n    const rules = getThingsFromResources$1(ruleUrls, allResources).filter(isNotNull$1);\r\n    const inaccessibleUrls = Object.keys(allResources).filter((resourceUrl) => allResources[resourceUrl] === null);\r\n    return {\r\n        inaccessibleUrls: inaccessibleUrls,\r\n        acrPolicies: acrPolicies,\r\n        policies: policies,\r\n        rules: rules,\r\n    };\r\n}\r\nfunction getResourceUrl$1(thingUrl) {\r\n    const thingUrlObject = new URL(thingUrl);\r\n    thingUrlObject.hash = \"\";\r\n    return thingUrlObject.href;\r\n}\r\nfunction getResourceUrls$1(thingUrls) {\r\n    const resourceUrls = [];\r\n    thingUrls.forEach((thingUrl) => {\r\n        const resourceUrl = getResourceUrl$1(thingUrl);\r\n        if (!resourceUrls.includes(resourceUrl)) {\r\n            resourceUrls.push(resourceUrl);\r\n        }\r\n    });\r\n    return resourceUrls;\r\n}\r\nasync function getResources$1(resourceUrls, options) {\r\n    const uniqueResourceUrls = Array.from(new Set(resourceUrls));\r\n    const resources = {};\r\n    await Promise.all(uniqueResourceUrls.map(async (resourceUrl) => {\r\n        try {\r\n            const resource = await getSolidDataset(resourceUrl, options);\r\n            resources[resourceUrl] = resource;\r\n        }\r\n        catch (e) {\r\n            resources[resourceUrl] = null;\r\n        }\r\n    }));\r\n    return resources;\r\n}\r\nfunction getThingsFromResources$1(thingUrls, resources) {\r\n    return thingUrls.map((thingUrl) => {\r\n        const resourceUrl = getResourceUrl$1(thingUrl);\r\n        const resource = resources[resourceUrl];\r\n        if (!resource) {\r\n            return null;\r\n        }\r\n        return getThing(resource, thingUrl);\r\n    });\r\n}\r\nfunction getReferencedRuleUrls(policy) {\r\n    return getAllOfRuleUrlAll(policy)\r\n        .concat(getAnyOfRuleUrlAll(policy))\r\n        .concat(getNoneOfRuleUrlAll(policy));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction universalAccessToAcl(newAccess, previousAccess) {\r\n    var _a, _b, _c, _d;\r\n    // Universal access is aligned on ACP, which means there is a distinction between\r\n    // controlRead and controlWrite. This split doesn't exist in WAC, which is why\r\n    // the type for the input variable of this function is a restriction on the\r\n    // universal Access type.\r\n    if (newAccess.controlRead !== newAccess.controlWrite) {\r\n        throw new Error(\"For Pods using Web Access Control, controlRead and controlWrite must be equal.\");\r\n    }\r\n    return {\r\n        read: (_a = newAccess.read) !== null && _a !== void 0 ? _a : previousAccess.read,\r\n        append: (_b = newAccess.append) !== null && _b !== void 0 ? _b : previousAccess.append,\r\n        write: (_c = newAccess.write) !== null && _c !== void 0 ? _c : previousAccess.write,\r\n        control: (_d = newAccess.controlRead) !== null && _d !== void 0 ? _d : previousAccess.control,\r\n    };\r\n}\r\nfunction aclAccessToUniversal(access) {\r\n    // In ACL, denying access to an actor is a notion that doesn't exist, so an\r\n    // access is either granted or not for a given mode.\r\n    // This creates a misalignment with the ACP notion of an access being granted,\r\n    // denied, or simply not mentioned. Here, we convert the boolean vision of\r\n    // ACL into the boolean or undefined vision of ACP.\r\n    return {\r\n        read: access.read,\r\n        write: access.write,\r\n        append: access.append,\r\n        controlRead: access.control,\r\n        controlWrite: access.control,\r\n    };\r\n}\r\nasync function getActorAccess(resource, actor, accessEvaluationCallback, options) {\r\n    const resourceAcl = await internal_fetchAcl(resource, options);\r\n    const wacAccess = accessEvaluationCallback(internal_setAcl(resource, resourceAcl), actor);\r\n    if (wacAccess === null) {\r\n        return null;\r\n    }\r\n    return aclAccessToUniversal(wacAccess);\r\n}\r\nasync function getActorClassAccess(resource, accessEvaluationCallback, options) {\r\n    const resourceAcl = await internal_fetchAcl(resource, options);\r\n    const wacAccess = accessEvaluationCallback(internal_setAcl(resource, resourceAcl));\r\n    if (wacAccess === null) {\r\n        return null;\r\n    }\r\n    return aclAccessToUniversal(wacAccess);\r\n}\r\nasync function getActorAccessAll(resource, accessEvaluationCallback, options) {\r\n    const resourceAcl = await internal_fetchAcl(resource, options);\r\n    const wacAgentAccess = accessEvaluationCallback(internal_setAcl(resource, resourceAcl));\r\n    if (wacAgentAccess === null) {\r\n        return null;\r\n    }\r\n    const result = {};\r\n    for (const [webId, wacAccess] of Object.entries(wacAgentAccess)) {\r\n        result[webId] = aclAccessToUniversal(wacAccess);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted to the given Agent.\r\n *\r\n * Note that this only lists permissions granted to the given Agent individually,\r\n * and will not exhaustively list modes the given Agent may have access to because\r\n * they apply to everyone, or because they apply to the Agent through a group for\r\n * instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Access\r\n * @param agent The Agent for which the Access is granted\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\r\n */\r\nfunction getAgentAccess$4(resource, agent, options = internal_defaultFetchOptions) {\r\n    return getActorAccess(resource, agent, getAgentAccess$5, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted to the given Group.\r\n *\r\n * Note that this only lists permissions granted to the given Group individually,\r\n * and will not exhaustively list modes the given Group may have access to because\r\n * they apply to everyone, or because they apply to the Group through another\r\n * Group that may contain it for instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Access\r\n * @param group The Group for which the Access is granted\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns What Access modes are granted to the given Group explicitly, or null if it could not be determined.\r\n */\r\nfunction getGroupAccess$1(resource, group, options = internal_defaultFetchOptions) {\r\n    return getActorAccess(resource, group, getGroupAccess$2, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted to everyone.\r\n *\r\n * Note that this only lists permissions explicitly granted to everyone as a whole,\r\n * and will not exhaustively list modes any individual Agent or Group may have\r\n * access to because they specifically apply to them only.\r\n *\r\n * @param resource The URL of the Resource for which we want to list public Access\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns What Access modes are granted to the everyone explicitly, or null if it could not be determined.\r\n */\r\nfunction getPublicAccess$4(resource, options = internal_defaultFetchOptions) {\r\n    return getActorClassAccess(resource, getPublicAccess$5, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted explicitly to each individual Agent.\r\n *\r\n * Note that this only lists permissions granted to each Agent individually,\r\n * and will not exhaustively list modes any Agent may have access to because\r\n * they apply to everyone, or because they apply to an Agent through a group for\r\n * instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Agents Access\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A map of Agent WebIDs and the access granted to them, or null if it could not be determined.\r\n */\r\nfunction getAgentAccessAll$4(resource, options = internal_defaultFetchOptions) {\r\n    return getActorAccessAll(resource, getAgentAccessAll$5, options);\r\n}\r\n/**\r\n * For a given Resource, look up its metadata, and read the Access permissions\r\n * granted explicitly to each individual Group.\r\n *\r\n * Note that this only lists permissions granted to each Group individually,\r\n * and will not exhaustively list modes any Group may have access to because\r\n * they apply individually to all of the Agents in the Group, or to everyone\r\n * for instance.\r\n *\r\n * @param resource The URL of the Resource for which we want to list Agents Access\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A map of Group URLs and the access granted to them, or null if it could not be determined.\r\n */\r\nfunction getGroupAccessAll$1(resource, options = internal_defaultFetchOptions) {\r\n    return getActorAccessAll(resource, getGroupAccessAll$2, options);\r\n}\r\nasync function prepareResourceAcl(resource, options) {\r\n    if (!hasAccessibleAcl(resource)) {\r\n        return null;\r\n    }\r\n    const acl = await internal_fetchAcl(resource, options);\r\n    const resourceWithAcl = internal_setAcl(resource, acl);\r\n    let resourceAcl;\r\n    if (hasResourceAcl(resourceWithAcl)) {\r\n        // This is the simple case, where the Resource ACL we need to update already\r\n        // exists.\r\n        resourceAcl = internal_getResourceAcl(resourceWithAcl);\r\n    }\r\n    else if (hasFallbackAcl(resourceWithAcl)) {\r\n        // In this case, the Resource ACL needs to be created first, and then updated.\r\n        resourceAcl = createAclFromFallbackAcl(resourceWithAcl);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n    return internal_setResourceAcl(resourceWithAcl, resourceAcl);\r\n}\r\nasync function saveUpdatedAcl(resource, acl, options) {\r\n    let savedAcl = null;\r\n    try {\r\n        savedAcl = await saveAclFor(resource, acl, options);\r\n        return internal_setResourceAcl(resource, savedAcl);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\nasync function setActorClassAccess(resource, access, getAccess, setAccess, options) {\r\n    const resourceWithOldAcl = await prepareResourceAcl(resource, options);\r\n    if (resourceWithOldAcl === null) {\r\n        return null;\r\n    }\r\n    const resourceAcl = getResourceAcl(resourceWithOldAcl);\r\n    const currentAccess = getAccess(resourceWithOldAcl);\r\n    const wacAccess = universalAccessToAcl(access, currentAccess);\r\n    const updatedResourceAcl = setAccess(resourceAcl, wacAccess);\r\n    return await saveUpdatedAcl(resourceWithOldAcl, updatedResourceAcl, options);\r\n}\r\nasync function setActorAccess(resource, actor, access, getAccess, setAccess, options) {\r\n    const resourceWithOldAcl = await prepareResourceAcl(resource, options);\r\n    if (resourceWithOldAcl === null) {\r\n        return null;\r\n    }\r\n    const currentAccess = getAccess(resourceWithOldAcl, actor);\r\n    const resourceAcl = getResourceAcl(resourceWithOldAcl);\r\n    const wacAccess = universalAccessToAcl(access, currentAccess);\r\n    const updatedResourceAcl = setAccess(resourceAcl, actor, wacAccess);\r\n    return await saveUpdatedAcl(resourceWithOldAcl, updatedResourceAcl, options);\r\n}\r\n/**\r\n * Set the Access modes for a given Agent to a given Resource.\r\n *\r\n * Important note: if the target resource did not have a Resource ACL, and its\r\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\r\n * a new Resource ACL. This has the side effect that the next time the Fallback\r\n * ACL is updated, the changes _will not impact_ the target resource.\r\n *\r\n * If the target Resource's Access mode cannot be determined, e.g. the user does\r\n * not have Read and Write access to the target Resource's ACL, or to its\r\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\r\n *\r\n * @param resource The Resource for which Access is being set\r\n * @param agent The Agent for whom Access is being set\r\n * @param access The Access being set\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns The Resource, with its ACL updated, or null if the new Access could not\r\n * be set.\r\n */\r\nasync function setAgentResourceAccess(resource, agent, access, options = internal_defaultFetchOptions) {\r\n    return await setActorAccess(resource, agent, access, getAgentAccess$5, setAgentResourceAccess$1, options);\r\n}\r\n/**\r\n * Set the Access modes for a given Group to a given Resource.\r\n *\r\n * Important note: if the target resource did not have a Resource ACL, and its\r\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\r\n * a new Resource ACL. This has the side effect that the next time the Fallback\r\n * ACL is updated, the changes _will not impact_ the target resource.\r\n *\r\n * If the target Resource's Access mode cannot be determined, e.g. the user does\r\n * not have Read and Write access to the target Resource's ACL, or to its\r\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\r\n *\r\n * @param resource The Resource for which Access is being set\r\n * @param agent The Group for which Access is being set\r\n * @param access The Access being set\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns The Resource, with its ACL updated, or null if the new Access could not\r\n * be set.\r\n */\r\nasync function setGroupResourceAccess(resource, group, access, options = internal_defaultFetchOptions) {\r\n    return await setActorAccess(resource, group, access, getGroupAccess$2, setGroupResourceAccess$1, options);\r\n}\r\n/**\r\n * Set the Access modes for everyone to a given Resource.\r\n *\r\n * Important note: if the target resource did not have a Resource ACL, and its\r\n * Access was regulated by its Fallback ACL, said Fallback ACL is copied to create\r\n * a new Resource ACL. This has the side effect that the next time the Fallback\r\n * ACL is updated, the changes _will not impact_ the target resource.\r\n *\r\n * If the target Resource's Access mode cannot be determined, e.g. the user does\r\n * not have Read and Write access to the target Resource's ACL, or to its\r\n * fallback ACL if it does not have a Resource ACL, then `null` is returned.\r\n *\r\n * @param resource The Resource for which Access is being set\r\n * @param access The Access being set\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns The Resource, with its ACL updated, or null if the new Access could not\r\n * be set.\r\n */\r\nasync function setPublicResourceAccess(resource, access, options = internal_defaultFetchOptions) {\r\n    return await setActorClassAccess(resource, access, getPublicAccess$5, setPublicResourceAccess$1, options);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nvar universal = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAccessFor: getAccessFor,\n  getAccessForAll: getAccessForAll,\n  setAccessFor: setAccessFor,\n  getAgentAccess: getAgentAccess$3,\n  setAgentAccess: setAgentAccess$3,\n  getAgentAccessAll: getAgentAccessAll$3,\n  getGroupAccess: getGroupAccess,\n  getGroupAccessAll: getGroupAccessAll,\n  setGroupAccess: setGroupAccess,\n  getPublicAccess: getPublicAccess$3,\n  setPublicAccess: setPublicAccess$3\n});\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nasync function getAccessFor(resourceUrl, actorType, actor = internal_defaultFetchOptions, options = internal_defaultFetchOptions) {\r\n    if (actorType === \"agent\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When reading Agent-specific access, the given agent cannot be left undefined.\");\r\n        }\r\n        return await getAgentAccess$3(resourceUrl, actor, options);\r\n    }\r\n    if (actorType === \"group\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When reading Group-specific access, the given group cannot be left undefined.\");\r\n        }\r\n        return await getGroupAccess(resourceUrl, actor, options);\r\n    }\r\n    if (actorType === \"public\") {\r\n        if (typeof actor === \"string\") {\r\n            throw new Error(`When reading public access, no actor type should be specified (here [${actor}]).`);\r\n        }\r\n        return await getPublicAccess$3(resourceUrl, actor);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given set of actors: all Agents\r\n * or all Groups.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given actor (Agent\r\n *   or Group). If additional restrictions are set up to apply to the given Agent\r\n *   in a particular situation, those will not be reflected in the return value\r\n *   of this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param actorType type of actor whose access is being read.\r\n * @returns What access is set for the given resource, grouped by resp. Agent or Group.\r\n * @since 1.5.0\r\n *\r\n * @hidden\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function getAccessForAll(resourceUrl, actorType, options = internal_defaultFetchOptions) {\r\n    if (actorType === \"agent\") {\r\n        return await getAgentAccessAll$3(resourceUrl, options);\r\n    }\r\n    if (actorType === \"group\") {\r\n        return await getGroupAccessAll(resourceUrl, options);\r\n    }\r\n    return null;\r\n}\r\nasync function setAccessFor(resourceUrl, actorType, access, actor = internal_defaultFetchOptions, options = internal_defaultFetchOptions) {\r\n    if (actorType === \"agent\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When writing Agent-specific access, the given agent cannot be left undefined.\");\r\n        }\r\n        return await setAgentAccess$3(resourceUrl, actor, access, options);\r\n    }\r\n    if (actorType === \"group\") {\r\n        if (typeof actor !== \"string\") {\r\n            throw new Error(\"When writing Group-specific access, the given group cannot be left undefined.\");\r\n        }\r\n        return await setGroupAccess(resourceUrl, actor, access, options);\r\n    }\r\n    if (actorType === \"public\") {\r\n        if (typeof actor === \"string\") {\r\n            throw new Error(`When writing public access, no actor type should be specified (here [${actor}]).`);\r\n        }\r\n        return await setPublicAccess$3(resourceUrl, access, actor);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for a given Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given Agent. If\r\n *   additional restrictions are set up to apply to the given Agent in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function getAgentAccess$3(resourceUrl, webId, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getAgentAccess$1(acpData, webId);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccess$4(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for the given Agent. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Agent has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change the Agent's access to.\r\n * @param webId WebID of the Agent you want to set access for.\r\n * @param access What access permissions you want to set for the given Agent to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for the given Agent explicitly.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function setAgentAccess$3(resourceUrl, webId, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        const updatedResource = internal_setAgentAccess$1(resourceInfo, acpData, webId, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return await getAgentAccess$3(resourceUrl, webId, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setAgentResourceAccess(resourceInfo, webId, wacAccess, options);\r\n        return await getAgentAccess$4(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for all Agents with respect to a given\r\n * Resource.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the returned Agents. If\r\n *   additional restrictions are set up to apply to the listed Agents in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @returns The access information to the Resource, grouped by Agent.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function getAgentAccessAll$3(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getAgentAccessAll$1(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccessAll$4(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Group.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given Group. If\r\n *   additional restrictions are set up to apply to the given Group in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Group you want to get the access for.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function getGroupAccess(resourceUrl, webId, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getGroupAccess(acpData, webId);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getGroupAccess$1(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for all Groups with respect to a given\r\n * Resource.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the returned Groups. If\r\n *   additional restrictions are set up to apply to the listed Groups in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @returns The access information to the Resource, sorted by Group.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function getGroupAccessAll(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getGroupAccessAll(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getGroupAccessAll$1(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Group.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for the given Group. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Group has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change the Group's access to.\r\n * @param groupUrl URL of the Group you want to set access for.\r\n * @param access What access permissions you want to set for the given Group to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for the given Group explicitly.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Access Control Policies will no longer support vcard:Group. Use the mechanism-specific access API's if you want to define access for groups of people.\r\n */\r\nasync function setGroupAccess(resourceUrl, groupUrl, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        const updatedResource = internal_setGroupAccess(resourceInfo, acpData, groupUrl, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return getGroupAccess(resourceUrl, groupUrl, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setGroupResourceAccess(resourceInfo, groupUrl, wacAccess, options);\r\n        return await getGroupAccess$1(resourceInfo, groupUrl, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for everyone.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for everyone. If\r\n *   additional restrictions are set up to apply to users in a particular\r\n *   situation, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @since 1.5.0\r\n *\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function getPublicAccess$3(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        return internal_getPublicAccess$1(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getPublicAccess$4(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for everybody. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access a user has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change public access to.\r\n * @param access What access permissions you want to set for everybody to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for everybody explicitly.\r\n * @since 1.5.0\r\n *\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function setPublicAccess$3(resourceUrl, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndRules(resourceInfo, options);\r\n        const updatedResource = internal_setPublicAccess$1(resourceInfo, acpData, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return getPublicAccess$3(resourceUrl, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setPublicResourceAccess(resourceInfo, wacAccess, options);\r\n        return await getPublicAccess$4(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\n\nvar universal_v1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAgentAccess: getAgentAccess$3,\n  setAgentAccess: setAgentAccess$3,\n  getAgentAccessAll: getAgentAccessAll$3,\n  getGroupAccess: getGroupAccess,\n  getGroupAccessAll: getGroupAccessAll,\n  setGroupAccess: setGroupAccess,\n  getPublicAccess: getPublicAccess$3,\n  setPublicAccess: setPublicAccess$3,\n  getAccessFor: getAccessFor,\n  getAccessForAll: getAccessForAll,\n  setAccessFor: setAccessFor\n});\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst knownActorRelations = [acp.agent];\r\n/**\r\n * Get an overview of what access is defined for a given actor in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this actor.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given actor, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setActorAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent) you want to get the access for.\r\n * @param actor Which instance of the given actor type you want to get the access for.\r\n * @returns What Access modes are granted to the given actor explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getActorAccess(acpData, actorRelation, actor) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access the given actor has:\r\n        return null;\r\n    }\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    const initialAccess = {\r\n        read: false,\r\n        append: false,\r\n        write: false,\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n    // All allowed reading and writing defined in ACR policies\r\n    // determines whether the `controlRead` and `controlWrite` statuses are `true`.\r\n    const allowedAcrAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV2(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.controlRead = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.controlWrite = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, initialAccess);\r\n    // Then allowed reading, appending and writing in regular policies\r\n    // determines whether the respective status is `true`.\r\n    const withAllowedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allAllowedAccess = Object.assign({}, acc);\r\n        const allowModes = getAllowModesV2(policy);\r\n        if (allowModes.read) {\r\n            allAllowedAccess.read = true;\r\n        }\r\n        if (allowModes.append) {\r\n            allAllowedAccess.append = true;\r\n        }\r\n        if (allowModes.write) {\r\n            allAllowedAccess.write = true;\r\n        }\r\n        return allAllowedAccess;\r\n    }, allowedAcrAccess);\r\n    // At this point, everything that has been explicitly allowed is true.\r\n    // However, it could still be overridden by access that is explicitly denied.\r\n    // Starting with `controlRead` and `controlWrite`,\r\n    // by inspecting denied reading and writing defined in the ACR policies.\r\n    const withAcrDeniedAccess = applicableAcrPolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV2(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.controlRead = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.controlWrite = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAllowedAccess);\r\n    // And finally, we set to `false` those access modes that are explicitly denied\r\n    // in the regular policies:\r\n    const withDeniedAccess = applicablePolicies.reduce((acc, policy) => {\r\n        const allDeniedAccess = Object.assign({}, acc);\r\n        const denyModes = getDenyModesV2(policy);\r\n        if (denyModes.read === true) {\r\n            allDeniedAccess.read = false;\r\n        }\r\n        if (denyModes.append === true) {\r\n            allDeniedAccess.append = false;\r\n        }\r\n        if (denyModes.write === true) {\r\n            allDeniedAccess.write = false;\r\n        }\r\n        return allDeniedAccess;\r\n    }, withAcrDeniedAccess);\r\n    return withDeniedAccess;\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Agent in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to this Agent.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to the given Agent, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @returns What Access modes are granted to the given Agent explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getAgentAccess(acpData, webId) {\r\n    return internal_getActorAccess(acpData, acp.agent, webId);\r\n}\r\n/**\r\n * Get an overview of what access is defined for everybody in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to everybody.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to everybody, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setPublicAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @returns What Access modes are granted to everyone explicitly, or null if it could not be determined.\r\n */\r\nfunction internal_getPublicAccess(acpData) {\r\n    return internal_getActorAccess(acpData, acp.agent, acp.PublicAgent);\r\n}\r\nfunction policyAppliesTo(policy, actorRelation, actor, acpData) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    if (allowModes.length + denyModes.length === 0) {\r\n        // A Policy that does not specify access modes does not do anything:\r\n        return false;\r\n    }\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyAppliesTo` should already have validated that\r\n    //       the return value of internal_getPoliciesAndMatchers() did not have any\r\n    //       inaccessible URLs, so we should be able to find every Matcher.\r\n    const allOfMatchers = getAllOfMatcherUrlAll(policy).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const anyOfMatchers = getAnyOfMatcherUrlAll(policy).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const noneOfMatchers = getNoneOfMatcherUrlAll(policy).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    // We assume that this Policy applies if this specific actor is mentioned\r\n    // and no further restrictions are in place.\r\n    // (In other words, the Policy may apply to others *in addition to* this\r\n    // actor, but if it applies to this actor *unless* some other condition holds,\r\n    // we cannot be sure whether it will apply to this actor.)\r\n    // This means that:\r\n    return (\r\n    // Every existing allOf Matcher explicitly applies explicitly to this given actor:\r\n    allOfMatchers.every((matcher) => matcherAppliesTo(matcher, actorRelation, actor)) &&\r\n        // If there are anyOf Matchers, at least one applies explicitly to this actor:\r\n        (anyOfMatchers.length === 0 ||\r\n            anyOfMatchers.some((matcher) => matcherAppliesTo(matcher, actorRelation, actor))) &&\r\n        // There is at least one allOf or anyOf Matcher:\r\n        allOfMatchers.length + anyOfMatchers.length > 0 &&\r\n        // No further restrictions are in place that make this sometimes not apply\r\n        // to the given actor:\r\n        noneOfMatchers.length === 0);\r\n}\r\nfunction policyConflictsWith(policy, otherAccess) {\r\n    const allowModes = getIriAll(policy, acp.allow);\r\n    const denyModes = getIriAll(policy, acp.deny);\r\n    return ((otherAccess.read === true &&\r\n        denyModes.includes(internal_accessModeIriStrings.read)) ||\r\n        (otherAccess.read === false &&\r\n            allowModes.includes(internal_accessModeIriStrings.read) &&\r\n            !denyModes.includes(internal_accessModeIriStrings.read)) ||\r\n        (otherAccess.append === true &&\r\n            denyModes.includes(internal_accessModeIriStrings.append)) ||\r\n        (otherAccess.append === false &&\r\n            allowModes.includes(internal_accessModeIriStrings.append) &&\r\n            !denyModes.includes(internal_accessModeIriStrings.append)) ||\r\n        (otherAccess.write === true &&\r\n            denyModes.includes(internal_accessModeIriStrings.write)) ||\r\n        (otherAccess.write === false &&\r\n            allowModes.includes(internal_accessModeIriStrings.write) &&\r\n            !denyModes.includes(internal_accessModeIriStrings.write)));\r\n}\r\nfunction matcherAppliesTo(matcher, actorRelation, actor) {\r\n    return getIriAll(matcher, actorRelation).includes(actor);\r\n}\r\n/**\r\n * Get a set of all actors mentioned in an ACR by active Matchers (i.e. that are\r\n * referenced by Policies referenced by the ACR Control, and therefore that\r\n * effectively apply).\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation\r\n */\r\nfunction internal_findActorAll(acpData, actorRelation) {\r\n    const actors = new Set();\r\n    // This code could be prettier using flat(), which isn't supported by nodeJS 10.\r\n    // If you read this comment after April 2021, feel free to refactor.\r\n    acpData.matchers.forEach((matcher) => {\r\n        getIriAll(matcher, actorRelation)\r\n            .filter((iri) => ![\r\n            acp.PublicAgent,\r\n            acp.CreatorAgent,\r\n            acp.AuthenticatedAgent,\r\n        ].includes(iri) || actorRelation != acp.agent)\r\n            .forEach((iri) => actors.add(iri));\r\n    });\r\n    return actors;\r\n}\r\n/**\r\n * Iterate through all the actors active for an ACR, and list all of their access.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation The type of actor we want to list access for\r\n * @returns A map with each actor access indexed by their URL, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getActorAccessAll(acpData, actorRelation) {\r\n    if (acpData.inaccessibleUrls.length > 0) {\r\n        // If we can't see all access data,\r\n        // we can't reliably determine what access actors of the given type have:\r\n        return null;\r\n    }\r\n    const result = {};\r\n    const actors = internal_findActorAll(acpData, actorRelation);\r\n    actors.forEach((iri) => {\r\n        // The type assertion holds, because if internal_getActorAccess were null,\r\n        // we would have returned {} already.\r\n        const access = internal_getActorAccess(acpData, actorRelation, iri);\r\n        result[iri] = access;\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Get an overview of what access are defined for all Agents in a Resource's Access Control Resource.\r\n *\r\n * This will only return a value if all relevant access is defined in just the Resource's Access\r\n * Control Resource; in other words, if an Access Policy or Access Matcher applies that is re-used for\r\n * other Resources, this function will not be able to determine the access relevant to the mentionned\r\n * Agents.\r\n *\r\n * Additionally, this only considers access given _explicitly_ to individual Agents, i.e. without\r\n * additional conditions.\r\n *\r\n * In other words, this function will generally understand and return the access as set by\r\n * [[internal_setAgentAccess]], but not understand more convoluted Policies.\r\n *\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @returns A map with each Agent's access indexed by their WebID, or null if some\r\n * external policies are referenced.\r\n */\r\nfunction internal_getAgentAccessAll(acpData) {\r\n    return internal_getActorAccessAll(acpData, acp.agent);\r\n}\r\n/**\r\n * Set access to a Resource for a specific actor.\r\n *\r\n * This function adds the relevant Access Control Policies and Matchers to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * actor specifically. In other words, it can, for example, add Policies that\r\n * give the general Public Read access to the Resource. However, if other\r\n * Policies specify that everyone is *denied* Read access *except* for a\r\n * particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for an agent matching the given actor.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Matchers\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param actorRelation What type of actor (e.g. acp:agent) you want to set the access for.\r\n * @param actor Which instance of the given actor type you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given actor. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setActorAccess(resource, acpData, actorRelation, actor, access) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (!hasAccessibleAcr(resource) || acpData.inaccessibleUrls.length > 0) {\r\n        return null;\r\n    }\r\n    // Get the access that currently applies to the given actor\r\n    const existingAccess = internal_getActorAccess(acpData, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that above. */\r\n    if (existingAccess === null) {\r\n        return null;\r\n    }\r\n    // Get all Policies that apply specifically to the given actor\r\n    const applicableAcrPolicies = acpData.acrPolicies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    const applicablePolicies = acpData.policies.filter((policy) => policyAppliesTo(policy, actorRelation, actor, acpData));\r\n    // We only need to override Policies that define access other than what we want:\r\n    const conflictingAcrPolicies = applicableAcrPolicies.filter((policy) => policyConflictsWith(policy, {\r\n        read: access.controlRead,\r\n        write: access.controlWrite,\r\n    }));\r\n    const conflictingPolicies = applicablePolicies.filter((policy) => policyConflictsWith(policy, {\r\n        read: access.read,\r\n        append: access.append,\r\n        write: access.write,\r\n    }));\r\n    // For every Policy that applies specifically to the given Actor, but _also_\r\n    // to another actor (i.e. that applies using an anyOf Matcher, or a Matcher that\r\n    // mentions both the given and another actor)...\r\n    const otherActorAcrPolicies = conflictingAcrPolicies.filter((acrPolicy) => policyHasOtherActors(acrPolicy, actorRelation, actor, acpData));\r\n    const otherActorPolicies = conflictingPolicies.filter((policy) => policyHasOtherActors(policy, actorRelation, actor, acpData));\r\n    // ...check what access the current actor would have if we removed them...\r\n    const acpDataWithPoliciesExcluded = Object.assign(Object.assign({}, acpData), { acrPolicies: acpData.acrPolicies.filter((acrPolicy) => !otherActorAcrPolicies.includes(acrPolicy)), policies: acpData.policies.filter((policy) => !otherActorPolicies.includes(policy)) });\r\n    const remainingAccess = internal_getActorAccess(acpDataWithPoliciesExcluded, actorRelation, actor);\r\n    /* istanbul ignore if: It returns null if the ACR has inaccessible Policies, which should happen since we already check for that at the start. */\r\n    if (remainingAccess === null) {\r\n        return null;\r\n    }\r\n    // ...add copies of those Policies and their Matchers, but excluding the given actor...\r\n    let updatedResource = resource;\r\n    otherActorAcrPolicies.forEach((acrPolicy) => {\r\n        const [policyCopy, matcherCopies] = copyPolicyExcludingActor(acrPolicy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, policyCopy);\r\n        updatedResource = matcherCopies.reduce(setResourceMatcher, updatedResource);\r\n    });\r\n    otherActorPolicies.forEach((policy) => {\r\n        const [policyCopy, matcherCopies] = copyPolicyExcludingActor(policy, resource, acpData, actorRelation, actor);\r\n        updatedResource = setResourcePolicy$1(updatedResource, policyCopy);\r\n        updatedResource = matcherCopies.reduce(setResourceMatcher, updatedResource);\r\n    });\r\n    // ...add a new Policy that applies the given access,\r\n    // and the previously applying access for access modes that were undefined...\r\n    const newMatcherName = `matcher_${encodeURIComponent(`${actorRelation}_${actor}`)}`;\r\n    let newMatcher = createResourceMatcherFor(resource, newMatcherName);\r\n    newMatcher = setIri(newMatcher, actorRelation, actor);\r\n    const newControlReadAccess = (_a = access.controlRead) !== null && _a !== void 0 ? _a : existingAccess.controlRead;\r\n    const newControlWriteAccess = (_b = access.controlWrite) !== null && _b !== void 0 ? _b : existingAccess.controlWrite;\r\n    let acrPoliciesToUnapply = otherActorAcrPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newControlReadAccess !== remainingAccess.controlRead ||\r\n        newControlWriteAccess !== remainingAccess.controlWrite) {\r\n        const newAcrPolicyName = `acr_policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newAcrPolicy = createResourcePolicyFor(resource, newAcrPolicyName);\r\n        newAcrPolicy = setAllowModesV2(newAcrPolicy, {\r\n            read: newControlReadAccess === true,\r\n            append: false,\r\n            write: newControlWriteAccess === true,\r\n        });\r\n        newAcrPolicy = addIri(newAcrPolicy, acp.allOf, newMatcher);\r\n        updatedResource = setResourceAcrPolicy(updatedResource, newAcrPolicy);\r\n        updatedResource = setResourceMatcher(updatedResource, newMatcher);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // ACR Policies that applied to both the given actor and other actors\r\n        // (because they have been replaced by clones not mentioning the given\r\n        // actor). Hence `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        acrPoliciesToUnapply = conflictingAcrPolicies;\r\n    }\r\n    const newReadAccess = (_c = access.read) !== null && _c !== void 0 ? _c : existingAccess.read;\r\n    const newAppendAccess = (_d = access.append) !== null && _d !== void 0 ? _d : existingAccess.append;\r\n    const newWriteAccess = (_e = access.write) !== null && _e !== void 0 ? _e : existingAccess.write;\r\n    let policiesToUnapply = otherActorPolicies;\r\n    // Only replace existing Policies if the defined access actually changes:\r\n    if (newReadAccess !== remainingAccess.read ||\r\n        newAppendAccess !== remainingAccess.append ||\r\n        newWriteAccess !== remainingAccess.write) {\r\n        const newPolicyName = `policy` +\r\n            `_${encodeURIComponent(`${actorRelation}_${actor}`)}` +\r\n            `_${Date.now()}_${Math.random()}`;\r\n        let newPolicy = createResourcePolicyFor(resource, newPolicyName);\r\n        newPolicy = setAllowModesV2(newPolicy, {\r\n            read: newReadAccess === true,\r\n            append: newAppendAccess === true,\r\n            write: newWriteAccess === true,\r\n        });\r\n        newPolicy = addIri(newPolicy, acp.allOf, newMatcher);\r\n        updatedResource = setResourcePolicy$1(updatedResource, newPolicy);\r\n        updatedResource = setResourceMatcher(updatedResource, newMatcher);\r\n        // If we don't have to set new access, we only need to unapply the\r\n        // Policies that applied to both the given actor and other actors (because\r\n        // they have been replaced by clones not mentioning the given actor). Hence\r\n        // `policiesToUnApply` is initialised to `otherActorPolicies`.\r\n        // However, if we're in this if branch, that means we also had to replace\r\n        // Policies that defined access for just this actor, so we'll have to remove\r\n        // all Policies mentioning this actor:\r\n        policiesToUnapply = conflictingPolicies;\r\n    }\r\n    // ...then remove existing Policy URLs that mentioned both the given actor\r\n    // and other actors from the given Resource and apply the new ones (but do not\r\n    // remove the actual old Policies - they might still apply to other Resources!).\r\n    acrPoliciesToUnapply.forEach((previouslyApplicableAcrPolicy) => {\r\n        updatedResource = removeAcrPolicyUrl$1(updatedResource, asIri(previouslyApplicableAcrPolicy));\r\n    });\r\n    policiesToUnapply.forEach((previouslyApplicablePolicy) => {\r\n        updatedResource = removePolicyUrl$1(updatedResource, asIri(previouslyApplicablePolicy));\r\n    });\r\n    return updatedResource;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function adds the relevant Access Control Policies and Matchers to a\r\n * Resource's Access Control Resource to define the given access for the given\r\n * Agent specifically. In other words, it can, for example, add Policies that\r\n * give a particular Agent Read access to the Resource. However, if other\r\n * Policies specify that that Agent is *denied* Read access *except* if they\r\n * match on some other characteristic, then that will be left intact.\r\n * This means that, unless *only* this function is used to manipulate access to\r\n * this Resource, the set access might not be equal to the effective access for\r\n * the given Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Matchers\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param webId Which Agent you want to set the access for.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for the given Agent. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setAgentAccess(resource, acpData, webId, access) {\r\n    return internal_setActorAccess(resource, acpData, acp.agent, webId, access);\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function adds the relevant Access Control Policies and Matchers to a\r\n * Resource's Access Control Resource to define the given access for everybody\r\n * specifically. In other words, it can, for example, add Policies that\r\n * give everybody Read access to the Resource. However, if other\r\n * Policies specify that everybody is *denied* Read access *except* if they're\r\n * a particular Agent, then that will be left intact.\r\n * This means that, unless *only* this module's functions are used to manipulate\r\n * access to this Resource, the set access might not be equal to the effective\r\n * access for a particular Agent.\r\n *\r\n * There are a number of preconditions that have to be fulfilled for this\r\n * function to work:\r\n * - Access to the Resource is determined via an Access Control Resource.\r\n * - The Resource's Access Control Resource does not refer to (Policies or Matchers\r\n *   in) other Resources.\r\n * - The current user has access to the Resource's Access Control Resource.\r\n *\r\n * If those conditions do not hold, this function will return `null`.\r\n *\r\n * Additionally, take note that the given access will only be applied to the\r\n * given Resource; if that Resource is a Container, access will have to be set\r\n * for its contained Resources independently.\r\n *\r\n * @param resource Resource that was fetched together with its linked Access Control Resource.\r\n * @param acpData All Access Control Policies and Matchers that apply to a particular Resource.\r\n * @param access What access (read, append, write, controlRead, controlWrite) to set for everybody. `true` to allow, `false` to deny, and `undefined` to leave unchanged.\r\n * @returns The Resource with the updated Access Control Resource attached, if updated successfully, or `null` if not.\r\n */\r\nfunction internal_setPublicAccess(resource, acpData, access) {\r\n    return internal_setActorAccess(resource, acpData, acp.agent, acp.PublicAgent, access);\r\n}\r\nfunction policyHasOtherActors(policy, actorRelation, actor, acpData) {\r\n    // Note: the non-null assertions (`!`) here should be valid because\r\n    //       the caller of `policyHasOtherActors` should already have validated\r\n    //       that the return value of internal_getPoliciesAndMatchers() did not have\r\n    //       any inaccessible URLs, so we should be able to find every Matcher.\r\n    const allOfMatchers = getIriAll(policy, acp.allOf).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const allOfMatchersHaveOtherActors = allOfMatchers.some((matcher) => {\r\n        return matcherHasOtherActors(matcher, actorRelation, actor);\r\n    });\r\n    const anyOfMatchers = getIriAll(policy, acp.anyOf).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    const anyOfMatchersHaveOtherActors = anyOfMatchers.some((matcher) => {\r\n        return matcherHasOtherActors(matcher, actorRelation, actor);\r\n    });\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Matchers */\r\n    const noneOfMatchers = getIriAll(policy, acp.noneOf).map((matcherUrl) => acpData.matchers.find((matcher) => asIri(matcher) === matcherUrl));\r\n    /* istanbul ignore next This function only gets called after policyAppliesTo, which already filters out all noneOf Matchers */\r\n    const noneOfMatchersHaveOtherActors = noneOfMatchers.some((matcher) => {\r\n        return matcherHasOtherActors(matcher, actorRelation, actor);\r\n    });\r\n    return (allOfMatchersHaveOtherActors ||\r\n        anyOfMatchersHaveOtherActors ||\r\n        noneOfMatchersHaveOtherActors);\r\n}\r\nfunction matcherHasOtherActors(matcher, actorRelation, actor) {\r\n    const otherActors = [];\r\n    knownActorRelations.forEach((knownActorRelation) => {\r\n        const otherActorsWithThisRelation = getIriAll(matcher, knownActorRelation).filter((applicableActor) => applicableActor !== actor || knownActorRelation !== actorRelation);\r\n        // Unfortunately Node 10 does not support `.flat()` yet, hence the use of `push`:\r\n        otherActors.push(...otherActorsWithThisRelation);\r\n    });\r\n    return otherActors.length > 0;\r\n}\r\nfunction copyPolicyExcludingActor(inputPolicy, resourceWithAcr, acpData, actorRelationToExclude, actorToExclude) {\r\n    const newIriSuffix = \"_copy_without\" +\r\n        `_${encodeURIComponent(actorRelationToExclude)}_${actorToExclude}` +\r\n        `_${Date.now()}_${Math.random()}`;\r\n    // Create new Matchers for the Policy, excluding the given Actor\r\n    const newAllOfMatchers = copyMatchersExcludingActor(getIriAll(inputPolicy, acp.allOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newAnyOfMatchers = copyMatchersExcludingActor(getIriAll(inputPolicy, acp.anyOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    const newNoneOfMatchers = copyMatchersExcludingActor(getIriAll(inputPolicy, acp.noneOf), resourceWithAcr, acpData, newIriSuffix, actorRelationToExclude, actorToExclude);\r\n    // Create a new Policy with the new Matchers\r\n    let newPolicy = createResourcePolicyFor(resourceWithAcr, encodeURI(asIri(inputPolicy)) + newIriSuffix);\r\n    getIriAll(inputPolicy, acp.allow).forEach((allowMode) => {\r\n        newPolicy = addIri(newPolicy, acp.allow, allowMode);\r\n    });\r\n    getIriAll(inputPolicy, acp.deny).forEach((denyMode) => {\r\n        newPolicy = addIri(newPolicy, acp.deny, denyMode);\r\n    });\r\n    newAllOfMatchers.forEach((newMatcher) => {\r\n        newPolicy = addIri(newPolicy, acp.allOf, newMatcher);\r\n    });\r\n    newAnyOfMatchers.forEach((newMatcher) => {\r\n        newPolicy = addIri(newPolicy, acp.anyOf, newMatcher);\r\n    });\r\n    /* istanbul ignore next Policies listing noneOf Matchers are left alone (because they do not unambiguously apply to the given actor always), so there will usually not be any noneOf Matchers to copy. */\r\n    newNoneOfMatchers.forEach((newMatcher) => {\r\n        newPolicy = addIri(newPolicy, acp.noneOf, newMatcher);\r\n    });\r\n    return [\r\n        newPolicy,\r\n        newAllOfMatchers.concat(newAnyOfMatchers).concat(newNoneOfMatchers),\r\n    ];\r\n}\r\n/** Creates clones of all the Matchers identified by `matcherIris` in `acpData`, excluding the given Actor */\r\nfunction copyMatchersExcludingActor(matcherIris, resourceWithAcr, acpData, iriSuffix, actorRelationToExclude, actorToExclude) {\r\n    return matcherIris\r\n        .map((matcherIri) => {\r\n        const matcher = acpData.matchers.find((matcher) => asIri(matcher) === matcherIri);\r\n        /* istanbul ignore if: getPoliciesAndMatchers should already have fetched all referenced Matchers, so this should never be true: */\r\n        if (typeof matcher === \"undefined\") {\r\n            return null;\r\n        }\r\n        let newMatcher = createResourceMatcherFor(resourceWithAcr, encodeURI(asIri(matcher)) + iriSuffix);\r\n        let listsOtherActors = false;\r\n        knownActorRelations.forEach((knownActorRelation) => {\r\n            getIriAll(matcher, knownActorRelation).forEach((targetActor) => {\r\n                if (knownActorRelation === actorRelationToExclude &&\r\n                    targetActor === actorToExclude) {\r\n                    return;\r\n                }\r\n                listsOtherActors = true;\r\n                newMatcher = addIri(newMatcher, knownActorRelation, targetActor);\r\n            });\r\n        });\r\n        return listsOtherActors ? newMatcher : null;\r\n    })\r\n        .filter(isNotNull);\r\n}\r\nfunction isNotNull(value) {\r\n    return value !== null;\r\n}\r\nasync function internal_getPoliciesAndMatchers(resource, options = internal_defaultFetchOptions) {\r\n    const acrPolicyUrls = getAcrPolicyUrlAll$1(resource);\r\n    const policyUrls = getPolicyUrlAll$1(resource);\r\n    const allPolicyResourceUrls = getResourceUrls(acrPolicyUrls).concat(getResourceUrls(policyUrls));\r\n    const policyResources = await getResources(allPolicyResourceUrls, options);\r\n    const acrPolicies = getThingsFromResources(acrPolicyUrls, policyResources).filter(isNotNull);\r\n    const policies = getThingsFromResources(policyUrls, policyResources).filter(isNotNull);\r\n    const matcherUrlSet = new Set();\r\n    acrPolicies.forEach((acrPolicy) => {\r\n        const referencedMatcherUrls = getReferencedMatcherUrls(acrPolicy);\r\n        referencedMatcherUrls.forEach((matcherUrl) => {\r\n            matcherUrlSet.add(matcherUrl);\r\n        });\r\n    });\r\n    policies.forEach((policy) => {\r\n        const referencedMatcherUrls = getReferencedMatcherUrls(policy);\r\n        referencedMatcherUrls.forEach((matcherUrl) => {\r\n            matcherUrlSet.add(matcherUrl);\r\n        });\r\n    });\r\n    const matcherUrls = Array.from(matcherUrlSet);\r\n    const matcherResourceUrls = matcherUrls.map((matcherUrl) => getResourceUrl(matcherUrl));\r\n    const unfetchedMatcherResourceUrls = matcherResourceUrls.filter((matcherResourceUrl) => !allPolicyResourceUrls.includes(matcherResourceUrl));\r\n    const matcherResources = await getResources(unfetchedMatcherResourceUrls, options);\r\n    const allResources = Object.assign(Object.assign({}, policyResources), matcherResources);\r\n    const matchers = getThingsFromResources(matcherUrls, allResources).filter(isNotNull);\r\n    const inaccessibleUrls = Object.keys(allResources).filter((resourceUrl) => allResources[resourceUrl] === null);\r\n    return {\r\n        inaccessibleUrls: inaccessibleUrls,\r\n        acrPolicies: acrPolicies,\r\n        policies: policies,\r\n        matchers: matchers,\r\n    };\r\n}\r\nfunction getResourceUrl(thingUrl) {\r\n    const thingUrlObject = new URL(thingUrl);\r\n    thingUrlObject.hash = \"\";\r\n    return thingUrlObject.href;\r\n}\r\nfunction getResourceUrls(thingUrls) {\r\n    const resourceUrls = [];\r\n    thingUrls.forEach((thingUrl) => {\r\n        const resourceUrl = getResourceUrl(thingUrl);\r\n        if (!resourceUrls.includes(resourceUrl)) {\r\n            resourceUrls.push(resourceUrl);\r\n        }\r\n    });\r\n    return resourceUrls;\r\n}\r\nasync function getResources(resourceUrls, options) {\r\n    const uniqueResourceUrls = Array.from(new Set(resourceUrls));\r\n    const resources = {};\r\n    await Promise.all(uniqueResourceUrls.map(async (resourceUrl) => {\r\n        try {\r\n            const resource = await getSolidDataset(resourceUrl, options);\r\n            resources[resourceUrl] = resource;\r\n        }\r\n        catch (e) {\r\n            resources[resourceUrl] = null;\r\n        }\r\n    }));\r\n    return resources;\r\n}\r\nfunction getThingsFromResources(thingUrls, resources) {\r\n    return thingUrls.map((thingUrl) => {\r\n        const resourceUrl = getResourceUrl(thingUrl);\r\n        const resource = resources[resourceUrl];\r\n        if (!resource) {\r\n            return null;\r\n        }\r\n        return getThing(resource, thingUrl);\r\n    });\r\n}\r\nfunction getReferencedMatcherUrls(policy) {\r\n    return getAllOfMatcherUrlAll(policy)\r\n        .concat(getAnyOfMatcherUrlAll(policy))\r\n        .concat(getNoneOfMatcherUrlAll(policy));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for a given Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the given Agent. If\r\n *   additional restrictions are set up to apply to the given Agent in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function getAgentAccess$2(resourceUrl, webId, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        return internal_getAgentAccess(acpData, webId);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccess$4(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for a specific Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for the given Agent. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Agent has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change the Agent's access to.\r\n * @param webId WebID of the Agent you want to set access for.\r\n * @param access What access permissions you want to set for the given Agent to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for the given Agent explicitly.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function setAgentAccess$2(resourceUrl, webId, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        const updatedResource = internal_setAgentAccess(resourceInfo, acpData, webId, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return await getAgentAccess$2(resourceUrl, webId, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setAgentResourceAccess(resourceInfo, webId, wacAccess, options);\r\n        return await getAgentAccess$4(resourceInfo, webId, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for all Agents with respect to a given\r\n * Resource.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for the returned Agents. If\r\n *   additional restrictions are set up to apply to the listed Agents in a\r\n *   particular situation, those will not be reflected in the return value of\r\n *   this function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @returns The access information to the Resource, grouped by Agent.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function getAgentAccessAll$2(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        return internal_getAgentAccessAll(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getAgentAccessAll$4(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get an overview of what access is defined for everyone.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only return access specified explicitly for everyone. If\r\n *   additional restrictions are set up to apply to users in a particular\r\n *   situation, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function getPublicAccess$2(resourceUrl, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        return internal_getPublicAccess(acpData);\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        return await getPublicAccess$4(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Set access to a Resource for everybody.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access, in which case it will\r\n *   resolve to `null`.\r\n * - It will only set access explicitly for everybody. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access a user has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access may not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to change public access to.\r\n * @param access What access permissions you want to set for everybody to the given Resource. Possible properties are `read`, `append`, `write`, `controlRead` and `controlWrite`: set to `true` to allow, to `false` to stop allowing, or `undefined` to leave unchanged. Take note that `controlRead` and `controlWrite` can not have distinct values for a Pod server implementing Web Access Control; trying this will throw an error.\r\n * @returns What access has been set for everybody explicitly.\r\n * @since 1.5.0\r\n * @hidden\r\n * @deprecated Please import from the \"universal\" modules.\r\n */\r\nasync function setPublicAccess$2(resourceUrl, access, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfoWithAcr(resourceUrl, options);\r\n    if (hasAccessibleAcr(resourceInfo)) {\r\n        const acpData = await internal_getPoliciesAndMatchers(resourceInfo, options);\r\n        const updatedResource = internal_setPublicAccess(resourceInfo, acpData, access);\r\n        if (updatedResource) {\r\n            try {\r\n                await saveAcrFor(updatedResource, options);\r\n                return getPublicAccess$2(resourceUrl, options);\r\n            }\r\n            catch (e) {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    if (hasAccessibleAcl(resourceInfo)) {\r\n        if (access.controlRead != access.controlWrite) {\r\n            throw new Error(`When setting access for a Resource in a Pod implementing Web Access Control (i.e. [${getSourceIri(resourceInfo)}]), ` + \"`controlRead` and `controlWrite` should have the same value.\");\r\n        }\r\n        const wacAccess = access;\r\n        await setPublicResourceAccess(resourceInfo, wacAccess, options);\r\n        return await getPublicAccess$4(resourceInfo, options);\r\n    }\r\n    return null;\r\n}\n\nvar universal_v2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAgentAccess: getAgentAccess$2,\n  setAgentAccess: setAgentAccess$2,\n  getAgentAccessAll: getAgentAccessAll$2,\n  getPublicAccess: getPublicAccess$2,\n  setPublicAccess: setPublicAccess$2,\n  getAccessFor: getAccessFor,\n  getAccessForAll: getAccessForAll,\n  setAccessFor: setAccessFor\n});\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Retrieve the Server Resource Info of Resource expressing access control over\r\n * another resource it is linked to. It applies in both ACP and WAC contexts:\r\n * the Access Control Resource is discovered consistently using a Link header\r\n * with `rel=acl`.\r\n *\r\n * @param {WithServerResourceInfo} resource The Resource for which ACL we want\r\n * to retrieve the Server Resource Info.\r\n * @param {DefaultOptions} options\r\n * @returns The Server Resource Info if available, null otherwise.\r\n * @since 1.19.0\r\n */\r\nasync function getAclServerResourceInfo(resource, options) {\r\n    if (typeof resource.internal_resourceInfo.aclUrl === \"string\") {\r\n        return await getResourceInfo(resource.internal_resourceInfo.aclUrl, options);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Policies allow or deny access modes over resources and their associated\r\n * access control resource.\r\n *\r\n * @param policy The Policy Thing which allows retrieved access modes.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getAllowModes(policy) {\r\n    return getModes(policy, ACP.allow);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Policies allow or deny access modes over resources and their associated\r\n * access control resource.\r\n *\r\n * @param policy The Policy Thing which denies retrieved access modes.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getDenyModes(policy) {\r\n    return getModes(policy, ACP.deny);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction isAgentMatched(acr, policy, webId) {\r\n    // TODO: Proper solution\r\n    // Finalise, release and use the TypeScript ACP Solid library\r\n    // internal_getActorAccess in acp_v2:96 doesn't reduce the policies properly\r\n    // policyAppliesTo in acp_v2:256 assumes that every matcher is an agent matcher\r\n    //\r\n    // TODO: Stopgap solution\r\n    // Implement a simplistic reduce function that\r\n    // matches policies where the agent is present in the matchers\r\n    const allOfMatchers = getUrlAll(policy, ACP.allOf)\r\n        .map((url) => getThing(internal_getAcr(acr), url))\r\n        .filter((thing) => thing !== null);\r\n    const allOfMatched = allOfMatchers.every((thing) => {\r\n        return getUrlAll(thing, ACP.agent).includes(webId);\r\n    });\r\n    const anyOfMatchers = getUrlAll(policy, ACP.anyOf)\r\n        .map((url) => getThing(internal_getAcr(acr), url))\r\n        .filter((thing) => thing !== null);\r\n    const anyOfMatched = anyOfMatchers.some((thing) => {\r\n        return getUrlAll(thing, ACP.agent).includes(webId);\r\n    });\r\n    const noneOfMatchers = getUrlAll(policy, ACP.noneOf)\r\n        .map((url) => getThing(internal_getAcr(acr), url))\r\n        .filter((thing) => thing !== null);\r\n    const noneOfMatched = noneOfMatchers.some((thing) => {\r\n        return getUrlAll(thing, ACP.agent).includes(webId);\r\n    });\r\n    return (allOfMatchers.length + anyOfMatchers.length > 0 &&\r\n        (allOfMatchers.length === 0 || allOfMatched) &&\r\n        (anyOfMatchers.length === 0 || anyOfMatched) &&\r\n        (noneOfMatchers.length === 0 || !noneOfMatched));\r\n}\r\n/** @hidden */\r\nfunction reduceModes(policy, modes, type) {\r\n    const allowed = getAllowModes(policy);\r\n    const denied = getDenyModes(policy);\r\n    if (type === \"control\") {\r\n        return {\r\n            read: modes.read,\r\n            append: modes.append,\r\n            write: modes.write,\r\n            controlRead: (modes.controlRead || allowed.read) && !denied.read,\r\n            controlWrite: (modes.controlWrite || allowed.write) && !denied.write,\r\n        };\r\n    }\r\n    return {\r\n        read: (modes.read || allowed.read) && !denied.read,\r\n        append: (modes.append || allowed.append) && !denied.append,\r\n        write: (modes.write || allowed.write) && !denied.write,\r\n        controlRead: modes.controlRead,\r\n        controlWrite: modes.controlWrite,\r\n    };\r\n}\r\n/**\r\n * Get an overview of what access is defined for a given Agent.\r\n *\r\n * @param resourceWithAcr URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @since 1.16.0\r\n */\r\nasync function getAgentAccess$1(resourceWithAcr, webId) {\r\n    // TODO: add support for external resources\r\n    let resourceAccess = {\r\n        read: false,\r\n        append: false,\r\n        write: false,\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n    const policyAll = getPolicyUrlAll(resourceWithAcr)\r\n        .map((url) => getThing(internal_getAcr(resourceWithAcr), url))\r\n        .filter((policy) => policy !== null);\r\n    policyAll.map((policy) => {\r\n        if (isAgentMatched(resourceWithAcr, policy, webId)) {\r\n            resourceAccess = reduceModes(policy, resourceAccess, \"resource\");\r\n        }\r\n    });\r\n    const acrPolicyAll = getAcrPolicyUrlAll(resourceWithAcr)\r\n        .map((url) => getThing(internal_getAcr(resourceWithAcr), url))\r\n        .filter((policy) => policy !== null);\r\n    acrPolicyAll.map((policy) => {\r\n        if (isAgentMatched(resourceWithAcr, policy, webId)) {\r\n            resourceAccess = reduceModes(policy, resourceAccess, \"control\");\r\n        }\r\n    });\r\n    return resourceAccess;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Retrieve the URL of an Access Control Resource as per pre-draft versions of\r\n * the ACP specification.\r\n *\r\n * @param resource The Resource for which to retrieve the URL of the Access\r\n * Control Resource if it is accessible.\r\n * @returns The URL of the ACR or null.\r\n * @deprecated\r\n */\r\nfunction getAcrUrl$1(resource) {\r\n    const linkedAccessControlResource = resource.internal_resourceInfo.linkedResources[ACP.accessControl];\r\n    if (Array.isArray(linkedAccessControlResource) &&\r\n        linkedAccessControlResource.length === 1) {\r\n        return linkedAccessControlResource[0];\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Retrieve the URL of an Access Control Resource as per the ACP Draft\r\n * specification.\r\n *\r\n * @param resource The Resource for which to retrieve the URL of the Access\r\n * Control Resource if it is accessible.\r\n * @returns The URL of the ACR or null.\r\n */\r\nasync function getAcrUrl(resource, options) {\r\n    // TODO: Remove as soon as ESS 1.1 is phased out\r\n    const legacyAcrUrl = getAcrUrl$1(resource);\r\n    if (legacyAcrUrl !== null) {\r\n        return legacyAcrUrl;\r\n    }\r\n    // The ACP Draft mandates a link rel=\"type\" header identifies Access Control Resources\r\n    const aclServerResourceInfo = await getAclServerResourceInfo(resource, options);\r\n    if (aclServerResourceInfo === null) {\r\n        return null;\r\n    }\r\n    const relTypeLinks = getLinkedResourceUrlAll(aclServerResourceInfo)[\"type\"];\r\n    if (Array.isArray(relTypeLinks) &&\r\n        relTypeLinks.includes(ACP.AccessControlResource)) {\r\n        return getSourceUrl(aclServerResourceInfo);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Retrieve the Access Control Resource of a Resource as per the ACP Draft\r\n * specification.\r\n *\r\n * @param resource The Resource for which to retrieve the URL of the Access\r\n * Control Resource if it is accessible.\r\n * @param options Default Options such as a fetch function.\r\n * @returns The URL of the ACR or null.\r\n */\r\nasync function getResourceAcr(resource, options) {\r\n    const acrUrl = await getAcrUrl(resource, options);\r\n    if (acrUrl === null) {\r\n        return null;\r\n    }\r\n    let acr;\r\n    try {\r\n        acr = await getSolidDataset(acrUrl, options);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    return Object.assign(Object.assign({}, resource), { internal_acp: {\r\n            acr: Object.assign(Object.assign({}, acr), { accessTo: getSourceUrl(resource) }),\r\n        } });\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for a given Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access.\r\n * - It will only return access specified explicitly for the given Agent within\r\n *   the ACL linked to the resource. If additional restrictions or external\r\n *   resources are used, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param webId WebID of the Agent you want to get the access for.\r\n * @param options Default Options such as a fetch function.\r\n * @since 1.19.0\r\n */\r\nasync function getAgentAccess(resourceUrl, webId, options) {\r\n    const resourceInfo = await getResourceInfo(resourceUrl, options);\r\n    const acr = await getResourceAcr(resourceInfo, options);\r\n    if (acr === null) {\r\n        return getAgentAccess$4(resourceInfo, webId, options);\r\n    }\r\n    return getAgentAccess$1(acr, webId);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getAgentUrlAll(acr) {\r\n    return Array.from(new Set(getThingAll(internal_getAcr(acr))\r\n        .map((thing) => {\r\n        return getUrlAll(thing, ACP.agent);\r\n    })\r\n        .reduce((flatArray, agentArray) => {\r\n        return flatArray.concat(agentArray);\r\n    }, [])));\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for agents.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access.\r\n * - It will only return access specified explicitly for the given Agent within\r\n *   the ACL linked to the resource. If additional restrictions or external\r\n *   resources are used, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param options Default Options such as a fetch function.\r\n * @since 1.21.0\r\n */\r\nasync function getAgentAccessAll$1(resourceWithAcr) {\r\n    return (await Promise.all(getAgentUrlAll(resourceWithAcr).map(async (agent) => ({\r\n        [agent]: await getAgentAccess$1(resourceWithAcr, agent),\r\n    })))).reduce((agentAccessAll, currentAgentAccess) => (Object.assign(Object.assign({}, agentAccessAll), currentAgentAccess)), {});\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for agents.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access.\r\n * - It will only return access specified explicitly for the given Agent within\r\n *   the ACL linked to the resource. If additional restrictions or external\r\n *   resources are used, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param options Default Options such as a fetch function.\r\n * @since 1.21.0\r\n */\r\nasync function getAgentAccessAll(resourceUrl, options) {\r\n    const resourceInfo = await getResourceInfo(resourceUrl, options);\r\n    const acr = await getResourceAcr(resourceInfo, options);\r\n    if (acr === null) {\r\n        return getAgentAccessAll$4(resourceInfo, options);\r\n    }\r\n    return getAgentAccessAll$1(acr);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is given to the public.\r\n *\r\n * @param resourceWithAcr URL of the Resource you want to read the access for.\r\n * @since 1.16.0\r\n */\r\nasync function getPublicAccess$1(resourceWithAcr) {\r\n    return getAgentAccess$1(resourceWithAcr, ACP.PublicAgent);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Get an overview of what access is defined for the Public.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably reading access.\r\n * - It will only return access specified explicitly for the given Agent within\r\n *   the ACL linked to the resource. If additional restrictions or external\r\n *   resources are used, those will not be reflected in the return value of this\r\n *   function.\r\n * - It will only return access specified explicitly for the given Resource.\r\n *   In other words, if the Resource is a Container, the returned Access may not\r\n *   apply to contained Resources.\r\n * - If the current user does not have permission to view access for the given\r\n *   Resource, this function will resolve to `null`.\r\n *\r\n * @param resourceUrl URL of the Resource you want to read the access for.\r\n * @param options Default Options such as a fetch function.\r\n * @since 1.19.0\r\n */\r\nasync function getPublicAccess(resourceUrl, options) {\r\n    const resourceInfo = await getResourceInfo(resourceUrl, options);\r\n    const acr = await getResourceAcr(resourceInfo, options);\r\n    if (acr === null) {\r\n        return getPublicAccess$4(resourceInfo, options);\r\n    }\r\n    return getPublicAccess$1(acr);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getDefaultAgentMatcherPolicyUrl(resource, name, mode) {\r\n    return getDefaultAccessControlUrl(resource, name)\r\n        .concat(\"AgentMatcher\")\r\n        .concat(mode.charAt(0).toUpperCase() + mode.slice(1))\r\n        .concat(\"Policy\");\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction setDefaultAgentMatcherPolicyThingIfNotExist(resource, name, mode) {\r\n    const policyUrl = getDefaultAgentMatcherPolicyUrl(resource, name, mode);\r\n    // TODO: Re-enable when we support setting agent access on member resources\r\n    // if (policyUrl.includes(\"Member\") && policyUrl.includes(\"Acr\")) {\r\n    //   return addMemberAcrPolicyUrl(resource, policyUrl);\r\n    // }\r\n    // if (policyUrl.includes(\"Member\")) {\r\n    //   return addMemberPolicyUrl(resource, policyUrl);\r\n    // }\r\n    if (policyUrl.includes(\"Acr\")) {\r\n        return addAcrPolicyUrl(resource, policyUrl);\r\n    }\r\n    return addPolicyUrl(resource, policyUrl);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getDefaultAgentMatcherPolicyMatcherUrl(resource, name, mode) {\r\n    return getDefaultAgentMatcherPolicyUrl(resource, name, mode).concat(\"Matcher\");\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nconst DEFAULT_POLICY_MATCHER_PREDICATE = ACP.anyOf;\r\n/**\r\n * This functions scaffolds the default elements required for giving access to\r\n * an agent:\r\n * 1. If the Access Control Resource is empty, create the AccessControlResource\r\n *    element;\r\n * 2. If the current default Access Control doesn't exist (the one applying to\r\n *    one of: the Resource, the ACR, the Member Resources or the ACR of members)\r\n *    create it;\r\n * 3. If the default Policy for allowing the Access Modes for the current\r\n *    default Access Control doesn't exist, create it;\r\n * 4. If the default \"anyOf\" Agent Matcher for the current Policy creates it;\r\n * 5. Returns an ACR with a Matcher ready to add to.\r\n * @hidden\r\n * */\r\nfunction setDefaultAgentMatcherPolicyMatcherThingIfNotExist(resource, name, mode) {\r\n    const policyUrl = getDefaultAgentMatcherPolicyUrl(resource, name, mode);\r\n    const matcherUrl = getDefaultAgentMatcherPolicyMatcherUrl(resource, name, mode);\r\n    let defaultAgentMatcherPolicyThing = getThing(internal_getAcr(resource), policyUrl);\r\n    if (!defaultAgentMatcherPolicyThing) {\r\n        resource = setDefaultAgentMatcherPolicyThingIfNotExist(resource, name, mode);\r\n        defaultAgentMatcherPolicyThing = createThing({ url: policyUrl });\r\n        defaultAgentMatcherPolicyThing = setModes(defaultAgentMatcherPolicyThing, { [mode]: true }, ACP.allow);\r\n    }\r\n    // Get the Default Access Control Agent Matcher Policy Matcher Thing or create it and return\r\n    const agentMatcherPolicyUrlAll = getIriAll(defaultAgentMatcherPolicyThing, DEFAULT_POLICY_MATCHER_PREDICATE);\r\n    if (!agentMatcherPolicyUrlAll.includes(matcherUrl)) {\r\n        defaultAgentMatcherPolicyThing = buildThing(defaultAgentMatcherPolicyThing)\r\n            .addUrl(DEFAULT_POLICY_MATCHER_PREDICATE, matcherUrl)\r\n            .build();\r\n        return setAccessControlResourceThing(resource, defaultAgentMatcherPolicyThing);\r\n    }\r\n    return resource;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction setAgentAccessMode(resourceWithAcr, webId, name, mode, operation) {\r\n    var _a;\r\n    const matcherUrl = getDefaultAgentMatcherPolicyMatcherUrl(resourceWithAcr, name, mode);\r\n    // Set default Matcher if not exists\r\n    const resourceWithDefaultAgentMatcher = setDefaultAgentMatcherPolicyMatcherThingIfNotExist(resourceWithAcr, name, mode);\r\n    const defaultAgentMatcherThing = (_a = getThing(internal_getAcr(resourceWithDefaultAgentMatcher), matcherUrl)) !== null && _a !== void 0 ? _a : createThing({ url: matcherUrl });\r\n    return setAccessControlResourceThing(resourceWithDefaultAgentMatcher, operation === \"add\"\r\n        ? addAgent(defaultAgentMatcherThing, webId)\r\n        : removeAgent(defaultAgentMatcherThing, webId));\r\n}\r\n/**\r\n * Set access for a given Agent.\r\n *\r\n * @param resourceWithAcr URL of the Resource you want to set the access for.\r\n * @param webId WebID of the Agent you want to set the access for.\r\n * @param access Access Modes you want to set for the agent.\r\n * @since 1.16.0\r\n */\r\nasync function setAgentAccess$1(resourceWithAcr, webId, access) {\r\n    const agentAccessModes = await getAgentAccess$1(resourceWithAcr, webId);\r\n    // Add Agent to Default Matchers (including member) if access mode is different from what exists\r\n    if (typeof access.read === \"boolean\" &&\r\n        agentAccessModes.read !== access.read) {\r\n        resourceWithAcr = setAgentAccessMode(resourceWithAcr, webId, DEFAULT_ACCESS_CONTROL, \"read\", access.read ? \"add\" : \"remove\");\r\n    }\r\n    if (typeof access.append === \"boolean\" &&\r\n        agentAccessModes.append !== access.append) {\r\n        resourceWithAcr = setAgentAccessMode(resourceWithAcr, webId, DEFAULT_ACCESS_CONTROL, \"append\", access.append ? \"add\" : \"remove\");\r\n    }\r\n    if (typeof access.write === \"boolean\" &&\r\n        agentAccessModes.write !== access.write) {\r\n        resourceWithAcr = setAgentAccessMode(resourceWithAcr, webId, DEFAULT_ACCESS_CONTROL, \"write\", access.write ? \"add\" : \"remove\");\r\n    }\r\n    if (typeof access.controlRead === \"boolean\" &&\r\n        agentAccessModes.controlRead !== access.controlRead) {\r\n        resourceWithAcr = setAgentAccessMode(resourceWithAcr, webId, DEFAULT_ACR_ACCESS_CONTROL, \"controlRead\", access.controlRead ? \"add\" : \"remove\");\r\n    }\r\n    if (typeof access.controlWrite === \"boolean\" &&\r\n        agentAccessModes.controlWrite !== access.controlWrite) {\r\n        resourceWithAcr = setAgentAccessMode(resourceWithAcr, webId, DEFAULT_ACR_ACCESS_CONTROL, \"controlWrite\", access.controlWrite ? \"add\" : \"remove\");\r\n    }\r\n    return resourceWithAcr;\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Set access to a resource for a given Agent.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access.\r\n * - It will only set access explicitly for the given Agent. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Agent has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access will not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to set access for.\r\n * @param webId WebID of the Agent you want to set access for.\r\n * @param access The Access Modes to add (true) or remove (false).\r\n * @param options Default Options such as a fetch function.\r\n * @since 1.19.0\r\n */\r\nasync function setAgentAccess(resourceUrl, webId, access, options) {\r\n    // TODO: Change the standard getAgentAccess signatures to all take a  T extends WithAcl\r\n    const resourceInfo = await getResourceInfo(resourceUrl, options);\r\n    const acr = await getResourceAcr(resourceInfo, options);\r\n    if (acr === null) {\r\n        await setAgentResourceAccess(resourceInfo, webId, access, options);\r\n        return getAgentAccess$4(resourceInfo, webId, options);\r\n    }\r\n    // TODO: Make sure both setAgentAccessWac and setAgentAccessAcp don't save within the function, expose one standard saveAclFor function that is universal.\r\n    try {\r\n        await saveAcrFor(await setAgentAccess$1(acr, webId, access), options);\r\n        return await getAgentAccess(resourceUrl, webId, options);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Set access for the public.\r\n *\r\n * @param resourceWithAcr URL of the Resource you want to read the access for.\r\n * @param access Access Modes you want to set for the agent.\r\n * @since 1.16.0\r\n */\r\nasync function setPublicAccess$1(resourceWithAcr, access) {\r\n    return setAgentAccess$1(resourceWithAcr, ACP.PublicAgent, access);\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Set access to a resource for the public.\r\n *\r\n * This function works with Solid Pods that implement either the Web Access\r\n * Control spec or the Access Control Policies proposal, with some caveats:\r\n *\r\n * - If access to the given Resource has been set using anything other than the\r\n *   functions in this module, it is possible that it has been set in a way that\r\n *   prevents this function from reliably setting access.\r\n * - It will only set access explicitly for the given Agent. In other words,\r\n *   additional restrictions could be present that further restrict or loosen\r\n *   what access the given Agent has in particular circumstances.\r\n * - The provided access will only apply to the given Resource. In other words,\r\n *   if the Resource is a Container, the configured Access will not apply to\r\n *   contained Resources.\r\n * - If the current user does not have permission to view or change access for\r\n *   the given Resource, this function will resolve to `null`.\r\n *\r\n * Additionally, two caveats apply to users with a Pod server that uses WAC:\r\n * - If the Resource did not have an ACL yet, a new one will be initialised.\r\n *   This means that changes to the ACL of a parent Container can no longer\r\n *   affect access people have to this Resource, although existing access will\r\n *   be preserved.\r\n * - Setting different values for `controlRead` and `controlWrite` is not\r\n *   supported, and **will throw an error**. If you expect (some of) your users\r\n *   to have Pods implementing WAC, be sure to pass the same value for both.\r\n *\r\n * @param resourceUrl URL of the Resource you want to set access for.\r\n * @param access The Access Modes to add (true) or remove (false).\r\n * @param options Default Options such as a fetch function.\r\n * @since 1.19.0\r\n */\r\nasync function setPublicAccess(resourceUrl, access, options) {\r\n    const resourceInfo = await getResourceInfo(resourceUrl, options);\r\n    const acr = await getResourceAcr(resourceInfo, options);\r\n    if (acr === null) {\r\n        await setPublicResourceAccess(resourceInfo, access, options);\r\n        return getPublicAccess$4(resourceInfo, options);\r\n    }\r\n    try {\r\n        await saveAcrFor(await setPublicAccess$1(acr, access), options);\r\n        return await getPublicAccess(resourceUrl, options);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getAclServerResourceInfo: getAclServerResourceInfo,\n  getAgentAccess: getAgentAccess,\n  getAgentAccessAll: getAgentAccessAll,\n  getPublicAccess: getPublicAccess,\n  setAgentAccess: setAgentAccess,\n  setPublicAccess: setPublicAccess\n});\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nvar ess1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getFileWithAccessDatasets: getFileWithAccessDatasets,\n  getFileWithAcr: getFileWithAcr,\n  getLinkedAcrUrl: getLinkedAcrUrl,\n  getReferencedPolicyUrlAll: getReferencedPolicyUrlAll,\n  getResourceInfoWithAccessDatasets: getResourceInfoWithAccessDatasets,\n  getResourceInfoWithAcr: getResourceInfoWithAcr,\n  getSolidDatasetWithAccessDatasets: getSolidDatasetWithAccessDatasets,\n  getSolidDatasetWithAcr: getSolidDatasetWithAcr,\n  hasAccessibleAcr: hasAccessibleAcr,\n  saveAcrFor: saveAcrFor,\n  isAcpControlled: isAcpControlled,\n  acrAsMarkdown: acrAsMarkdown,\n  addAcrPolicyUrl: addAcrPolicyUrl$1,\n  addMemberAcrPolicyUrl: addMemberAcrPolicyUrl$1,\n  addMemberPolicyUrl: addMemberPolicyUrl$1,\n  addPolicyUrl: addPolicyUrl$1,\n  getAcrPolicyUrlAll: getAcrPolicyUrlAll$1,\n  getMemberAcrPolicyUrlAll: getMemberAcrPolicyUrlAll$1,\n  getMemberPolicyUrlAll: getMemberPolicyUrlAll$1,\n  getPolicyUrlAll: getPolicyUrlAll$1,\n  hasLinkedAcr: hasLinkedAcr,\n  removeAcrPolicyUrl: removeAcrPolicyUrl$1,\n  removeAcrPolicyUrlAll: removeAcrPolicyUrlAll,\n  removeMemberAcrPolicyUrl: removeMemberAcrPolicyUrl$1,\n  removeMemberAcrPolicyUrlAll: removeMemberAcrPolicyUrlAll,\n  removeMemberPolicyUrl: removeMemberPolicyUrl$1,\n  removeMemberPolicyUrlAll: removeMemberPolicyUrlAll,\n  removePolicyUrl: removePolicyUrl$1,\n  removePolicyUrlAll: removePolicyUrlAll,\n  createPolicy: createPolicy,\n  getAllowModes: getAllowModesV1,\n  getDenyModes: getDenyModesV1,\n  getPolicy: getPolicy,\n  getPolicyAll: getPolicyAll,\n  policyAsMarkdown: policyAsMarkdown,\n  removePolicy: removePolicy,\n  setAllowModes: setAllowModesV1,\n  setDenyModes: setDenyModesV1,\n  setPolicy: setPolicy,\n  createResourcePolicyFor: createResourcePolicyFor,\n  getResourceAcrPolicy: getResourceAcrPolicy,\n  getResourceAcrPolicyAll: getResourceAcrPolicyAll,\n  getResourcePolicy: getResourcePolicy,\n  getResourcePolicyAll: getResourcePolicyAll,\n  removeResourceAcrPolicy: removeResourceAcrPolicy,\n  removeResourcePolicy: removeResourcePolicy,\n  setResourceAcrPolicy: setResourceAcrPolicy,\n  setResourcePolicy: setResourcePolicy$1,\n  addAgent: addAgent$1,\n  addNoneOfRuleUrl: addNoneOfRuleUrl,\n  addGroup: addGroup,\n  addAnyOfRuleUrl: addAnyOfRuleUrl,\n  addAllOfRuleUrl: addAllOfRuleUrl,\n  createRule: createRule,\n  getAgentAll: getAgentAll$1,\n  getNoneOfRuleUrlAll: getNoneOfRuleUrlAll,\n  getGroupAll: getGroupAll,\n  getAnyOfRuleUrlAll: getAnyOfRuleUrlAll,\n  getAllOfRuleUrlAll: getAllOfRuleUrlAll,\n  getRule: getRule,\n  getRuleAll: getRuleAll,\n  hasAuthenticated: hasAuthenticated$1,\n  hasCreator: hasCreator$1,\n  hasPublic: hasPublic$1,\n  removeAgent: removeAgent$1,\n  removeNoneOfRuleUrl: removeNoneOfRuleUrl,\n  removeGroup: removeGroup,\n  removeAnyOfRuleUrl: removeAnyOfRuleUrl,\n  removeAllOfRuleUrl: removeAllOfRuleUrl,\n  removeRule: removeRule,\n  ruleAsMarkdown: ruleAsMarkdown,\n  setAgent: setAgent$1,\n  setAuthenticated: setAuthenticated$1,\n  setCreator: setCreator$1,\n  setNoneOfRuleUrl: setNoneOfRuleUrl,\n  setGroup: setGroup,\n  setAnyOfRuleUrl: setAnyOfRuleUrl,\n  setPublic: setPublic$1,\n  setAllOfRuleUrl: setAllOfRuleUrl,\n  setRule: setRule,\n  addClient: addClient$1,\n  getClientAll: getClientAll$1,\n  hasAnyClient: hasAnyClient$1,\n  removeClient: removeClient$1,\n  setAnyClient: setAnyClient$1,\n  setClient: setClient$1,\n  removeAnyClient: removeAnyClient$1,\n  removeAuthenticated: removeAuthenticated$1,\n  removeCreator: removeCreator$1,\n  removePublic: removePublic$1,\n  createResourceRuleFor: createResourceRuleFor,\n  getResourceRule: getResourceRule,\n  getResourceRuleAll: getResourceRuleAll,\n  removeResourceRule: removeResourceRule,\n  setResourceRule: setResourceRule,\n  addMockAcrTo: addMockAcrTo,\n  mockAcrFor: mockAcrFor\n});\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nvar ess2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getFileWithAccessDatasets: getFileWithAccessDatasets,\n  getFileWithAcr: getFileWithAcr,\n  getLinkedAcrUrl: getLinkedAcrUrl,\n  getReferencedPolicyUrlAll: getReferencedPolicyUrlAll,\n  getResourceInfoWithAccessDatasets: getResourceInfoWithAccessDatasets,\n  getResourceInfoWithAcr: getResourceInfoWithAcr,\n  getSolidDatasetWithAccessDatasets: getSolidDatasetWithAccessDatasets,\n  getSolidDatasetWithAcr: getSolidDatasetWithAcr,\n  hasAccessibleAcr: hasAccessibleAcr,\n  saveAcrFor: saveAcrFor,\n  isAcpControlled: isAcpControlled,\n  hasLinkedAcr: hasLinkedAcr,\n  removeAcrPolicyUrlAll: removeAcrPolicyUrlAll,\n  removeMemberAcrPolicyUrlAll: removeMemberAcrPolicyUrlAll,\n  removeMemberPolicyUrlAll: removeMemberPolicyUrlAll,\n  removePolicyUrlAll: removePolicyUrlAll,\n  addAcrPolicyUrl: addAcrPolicyUrl,\n  addMemberAcrPolicyUrl: addMemberAcrPolicyUrl,\n  addMemberPolicyUrl: addMemberPolicyUrl,\n  addPolicyUrl: addPolicyUrl,\n  getAcrPolicyUrlAll: getAcrPolicyUrlAll,\n  getMemberAcrPolicyUrlAll: getMemberAcrPolicyUrlAll,\n  getMemberPolicyUrlAll: getMemberPolicyUrlAll,\n  getPolicyUrlAll: getPolicyUrlAll,\n  removeAcrPolicyUrl: removeAcrPolicyUrl,\n  removeMemberAcrPolicyUrl: removeMemberAcrPolicyUrl,\n  removeMemberPolicyUrl: removeMemberPolicyUrl,\n  removePolicyUrl: removePolicyUrl,\n  setResourcePolicy: setResourcePolicy,\n  createPolicy: createPolicy,\n  getPolicy: getPolicy,\n  getPolicyAll: getPolicyAll,\n  removePolicy: removePolicy,\n  setPolicy: setPolicy,\n  createResourcePolicyFor: createResourcePolicyFor,\n  getResourceAcrPolicy: getResourceAcrPolicy,\n  getResourceAcrPolicyAll: getResourceAcrPolicyAll,\n  getResourcePolicy: getResourcePolicy,\n  getResourcePolicyAll: getResourcePolicyAll,\n  removeResourceAcrPolicy: removeResourceAcrPolicy,\n  removeResourcePolicy: removeResourcePolicy,\n  getAllowModes: getAllowModesV2,\n  getDenyModes: getDenyModesV2,\n  setAllowModes: setAllowModesV2,\n  setDenyModes: setDenyModesV2,\n  addAgent: addAgent,\n  addNoneOfMatcherUrl: addNoneOfMatcherUrl,\n  addAnyOfMatcherUrl: addAnyOfMatcherUrl,\n  addAllOfMatcherUrl: addAllOfMatcherUrl,\n  createMatcher: createMatcher,\n  getAgentAll: getAgentAll,\n  getNoneOfMatcherUrlAll: getNoneOfMatcherUrlAll,\n  getAnyOfMatcherUrlAll: getAnyOfMatcherUrlAll,\n  getAllOfMatcherUrlAll: getAllOfMatcherUrlAll,\n  getMatcher: getMatcher,\n  getMatcherAll: getMatcherAll,\n  hasAuthenticated: hasAuthenticated,\n  hasCreator: hasCreator,\n  hasPublic: hasPublic,\n  removeAgent: removeAgent,\n  removeNoneOfMatcherUrl: removeNoneOfMatcherUrl,\n  removeAnyOfMatcherUrl: removeAnyOfMatcherUrl,\n  removeAllOfMatcherUrl: removeAllOfMatcherUrl,\n  removeMatcher: removeMatcher,\n  setAgent: setAgent,\n  setAuthenticated: setAuthenticated,\n  setCreator: setCreator,\n  setNoneOfMatcherUrl: setNoneOfMatcherUrl,\n  setAnyOfMatcherUrl: setAnyOfMatcherUrl,\n  setPublic: setPublic,\n  setAllOfMatcherUrl: setAllOfMatcherUrl,\n  setMatcher: setMatcher,\n  addClient: addClient,\n  getClientAll: getClientAll,\n  removeClient: removeClient,\n  removeAuthenticated: removeAuthenticated,\n  removeCreator: removeCreator,\n  removePublic: removePublic,\n  createResourceMatcherFor: createResourceMatcherFor,\n  getResourceMatcher: getResourceMatcher,\n  getResourceMatcherAll: getResourceMatcherAll,\n  removeResourceMatcher: removeResourceMatcher,\n  setResourceMatcher: setResourceMatcher,\n  addMockAcrTo: addMockAcrTo,\n  mockAcrFor: mockAcrFor,\n  getVcAccess: getVcAccess,\n  setVcAccess: setVcAccess\n});\n\nexport { FetchError, SolidClientError, ThingExpectedError, universal as access, universal_v1 as access_v1, universal_v2 as access_v2, ess1 as acp_ess_1, ess2 as acp_ess_2, acp_v1, acp_v2, acp_v3, acp_v4, addBoolean, addDate, addDatetime, addDecimal, addInteger, addIri, addJwkToJwks, addLiteral, addMockFallbackAclTo, addMockResourceAclTo, addNamedNode, addPublicKeyToProfileJwks, addStringEnglish, addStringNoLocale, addStringWithLocale, addTerm, addTime, addUrl, asIri, asUrl, buildThing, changeLogAsMarkdown, createAcl, createAclFromFallbackAcl, createContainerAt, createContainerInContainer, createSolidDataset, createThing, deleteAclFor, deleteContainer, deleteFile, deleteSolidDataset, fromRdfJsDataset, getAgentAccess$5 as getAgentAccess, getAgentAccessAll$5 as getAgentAccessAll, getAgentDefaultAccess, getAgentDefaultAccessAll, getAgentResourceAccess, getAgentResourceAccessAll, getAltProfileUrlAllFrom, getBoolean, getBooleanAll, getContainedResourceUrlAll, getContentType$1 as getContentType, getDate, getDateAll, getDatetime, getDatetimeAll, getDecimal, getDecimalAll, getEffectiveAccess, getFallbackAcl, getFile, getFileWithAcl, getGroupAccess$2 as getGroupAccess, getGroupAccessAll$2 as getGroupAccessAll, getGroupDefaultAccess, getGroupDefaultAccessAll, getGroupResourceAccess, getGroupResourceAccessAll, getInteger, getIntegerAll, getIri, getIriAll, getJsonLdParser, getLinkedResourceUrlAll, getLiteral, getLiteralAll, getNamedNode, getNamedNodeAll, getPodOwner, getPodUrlAll, getPodUrlAllFrom, getProfileAll, getProfileJwksIri, getPropertyAll, getPublicAccess$5 as getPublicAccess, getPublicDefaultAccess, getPublicResourceAccess, getResourceAcl, getResourceInfo, getResourceInfoWithAcl, getSolidDataset, getSolidDatasetWithAcl, getSourceIri, getSourceUrl, getStringByLocaleAll, getStringEnglish, getStringEnglishAll, getStringNoLocale, getStringNoLocaleAll, getStringWithLocale, getStringWithLocaleAll, getTerm, getTermAll, getThing, getThingAll, getTime, getTimeAll, getTurtleParser, getUrl, getUrlAll, getWellKnownSolid, hasAccessibleAcl, hasAcl, hasFallbackAcl, hasResourceAcl, hasResourceInfo, hasServerResourceInfo, isContainer, isPodOwner, isRawData, isThing, isThingLocal, mockContainerFrom, mockFetchError, mockFileFrom, mockSolidDatasetFrom, mockThingFrom, overwriteFile, removeAll, removeBoolean, removeDate, removeDatetime, removeDecimal, removeInteger, removeIri, removeLiteral, removeNamedNode, removeStringEnglish, removeStringNoLocale, removeStringWithLocale, removeThing, removeTime, removeUrl, responseToResourceInfo, responseToSolidDataset, saveAclFor, saveFileInContainer, saveSolidDatasetAt, saveSolidDatasetInContainer, setAgentDefaultAccess, setAgentResourceAccess$1 as setAgentResourceAccess, setBoolean, setDate, setDatetime, setDecimal, setGroupDefaultAccess, setGroupResourceAccess$1 as setGroupResourceAccess, setInteger, setIri, setLiteral, setNamedNode, setProfileJwks, setPublicDefaultAccess, setPublicResourceAccess$1 as setPublicResourceAccess, setStringNoLocale, setStringWithLocale, setTerm, setThing, setTime, setUrl, solidDatasetAsMarkdown, solidDatasetAsTurtle, thingAsMarkdown, toRdfJsDataset, index as universalAccess };\n","'use strict'\n\nvar COMPATIBLE_ENCODING_PATTERN = /^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i\nvar WS_TRIM_PATTERN = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g\nvar WS_CHAR_PATTERN = /\\s|\\uFEFF|\\xA0/\nvar WS_FOLD_PATTERN = /\\r?\\n[\\x20\\x09]+/g\nvar DELIMITER_PATTERN = /[;,\"]/\nvar WS_DELIMITER_PATTERN = /[;,\"]|\\s/\n\n/**\n * Token character pattern\n * @type {RegExp}\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nvar TOKEN_PATTERN = /^[!#$%&'*+\\-\\.^_`|~\\da-zA-Z]+$/\n\nvar STATE = {\n  IDLE: 1 << 0,\n  URI: 1 << 1,\n  ATTR: 1 << 2,\n}\n\nfunction trim( value ) {\n  return value.replace( WS_TRIM_PATTERN, '' )\n}\n\nfunction hasWhitespace( value ) {\n  return WS_CHAR_PATTERN.test( value )\n}\n\nfunction skipWhitespace( value, offset ) {\n  while( hasWhitespace( value[offset] ) ) {\n    offset++\n  }\n  return offset\n}\n\nfunction needsQuotes( value ) {\n  return WS_DELIMITER_PATTERN.test( value ) ||\n    !TOKEN_PATTERN.test( value )\n}\n\nclass Link {\n\n  /**\n   * Link\n   * @constructor\n   * @param {String} [value]\n   * @returns {Link}\n   */\n  constructor( value ) {\n\n    /** @type {Array} URI references */\n    this.refs = []\n\n    if( value ) {\n      this.parse( value )\n    }\n\n  }\n\n  /**\n   * Get refs with given relation type\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  rel( value ) {\n\n    var links = []\n    var type = value.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ].rel.toLowerCase() === type ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  /**\n   * Get refs where given attribute has a given value\n   * @param {String} attr\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  get( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    var links = []\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  set( link ) {\n    this.refs.push( link )\n    return this\n  }\n\n  has( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        return true\n      }\n    }\n\n    return false\n\n  }\n\n  parse( value, offset ) {\n\n    offset = offset || 0\n    value = offset ? value.slice( offset ) : value\n\n    // Trim & unfold folded lines\n    value = trim( value ).replace( WS_FOLD_PATTERN, '' )\n\n    var state = STATE.IDLE\n    var length = value.length\n    var offset = 0\n    var ref = null\n\n    while( offset < length ) {\n      if( state === STATE.IDLE ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === '<' ) {\n          if( ref != null ) {\n            ref.rel != null ?\n              this.refs.push( ...Link.expandRelations( ref ) ) :\n              this.refs.push( ref )\n          }\n          var end = value.indexOf( '>', offset )\n          if( end === -1 ) throw new Error( 'Expected end of URI delimiter at offset ' + offset )\n          ref = { uri: value.slice( offset + 1, end ) }\n          // this.refs.push( ref )\n          offset = end\n          state = STATE.URI\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n        offset++\n      } else if( state === STATE.URI ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === ';' ) {\n          state = STATE.ATTR\n          offset++\n        } else if( value[offset] === ',' ) {\n          state = STATE.IDLE\n          offset++\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n      } else if( state === STATE.ATTR ) {\n        if( value[offset] ===';' || hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        }\n        var end = value.indexOf( '=', offset )\n        if( end === -1 ) throw new Error( 'Expected attribute delimiter at offset ' + offset )\n        var attr = trim( value.slice( offset, end ) ).toLowerCase()\n        var attrValue = ''\n        offset = end + 1\n        offset = skipWhitespace( value, offset )\n        if( value[offset] === '\"' ) {\n          offset++\n          while( offset < length ) {\n            if( value[offset] === '\"' ) {\n              offset++; break\n            }\n            if( value[offset] === '\\\\' ) {\n              offset++\n            }\n            attrValue += value[offset]\n            offset++\n          }\n        } else {\n          var end = offset + 1\n          while( !DELIMITER_PATTERN.test( value[end] ) && end < length ) {\n            end++\n          }\n          attrValue = value.slice( offset, end )\n          offset = end\n        }\n        if( ref[ attr ] && Link.isSingleOccurenceAttr( attr ) ) {\n          // Ignore multiples of attributes which may only appear once\n        } else if( attr[ attr.length - 1 ] === '*' ) {\n          ref[ attr ] = Link.parseExtendedValue( attrValue )\n        } else {\n          attrValue = attr === 'type' ?\n            attrValue.toLowerCase() : attrValue\n          if( ref[ attr ] != null ) {\n            if( Array.isArray( ref[ attr ] ) ) {\n              ref[ attr ].push( attrValue )\n            } else {\n              ref[ attr ] = [ ref[ attr ], attrValue ]\n            }\n          } else {\n            ref[ attr ] = attrValue\n          }\n        }\n        switch( value[offset] ) {\n          case ',': state = STATE.IDLE; break\n          case ';': state = STATE.ATTR; break\n        }\n        offset++\n      } else {\n        throw new Error( 'Unknown parser state \"' + state + '\"' )\n      }\n    }\n\n    if( ref != null ) {\n      ref.rel != null ?\n        this.refs.push( ...Link.expandRelations( ref ) ) :\n        this.refs.push( ref )\n    }\n\n    ref = null\n\n    return this\n\n  }\n\n  toString() {\n\n    var refs = []\n    var link = ''\n    var ref = null\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      ref = this.refs[i]\n      link = Object.keys( this.refs[i] ).reduce( function( link, attr ) {\n        if( attr === 'uri' ) return link\n        return link + '; ' + Link.formatAttribute( attr, ref[ attr ] )\n      }, '<' + ref.uri + '>' )\n      refs.push( link )\n    }\n\n    return refs.join( ', ' )\n\n  }\n\n}\n\n/**\n * Determines whether an encoding can be\n * natively handled with a `Buffer`\n * @param {String} value\n * @returns {Boolean}\n */\nLink.isCompatibleEncoding = function( value ) {\n  return COMPATIBLE_ENCODING_PATTERN.test( value )\n}\n\nLink.parse = function( value, offset ) {\n  return new Link().parse( value, offset )\n}\n\nLink.isSingleOccurenceAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'media' ||\n    attr === 'title' || attr === 'title*'\n}\n\nLink.isTokenAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'anchor'\n}\n\nLink.escapeQuotes = function( value ) {\n  return value.replace( /\"/g, '\\\\\"' )\n}\n\nLink.expandRelations = function( ref ) {\n  var rels = ref.rel.split( ' ' )\n  return rels.map( function( rel ) {\n    var value = Object.assign( {}, ref )\n    value.rel = rel\n    return value\n  })\n}\n\n/**\n * Parses an extended value and attempts to decode it\n * @internal\n * @param {String} value\n * @return {Object}\n */\nLink.parseExtendedValue = function( value ) {\n  var parts = /([^']+)?(?:'([^']+)')?(.+)/.exec( value )\n  return {\n    language: parts[2].toLowerCase(),\n    encoding: Link.isCompatibleEncoding( parts[1] ) ?\n      null : parts[1].toLowerCase(),\n    value: Link.isCompatibleEncoding( parts[1] ) ?\n      decodeURIComponent( parts[3] ) : parts[3]\n  }\n}\n\n/**\n * Format a given extended attribute and it's value\n * @param {String} attr\n * @param {Object} data\n * @return {String}\n */\nLink.formatExtendedAttribute = function( attr, data ) {\n\n  var encoding = ( data.encoding || 'utf-8' ).toUpperCase()\n  var language = data.language || 'en'\n\n  var encodedValue = ''\n\n  if( Buffer.isBuffer( data.value ) && Link.isCompatibleEncoding( encoding ) ) {\n    encodedValue = data.value.toString( encoding )\n  } else if( Buffer.isBuffer( data.value ) ) {\n    encodedValue = data.value.toString( 'hex' )\n      .replace( /[0-9a-f]{2}/gi, '%$1' )\n  } else {\n    encodedValue = encodeURIComponent( data.value )\n  }\n\n  return attr + '=' + encoding + '\\'' +\n    language + '\\'' + encodedValue\n\n}\n\n/**\n * Format a given attribute and it's value\n * @param {String} attr\n * @param {String|Object} value\n * @return {String}\n */\nLink.formatAttribute = function( attr, value ) {\n\n  if( Array.isArray( value ) ) {\n    return value.map(( item ) => {\n      return Link.formatAttribute( attr, item )\n    }).join( '; ' )\n  }\n\n  if( attr[ attr.length - 1 ] === '*' || typeof value !== 'string' ) {\n    return Link.formatExtendedAttribute( attr, value )\n  }\n\n  if( Link.isTokenAttr( attr ) ) {\n    value = needsQuotes( value ) ?\n      '\"' + Link.escapeQuotes( value ) + '\"' :\n      Link.escapeQuotes( value )\n  } else if( needsQuotes( value ) ) {\n    value = encodeURIComponent( value )\n    // We don't need to escape <SP> <,> <;> within quotes\n    value = value\n      .replace( /%20/g, ' ' )\n      .replace( /%2C/g, ',' )\n      .replace( /%3B/g, ';' )\n\n    value = '\"' + value + '\"'\n  }\n\n  return attr + '=' + value\n\n}\n\nmodule.exports = Link\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","const DataFactory = require('./lib/DataFactory.js')\n\nmodule.exports = DataFactory\n","const BlankNode = require('./BlankNode.js')\nconst DefaultGraph = require('./DefaultGraph.js')\nconst fromTermRaw = require('./fromTerm.js')\nconst Literal = require('./Literal.js')\nconst NamedNode = require('./NamedNode.js')\nconst Quad = require('./Quad.js')\nconst Variable = require('./Variable.js')\n\nfunction namedNode (value) {\n  return new NamedNode(value)\n}\n\nfunction blankNode (value) {\n  return new BlankNode(value)\n}\n\nfunction literal (value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype)\n    }\n\n    return new Literal(value, null, DataFactory.namedNode(languageOrDatatype))\n  }\n\n  return new Literal(value, null, languageOrDatatype)\n}\n\nfunction variable (value) {\n  return new Variable(value)\n}\n\nfunction defaultGraph () {\n  return DataFactory.defaultGraphInstance\n}\n\nfunction triple (subject, predicate, object) {\n  return DataFactory.quad(subject, predicate, object)\n}\n\nfunction quad (subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph || DataFactory.defaultGraphInstance)\n}\n\nfunction fromTerm (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nfunction fromQuad (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  literal,\n  variable,\n  defaultGraph,\n  triple,\n  quad,\n  fromTerm,\n  fromQuad,\n  defaultGraphInstance: new DefaultGraph()\n}\n\nmodule.exports = DataFactory\n","class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n","class DefaultGraph {\n  equals (other) {\n    return !!other && other.termType === this.termType\n  }\n}\n\nDefaultGraph.prototype.termType = 'DefaultGraph'\nDefaultGraph.prototype.value = ''\n\nmodule.exports = DefaultGraph\n","function fromTerm (original) {\n  if (!original) {\n    return null\n  }\n\n  if (original.termType === 'BlankNode') {\n    return this.blankNode(original.value)\n  }\n\n  if (original.termType === 'DefaultGraph') {\n    return this.defaultGraph()\n  }\n\n  if (original.termType === 'Literal') {\n    return this.literal(original.value, original.language || this.namedNode(original.datatype.value))\n  }\n\n  if (original.termType === 'NamedNode') {\n    return this.namedNode(original.value)\n  }\n\n  if (original.termType === 'Quad') {\n    const subject = this.fromTerm(original.subject)\n    const predicate = this.fromTerm(original.predicate)\n    const object = this.fromTerm(original.object)\n    const graph = this.fromTerm(original.graph)\n\n    return this.quad(subject, predicate, object, graph)\n  }\n\n  if (original.termType === 'Variable') {\n    return this.variable(original.value)\n  }\n\n  throw new Error(`unknown termType ${original.termType}`)\n}\n\nmodule.exports = fromTerm\n","const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n","class NamedNode {\n  constructor (iri) {\n    this.value = iri\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nNamedNode.prototype.termType = 'NamedNode'\n\nmodule.exports = NamedNode\n","const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n","class Variable {\n  constructor (name) {\n    this.value = name\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nVariable.prototype.termType = 'Variable'\n\nmodule.exports = Variable\n","const rdf = require('@rdfjs/data-model')\nconst DatasetCore = require('./DatasetCore')\n\nfunction dataset (quads) {\n  return new DatasetCore(quads)\n}\n\nmodule.exports = Object.assign({ dataset }, rdf)\n","function isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nconst xsdString = 'http://www.w3.org/2001/XMLSchema#string'\n\nfunction termToId (term) {\n  if (typeof term === 'string') {\n    return term\n  }\n\n  if (!term) {\n    return ''\n  }\n\n  if (typeof term.id !== 'undefined' && term.termType !== 'Quad') {\n    return term.id\n  }\n\n  let subject, predicate, object, graph\n\n  // Term instantiated with another library\n  switch (term.termType) {\n    case 'NamedNode':\n      return term.value\n\n    case 'BlankNode':\n      return `_:${term.value}`\n\n    case 'Variable':\n      return `?${term.value}`\n\n    case 'DefaultGraph':\n      return ''\n\n    case 'Literal':\n      if (term.language) {\n        return `\"${term.value}\"@${term.language}`\n      }\n\n      return `\"${term.value}\"${term.datatype && term.datatype.value !== xsdString ? `^^${term.datatype.value}` : ''}`\n\n    case 'Quad':\n      // To identify RDF* quad components, we escape quotes by doubling them.\n      // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n      subject = escapeQuotes(termToId(term.subject))\n      predicate = escapeQuotes(termToId(term.predicate))\n      object = escapeQuotes(termToId(term.object))\n      graph = term.graph.termType === 'DefaultGraph' ? '' : ` ${termToId(term.graph)}`\n\n      return `<<${subject} ${predicate} ${object}${graph}>>`\n\n    default:\n      throw new Error(`Unexpected termType: ${term.termType}`)\n  }\n}\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/\n\nfunction escapeQuotes (id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`)\n}\n\nclass DatasetCore {\n  constructor (quads) {\n    // The number of quads is initially zero\n    this._size = 0\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null)\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0\n    this._ids = Object.create(null)\n    this._ids['><'] = 0 // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null) // inverse of `_ids`\n\n    this._quads = new Map()\n\n    // Add quads if passed\n    if (quads) {\n      for (const quad of quads) {\n        this.add(quad)\n      }\n    }\n  }\n\n  get size () {\n    // Return the quad count if if was cached\n    let size = this._size\n\n    if (size !== null) {\n      return size\n    }\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0\n    const graphs = this._graphs\n    let subjects, subject\n\n    for (const graphKey in graphs) {\n      for (const subjectKey in (subjects = graphs[graphKey].subjects)) {\n        for (const predicateKey in (subject = subjects[subjectKey])) {\n          size += Object.keys(subject[predicateKey]).length\n        }\n      }\n    }\n\n    this._size = size\n\n    return this._size\n  }\n\n  add (quad) {\n    // Convert terms to internal string representation\n    let subject = termToId(quad.subject)\n    let predicate = termToId(quad.predicate)\n    let object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph]\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} }\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem)\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids\n    const entities = this._entities\n    subject = ids[subject] || (ids[entities[++this._id] = subject] = this._id)\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id)\n    object = ids[object] || (ids[entities[++this._id] = object] = this._id)\n\n    this._addToIndex(graphItem.subjects, subject, predicate, object)\n    this._addToIndex(graphItem.predicates, predicate, object, subject)\n    this._addToIndex(graphItem.objects, object, subject, predicate)\n\n    this._setQuad(subject, predicate, object, graph, quad)\n\n    // The cached quad count is now invalid\n    this._size = null\n\n    return this\n  }\n\n  delete (quad) {\n    // Convert terms to internal string representation\n    let subject = termToId(quad.subject)\n    let predicate = termToId(quad.predicate)\n    let object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids\n    const graphs = this._graphs\n    let graphItem, subjects, predicates\n\n    if (!(subject = ids[subject]) || !(predicate = ids[predicate]) ||\n      !(object = ids[object]) || !(graphItem = graphs[graph]) ||\n      !(subjects = graphItem.subjects[subject]) ||\n      !(predicates = subjects[predicate]) ||\n      !(object in predicates)\n    ) {\n      return this\n    }\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects, subject, predicate, object)\n    this._removeFromIndex(graphItem.predicates, predicate, object, subject)\n    this._removeFromIndex(graphItem.objects, object, subject, predicate)\n\n    if (this._size !== null) {\n      this._size--\n    }\n\n    this._deleteQuad(subject, predicate, object, graph)\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) { // eslint-disable-line no-unreachable-loop\n      return this\n    }\n\n    delete graphs[graph]\n\n    return this\n  }\n\n  has (quad) {\n    // Convert terms to internal string representation\n    const subject = termToId(quad.subject)\n    const predicate = termToId(quad.predicate)\n    const object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    const graphItem = this._graphs[graph]\n\n    if (!graphItem) {\n      return false\n    }\n\n    const ids = this._ids\n    let subjectId, predicateId, objectId\n\n    // Translate IRIs to internal index keys.\n    if (\n      (isString(subject) && !(subjectId = ids[subject])) ||\n      (isString(predicate) && !(predicateId = ids[predicate])) ||\n      (isString(object) && !(objectId = ids[object]))\n    ) {\n      return false\n    }\n\n    return this._countInIndex(graphItem.objects, objectId, subjectId, predicateId) === 1\n  }\n\n  match (subject, predicate, object, graph) {\n    return this._createDataset(this._match(subject, predicate, object, graph))\n  }\n\n  [Symbol.iterator] () {\n    return this._match()[Symbol.iterator]()\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex (index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {})\n    const index2 = index1[key1] || (index1[key1] = {})\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2\n\n    if (!existed) {\n      index2[key2] = null\n    }\n\n    return !existed\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex (index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0]\n    const index2 = index1[key1]\n    delete index2[key2]\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) { // eslint-disable-line no-unreachable-loop\n      return\n    }\n\n    delete index1[key1]\n\n    for (const key in index1) { // eslint-disable-line no-unreachable-loop\n      return\n    }\n\n    delete index0[key0]\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex (index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) {\n      (tmp = index0, index0 = {})[key0] = tmp[key0]\n    }\n\n    for (const value0 in index0) {\n      index1 = index0[value0]\n\n      if (index1) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) {\n          (tmp = index1, index1 = {})[key1] = tmp[key1]\n        }\n\n        for (const value1 in index1) {\n          index2 = index1[value1]\n\n          if (index2) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2)\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = {\n                [name0]: value0,\n                [name1]: value1,\n                [name2]: values[l]\n              }\n\n              const quad = this._getQuad(parts.subject, parts.predicate, parts.object, graph)\n\n              if (array) {\n                array.push(quad)\n              } else if (callback(quad)) {\n                return true\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return array\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex (index0, key0, key1, key2) {\n    let count = 0\n    let tmp, index1, index2\n\n    // If a key is specified, count only that part of index 0\n    if (key0) {\n      (tmp = index0, index0 = {})[key0] = tmp[key0]\n    }\n\n    for (const value0 in index0) {\n      index1 = index0[value0]\n\n      if (index1) {\n        // If a key is specified, count only that part of index 1\n        if (key1) {\n          (tmp = index1, index1 = {})[key1] = tmp[key1]\n        }\n\n        for (const value1 in index1) {\n          index2 = index1[value1]\n\n          if (index2) {\n            if (key2) {\n              // If a key is specified, count the quad if it exists\n              (key2 in index2) && count++\n            } else {\n              // Otherwise, count all quads\n              count += Object.keys(index2).length\n            }\n          }\n        }\n      }\n    }\n\n    return count\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs (graph) {\n    if (!isString(graph)) {\n      return this._graphs\n    }\n\n    return {\n      [graph]: this._graphs[graph]\n    }\n  }\n\n  _match (subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject)\n    predicate = predicate && termToId(predicate)\n    object = object && termToId(object)\n    graph = graph && termToId(graph)\n\n    const quads = []\n    const graphs = this._getGraphs(graph)\n    const ids = this._ids\n    let content, subjectId, predicateId, objectId\n\n    // Translate IRIs to internal index keys.\n    if (\n      (isString(subject) && !(subjectId = ids[subject])) ||\n      (isString(predicate) && !(predicateId = ids[predicate])) ||\n      (isString(object) && !(objectId = ids[object]))\n    ) {\n      return quads\n    }\n\n    for (const graphId in graphs) {\n      content = graphs[graphId]\n\n      // Only if the specified graph contains triples, there can be results\n      if (content) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId, 'object', 'subject', 'predicate', graphId, null, quads)\n          } else {\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null, 'subject', 'predicate', 'object', graphId, null, quads)\n          }\n        } else if (predicateId) {\n          // if only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null, 'predicate', 'object', 'subject', graphId, null, quads)\n        } else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null, 'object', 'subject', 'predicate', graphId, null, quads)\n        } else {\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null, 'subject', 'predicate', 'object', graphId, null, quads)\n        }\n      }\n    }\n\n    return quads\n  }\n\n  _getQuad (subjectId, predicateId, objectId, graphId) {\n    return this._quads.get(this._toId(subjectId, predicateId, objectId, graphId))\n  }\n\n  _setQuad (subjectId, predicateId, objectId, graphId, quad) {\n    this._quads.set(this._toId(subjectId, predicateId, objectId, graphId), quad)\n  }\n\n  _deleteQuad (subjectId, predicateId, objectId, graphId) {\n    this._quads.delete(this._toId(subjectId, predicateId, objectId, graphId))\n  }\n\n  _createDataset (quads) {\n    return new this.constructor(quads)\n  }\n\n  _toId (subjectId, predicateId, objectId, graphId) {\n    return `${subjectId}:${predicateId}:${objectId}:${graphId}`\n  }\n}\n\nmodule.exports = DatasetCore\n","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2019 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = require('rdf-canonize');\nconst platform = require('./platform');\nconst util = require('./util');\nconst ContextResolver = require('./ContextResolver');\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\nconst LRU = require('lru-cache');\nconst NQuads = require('./NQuads');\n\nconst {expand: _expand} = require('./expand');\nconst {flatten: _flatten} = require('./flatten');\nconst {fromRDF: _fromRDF} = require('./fromRdf');\nconst {toRDF: _toRDF} = require('./toRdf');\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault,\n  cleanupNull: _cleanupNull\n} = require('./frame');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = require('./types');\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri\n} = require('./compact');\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = require('./nodeMap');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n// resolved context cache\n// TODO: consider basing max on context size rather than number\nconst RESOLVED_CONTEXT_CACHE_MAX_SIZE = 100;\nconst _resolvedContextCache = new LRU({max: RESOLVED_CONTEXT_CACHE_MAX_SIZE});\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [compactionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b'),\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = await _compact({\n    activeCtx,\n    element: expanded,\n    options,\n    compactionMap: options.compactionMap\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.expansionMap === false) {\n    options.expansionMap = undefined;\n  }\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  for(const localCtx of contextsToProcess) {\n    activeCtx = await _processContext({activeCtx, localCtx, options});\n  }\n\n  // expand resolved input\n  let expanded = await _expand({\n    activeCtx,\n    element: toResolve.input,\n    options,\n    expansionMap: options.expansionMap\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@once',\n    explicit: false,\n    requireAll: false,\n    omitDefault: false,\n    bnodesToClear: [],\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), frameContext, options);\n\n  // mode specific defaults\n  if(!options.hasOwnProperty('omitGraph')) {\n    options.omitGraph = _processingMode(activeCtx, 1.1);\n  }\n  if(!options.hasOwnProperty('pruneBlankNodeIdentifiers')) {\n    options.pruneBlankNodeIdentifiers = _processingMode(activeCtx, 1.1);\n  }\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = {...options};\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  const frameKeys = Object.keys(frame)\n    .map(key => _expandIri(activeCtx, key, {vocab: true}));\n  opts.merged = !frameKeys.includes('@graph');\n  opts.is11 = _processingMode(activeCtx, 1.1);\n\n  // do framing\n  const framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  opts.graph = !options.omitGraph;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  let compacted = await jsonld.compact(framed, frameContext, opts);\n\n  // replace @null with null, compacting arrays\n  opts.link = {};\n  compacted = _cleanupNull(compacted, opts);\n\n  return compacted;\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, options)] the document loader.\n *          [useNative] true to use a native canonize algorithm\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    algorithm: 'URDNA2015',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = {...options};\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  const {format} = options;\n  let {rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // rdfParser must be synchronous or return a promise, no callback support\n  const parsedDataset = await rdfParser(dataset);\n  return _fromRDF(parsedDataset, options);\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = {...options};\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * The default document loader for external documents.\n *\n * @param url the URL to load.\n *\n * @return a promise that resolves to the remote document.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = v\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = options.documentLoader;\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n\n  return _processContext({activeCtx, localCtx, options});\n};\n\n// backwards compatibility\njsonld.getContextValue = require('./context').getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given one parameter,\n * a string of input. An RDF dataset parser can be synchronous or\n * asynchronous (by returning a promise).\n *\n * @param contentType the content-type for the parser.\n * @param parser(input) the parser function (takes a string as a parameter\n *          and either returns an RDF dataset or a Promise that resolves to one.\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n/* URL API */\njsonld.url = require('./url');\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = require('./RequestQueue');\n\n/* WebIDL API */\njsonld.JsonLdProcessor = require('./JsonLdProcessor')(jsonld);\n\nplatform.setupGlobals(jsonld);\nplatform.setupDocumentLoaders(jsonld);\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  return Object.assign({}, {documentLoader}, defaults, options);\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./lib');\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2021 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\nconst URGNA2012 = require('./URGNA2012');\nconst URDNA2015Sync = require('./URDNA2015Sync');\nconst URGNA2012Sync = require('./URGNA2012Sync');\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = require('rdf-canonize-native');\n} catch(e) {}\n\nconst api = {};\nmodule.exports = api;\n\n// expose helpers\napi.NQuads = require('./NQuads');\napi.IdentifierIssuer = require('./IdentifierIssuer');\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\napi._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\napi.canonize = async function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    // TODO: convert native algorithm to Promise-based async\n    return new Promise((resolve, reject) =>\n      rdfCanonizeNative.canonize(dataset, options, (err, canonical) =>\n        err ? reject(err) : resolve(canonical)));\n  }\n\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n/**\n * This method is no longer available in the public API, it is for testing\n * only. It synchronously canonizes an RDF dataset and does not work in the\n * browser.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return the RDF dataset in canonical form.\n */\napi._canonizeSync = function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      return rdfCanonizeNative.canonizeSync(dataset, options);\n    }\n    throw new Error('rdf-canonize-native not available');\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015 {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  async main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    let i = 0;\n    for(const id of nonNormalized) {\n      // Note: batch hashing first degree quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // steps 5.3.1 and 5.3.2:\n      await this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = await this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  async hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = await md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  async hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  async hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = await this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      let i = 0;\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n        // Note: batch permutations 3 at a time\n        if(++i % 3 === 0) {\n          await this._yield();\n        }\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = await this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: await md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // Note: batch hashing related blank node quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      await Promise.all([\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.subject, position: 's',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.object, position: 'o',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.graph, position: 'g',\n          id, issuer, hashToRelated\n        })\n      ]);\n    }\n\n    return hashToRelated;\n  }\n\n  async _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = await this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  async _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = await this.hashRelatedBlankNode(\n      related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n\n  async _yield() {\n    return new Promise(resolve => setImmediate(resolve));\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  constructor(prefix, existing = new Map(), counter = 0) {\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const {prefix, _existing, counter} = this;\n    return new IdentifierIssuer(prefix, new Map(_existing), counter);\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    const existing = old && this._existing.get(old);\n    if(existing) {\n      return existing;\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter++;\n\n    // save mapping\n    if(old) {\n      this._existing.set(old, identifier);\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return this._existing.has(old);\n  }\n\n  /**\n   * Returns all of the IDs that have been issued new IDs in the order in\n   * which they were issued new IDs.\n   *\n   * @return the list of old IDs that has been issued new IDs in order.\n   */\n  getOldIds() {\n    return [...this._existing.keys()];\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nrequire('setimmediate');\n\nconst crypto = self.crypto || self.msCrypto;\n\n// TODO: synchronous version no longer supported in browser\n\nmodule.exports = class MessageDigest {\n  /**\n   * Creates a new MessageDigest.\n   *\n   * @param algorithm the algorithm to use.\n   */\n  constructor(algorithm) {\n    // check if crypto.subtle is available\n    // check is here rather than top-level to only fail if class is used\n    if(!(crypto && crypto.subtle)) {\n      throw new Error('crypto.subtle not found.');\n    }\n    if(algorithm === 'sha256') {\n      this.algorithm = {name: 'SHA-256'};\n    } else if(algorithm === 'sha1') {\n      this.algorithm = {name: 'SHA-1'};\n    } else {\n      throw new Error(`Unsupport algorithm \"${algorithm}\".`);\n    }\n    this._content = '';\n  }\n\n  update(msg) {\n    this._content += msg;\n  }\n\n  async digest() {\n    const data = new TextEncoder().encode(this._content);\n    const buffer = new Uint8Array(\n      await crypto.subtle.digest(this.algorithm, data));\n    // return digest in hex\n    let hex = '';\n    for(let i = 0; i < buffer.length; ++i) {\n      hex += buffer[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n  }\n};\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: convert to ES6 iterable?\n\nmodule.exports = class Permuter {\n  /**\n   * A Permuter iterates over all possible permutations of the given array\n   * of elements.\n   *\n   * @param list the array of elements to iterate over.\n   */\n  constructor(list) {\n    // original array\n    this.current = list.sort();\n    // indicates whether there are more permutations\n    this.done = false;\n    // directional info for permutation algorithm\n    this.dir = new Map();\n    for(let i = 0; i < list.length; ++i) {\n      this.dir.set(list[i], true);\n    }\n  }\n\n  /**\n   * Returns true if there is another permutation.\n   *\n   * @return true if there is another permutation, false if not.\n   */\n  hasNext() {\n    return !this.done;\n  }\n\n  /**\n   * Gets the next permutation. Call hasNext() to ensure there is another one\n   * first.\n   *\n   * @return the next permutation.\n   */\n  next() {\n    // copy current permutation to return it\n    const {current, dir} = this;\n    const rval = current.slice();\n\n    /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n     permutation algorithm. */\n\n    // get largest mobile element k\n    // (mobile: element is greater than the one it is looking at)\n    let k = null;\n    let pos = 0;\n    const length = current.length;\n    for(let i = 0; i < length; ++i) {\n      const element = current[i];\n      const left = dir.get(element);\n      if((k === null || element > k) &&\n        ((left && i > 0 && element > current[i - 1]) ||\n        (!left && i < (length - 1) && element > current[i + 1]))) {\n        k = element;\n        pos = i;\n      }\n    }\n\n    // no more permutations\n    if(k === null) {\n      this.done = true;\n    } else {\n      // swap k and the element it is looking at\n      const swap = dir.get(k) ? pos - 1 : pos + 1;\n      current[pos] = current[swap];\n      current[swap] = k;\n\n      // reverse the direction of all elements larger than k\n      for(const element of current) {\n        if(element > k) {\n          dir.set(element, !dir.get(element));\n        }\n      }\n    }\n\n    return rval;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// eslint-disable-next-line no-unused-vars\nconst TERMS = ['subject', 'predicate', 'object', 'graph'];\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst RDF_LANGSTRING = RDF + 'langString';\nconst XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nconst TYPE_NAMED_NODE = 'NamedNode';\nconst TYPE_BLANK_NODE = 'BlankNode';\nconst TYPE_LITERAL = 'Literal';\nconst TYPE_DEFAULT_GRAPH = 'DefaultGraph';\n\n// build regexes\nconst REGEX = {};\n(() => {\n  const iri = '(?:<([^:]+:[^>]*)>)';\n  // https://www.w3.org/TR/turtle/#grammar-production-BLANK_NODE_LABEL\n  const PN_CHARS_BASE =\n    'A-Z' + 'a-z' +\n    '\\u00C0-\\u00D6' +\n    '\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02FF' +\n    '\\u0370-\\u037D' +\n    '\\u037F-\\u1FFF' +\n    '\\u200C-\\u200D' +\n    '\\u2070-\\u218F' +\n    '\\u2C00-\\u2FEF' +\n    '\\u3001-\\uD7FF' +\n    '\\uF900-\\uFDCF' +\n    '\\uFDF0-\\uFFFD';\n    // TODO:\n    //'\\u10000-\\uEFFFF';\n  const PN_CHARS_U =\n    PN_CHARS_BASE +\n    '_';\n  const PN_CHARS =\n    PN_CHARS_U +\n    '0-9' +\n    '-' +\n    '\\u00B7' +\n    '\\u0300-\\u036F' +\n    '\\u203F-\\u2040';\n  const BLANK_NODE_LABEL =\n    '(_:' +\n      '(?:[' + PN_CHARS_U + '0-9])' +\n      '(?:(?:[' + PN_CHARS + '.])*(?:[' + PN_CHARS + ']))?' +\n    ')';\n  const bnode = BLANK_NODE_LABEL;\n  const plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  const datatype = '(?:\\\\^\\\\^' + iri + ')';\n  const language = '(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*))';\n  const literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  const ws = '[ \\\\t]+';\n  const wso = '[ \\\\t]*';\n\n  // define quad part regexes\n  const subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  const property = iri + ws;\n  const object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  const graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // end of line and empty regexes\n  REGEX.eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  REGEX.empty = new RegExp('^' + wso + '$');\n\n  // full quad regex\n  REGEX.quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n})();\n\nmodule.exports = class NQuads {\n  /**\n   * Parses RDF in the form of N-Quads.\n   *\n   * @param input the N-Quads input to parse.\n   *\n   * @return an RDF dataset (an array of quads per http://rdf.js.org/).\n   */\n  static parse(input) {\n    // build RDF dataset\n    const dataset = [];\n\n    const graphs = {};\n\n    // split N-Quad input into lines\n    const lines = input.split(REGEX.eoln);\n    let lineNumber = 0;\n    for(const line of lines) {\n      lineNumber++;\n\n      // skip empty lines\n      if(REGEX.empty.test(line)) {\n        continue;\n      }\n\n      // parse quad\n      const match = line.match(REGEX.quad);\n      if(match === null) {\n        throw new Error('N-Quads parse error on line ' + lineNumber + '.');\n      }\n\n      // create RDF quad\n      const quad = {subject: null, predicate: null, object: null, graph: null};\n\n      // get subject\n      if(match[1] !== undefined) {\n        quad.subject = {termType: TYPE_NAMED_NODE, value: match[1]};\n      } else {\n        quad.subject = {termType: TYPE_BLANK_NODE, value: match[2]};\n      }\n\n      // get predicate\n      quad.predicate = {termType: TYPE_NAMED_NODE, value: match[3]};\n\n      // get object\n      if(match[4] !== undefined) {\n        quad.object = {termType: TYPE_NAMED_NODE, value: match[4]};\n      } else if(match[5] !== undefined) {\n        quad.object = {termType: TYPE_BLANK_NODE, value: match[5]};\n      } else {\n        quad.object = {\n          termType: TYPE_LITERAL,\n          value: undefined,\n          datatype: {\n            termType: TYPE_NAMED_NODE\n          }\n        };\n        if(match[7] !== undefined) {\n          quad.object.datatype.value = match[7];\n        } else if(match[8] !== undefined) {\n          quad.object.datatype.value = RDF_LANGSTRING;\n          quad.object.language = match[8];\n        } else {\n          quad.object.datatype.value = XSD_STRING;\n        }\n        quad.object.value = _unescape(match[6]);\n      }\n\n      // get graph\n      if(match[9] !== undefined) {\n        quad.graph = {\n          termType: TYPE_NAMED_NODE,\n          value: match[9]\n        };\n      } else if(match[10] !== undefined) {\n        quad.graph = {\n          termType: TYPE_BLANK_NODE,\n          value: match[10]\n        };\n      } else {\n        quad.graph = {\n          termType: TYPE_DEFAULT_GRAPH,\n          value: ''\n        };\n      }\n\n      // only add quad if it is unique in its graph\n      if(!(quad.graph.value in graphs)) {\n        graphs[quad.graph.value] = [quad];\n        dataset.push(quad);\n      } else {\n        let unique = true;\n        const quads = graphs[quad.graph.value];\n        for(const q of quads) {\n          if(_compareTriples(q, quad)) {\n            unique = false;\n            break;\n          }\n        }\n        if(unique) {\n          quads.push(quad);\n          dataset.push(quad);\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  /**\n   * Converts an RDF dataset to N-Quads.\n   *\n   * @param dataset (array of quads) the RDF dataset to convert.\n   *\n   * @return the N-Quads string.\n   */\n  static serialize(dataset) {\n    if(!Array.isArray(dataset)) {\n      dataset = NQuads.legacyDatasetToQuads(dataset);\n    }\n    const quads = [];\n    for(const quad of dataset) {\n      quads.push(NQuads.serializeQuad(quad));\n    }\n    return quads.sort().join('');\n  }\n\n  /**\n   * Converts an RDF quad to an N-Quad string (a single quad).\n   *\n   * @param quad the RDF quad convert.\n   *\n   * @return the N-Quad string.\n   */\n  static serializeQuad(quad) {\n    const s = quad.subject;\n    const p = quad.predicate;\n    const o = quad.object;\n    const g = quad.graph;\n\n    let nquad = '';\n\n    // subject can only be NamedNode or BlankNode\n    if(s.termType === TYPE_NAMED_NODE) {\n      nquad += `<${s.value}>`;\n    } else {\n      nquad += `${s.value}`;\n    }\n\n    // predicate can only be NamedNode\n    nquad += ` <${p.value}> `;\n\n    // object is NamedNode, BlankNode, or Literal\n    if(o.termType === TYPE_NAMED_NODE) {\n      nquad += `<${o.value}>`;\n    } else if(o.termType === TYPE_BLANK_NODE) {\n      nquad += o.value;\n    } else {\n      nquad += `\"${_escape(o.value)}\"`;\n      if(o.datatype.value === RDF_LANGSTRING) {\n        if(o.language) {\n          nquad += `@${o.language}`;\n        }\n      } else if(o.datatype.value !== XSD_STRING) {\n        nquad += `^^<${o.datatype.value}>`;\n      }\n    }\n\n    // graph can only be NamedNode or BlankNode (or DefaultGraph, but that\n    // does not add to `nquad`)\n    if(g.termType === TYPE_NAMED_NODE) {\n      nquad += ` <${g.value}>`;\n    } else if(g.termType === TYPE_BLANK_NODE) {\n      nquad += ` ${g.value}`;\n    }\n\n    nquad += ' .\\n';\n    return nquad;\n  }\n\n  /**\n   * Converts a legacy-formatted dataset to an array of quads dataset per\n   * http://rdf.js.org/.\n   *\n   * @param dataset the legacy dataset to convert.\n   *\n   * @return the array of quads dataset.\n   */\n  static legacyDatasetToQuads(dataset) {\n    const quads = [];\n\n    const termTypeMap = {\n      'blank node': TYPE_BLANK_NODE,\n      IRI: TYPE_NAMED_NODE,\n      literal: TYPE_LITERAL\n    };\n\n    for(const graphName in dataset) {\n      const triples = dataset[graphName];\n      triples.forEach(triple => {\n        const quad = {};\n        for(const componentName in triple) {\n          const oldComponent = triple[componentName];\n          const newComponent = {\n            termType: termTypeMap[oldComponent.type],\n            value: oldComponent.value\n          };\n          if(newComponent.termType === TYPE_LITERAL) {\n            newComponent.datatype = {\n              termType: TYPE_NAMED_NODE\n            };\n            if('datatype' in oldComponent) {\n              newComponent.datatype.value = oldComponent.datatype;\n            }\n            if('language' in oldComponent) {\n              if(!('datatype' in oldComponent)) {\n                newComponent.datatype.value = RDF_LANGSTRING;\n              }\n              newComponent.language = oldComponent.language;\n            } else if(!('datatype' in oldComponent)) {\n              newComponent.datatype.value = XSD_STRING;\n            }\n          }\n          quad[componentName] = newComponent;\n        }\n        if(graphName === '@default') {\n          quad.graph = {\n            termType: TYPE_DEFAULT_GRAPH,\n            value: ''\n          };\n        } else {\n          quad.graph = {\n            termType: graphName.startsWith('_:') ?\n              TYPE_BLANK_NODE : TYPE_NAMED_NODE,\n            value: graphName\n          };\n        }\n        quads.push(quad);\n      });\n    }\n\n    return quads;\n  }\n};\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareTriples(t1, t2) {\n  // compare subject and object types first as it is the quickest check\n  if(!(t1.subject.termType === t2.subject.termType &&\n    t1.object.termType === t2.object.termType)) {\n    return false;\n  }\n  // compare values\n  if(!(t1.subject.value === t2.subject.value &&\n    t1.predicate.value === t2.predicate.value &&\n    t1.object.value === t2.object.value)) {\n    return false;\n  }\n  if(t1.object.termType !== TYPE_LITERAL) {\n    // no `datatype` or `language` to check\n    return true;\n  }\n  return (\n    (t1.object.datatype.termType === t2.object.datatype.termType) &&\n    (t1.object.language === t2.object.language) &&\n    (t1.object.datatype.value === t2.object.datatype.value)\n  );\n}\n\nconst _escapeRegex = /[\"\\\\\\n\\r]/g;\n/**\n * Escape string to N-Quads literal\n */\nfunction _escape(s) {\n  return s.replace(_escapeRegex, function(match) {\n    switch(match) {\n      case '\"': return '\\\\\"';\n      case '\\\\': return '\\\\\\\\';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n    }\n  });\n}\n\nconst _unescapeRegex =\n  /(?:\\\\([tbnrf\"'\\\\]))|(?:\\\\u([0-9A-Fa-f]{4}))|(?:\\\\U([0-9A-Fa-f]{8}))/g;\n/**\n * Unescape N-Quads literal to string\n */\nfunction _unescape(s) {\n  return s.replace(_unescapeRegex, function(match, code, u, U) {\n    if(code) {\n      switch(code) {\n        case 't': return '\\t';\n        case 'b': return '\\b';\n        case 'n': return '\\n';\n        case 'r': return '\\r';\n        case 'f': return '\\f';\n        case '\"': return '\"';\n        case '\\'': return '\\'';\n        case '\\\\': return '\\\\';\n      }\n    }\n    if(u) {\n      return String.fromCharCode(parseInt(u, 16));\n    }\n    if(U) {\n      // FIXME: support larger values\n      throw new Error('Unsupported U escape');\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // Note: batch hashing related blank nodes 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = await this.hashRelatedBlankNode(\n        related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015Sync {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    for(const id of nonNormalized) {\n      // steps 5.3.1 and 5.3.2:\n      this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // or graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.subject, position: 's',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.object, position: 'o',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.graph, position: 'g',\n        id, issuer, hashToRelated\n      });\n    }\n\n    return hashToRelated;\n  }\n\n  _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015Sync = require('./URDNA2015Sync');\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst xhrLoader = require('./documentLoaders/xhr');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Setup browser document loaders.\n *\n * @param jsonld the jsonld api.\n */\napi.setupDocumentLoaders = function(jsonld) {\n  if(typeof XMLHttpRequest !== 'undefined') {\n    jsonld.documentLoaders.xhr = xhrLoader;\n    // use xhr document loader by default\n    jsonld.useDocumentLoader('xhr');\n  }\n};\n\n/**\n * Setup browser globals.\n *\n * @param jsonld the jsonld api.\n */\napi.setupGlobals = function(jsonld) {\n  // setup browser global JsonLdProcessor\n  if(typeof globalThis.JsonLdProcessor === 'undefined') {\n    Object.defineProperty(globalThis, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: jsonld.JsonLdProcessor\n    });\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {parseLinkHeader, buildHeaders} = require('../util');\nconst {LINK_HEADER_CONTEXT} = require('../constants');\nconst JsonLdError = require('../JsonLdError');\nconst RequestQueue = require('../RequestQueue');\nconst {prependBase} = require('../url');\n\nconst REGEX_LINK_HEADER = /(^|(\\r\\n))link:/i;\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\nmodule.exports = ({\n  secure,\n  headers = {},\n  xhr\n} = {headers: {}}) => {\n  headers = buildHeaders(headers);\n  const queue = new RequestQueue();\n  return queue.wrapLoader(loader);\n\n  async function loader(url) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n\n    let req;\n    try {\n      req = await _get(xhr, url, headers);\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    if(req.status >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + req.statusText,\n        'jsonld.LoadDocumentError', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: req.status\n        });\n    }\n\n    let doc = {contextUrl: null, documentUrl: url, document: req.response};\n    let alternate = null;\n\n    // handle Link Header (avoid unsafe header warning by existence testing)\n    const contentType = req.getResponseHeader('Content-Type');\n    let linkHeader;\n    if(REGEX_LINK_HEADER.test(req.getAllResponseHeaders())) {\n      linkHeader = req.getResponseHeader('Link');\n    }\n    if(linkHeader && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeaders = parseLinkHeader(linkHeader);\n      const linkedContext = linkHeaders[LINK_HEADER_CONTEXT];\n      if(Array.isArray(linkedContext)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one ' +\n          'associated HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkedContext) {\n        doc.contextUrl = linkedContext.target;\n      }\n\n      // \"alternate\" link header is a redirect\n      alternate = linkHeaders['alternate'];\n      if(alternate &&\n        alternate.type == 'application/ld+json' &&\n        !(contentType || '').match(/^application\\/(\\w*\\+)?json$/)) {\n        doc = await loader(prependBase(url, alternate.target));\n      }\n    }\n\n    return doc;\n  }\n};\n\nfunction _get(xhr, url, headers) {\n  xhr = xhr || XMLHttpRequest;\n  const req = new xhr();\n  return new Promise((resolve, reject) => {\n    req.onload = () => resolve(req);\n    req.onerror = err => reject(err);\n    req.open('GET', url, true);\n    for(const k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n    req.send();\n  });\n}\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = require('rdf-canonize').IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\n\n// constants\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\n\n/**\n * Clones an object, array, Map, Set, or string/number. If a typed JavaScript\n * object is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(value instanceof Map) {\n      rval = new Map();\n      for(const [k, v] of value) {\n        rval.set(k, api.clone(v));\n      }\n    } else if(value instanceof Set) {\n      rval = new Set();\n      for(const v of value) {\n        rval.add(api.clone(v));\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result['rel'] || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rval.hasOwnProperty(rel)) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = (v, isFrame) => {\n  if(types.isString(v)) {\n    return;\n  }\n\n  if(types.isArray(v) && v.every(vv => types.isString(vv))) {\n    return;\n  }\n  if(isFrame && types.isObject(v)) {\n    switch(Object.keys(v).length) {\n      case 0:\n        // empty object is wildcard\n        return;\n      case 1:\n        // default entry is all strings\n        if('@default' in v &&\n          api.asArray(v['@default']).every(vv => types.isString(vv))) {\n          return;\n        }\n    }\n  }\n\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n    'strings, an empty object, ' +\n    'or a default object.', 'jsonld.SyntaxError',\n    {code: 'invalid type value', value: v});\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(subject.hasOwnProperty(property)) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [valueIsArray] true if the value to be added should be preserved as\n *          an array (lists) (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n *        [prependValue] false to prepend value to any existing values.\n *          (default: false)\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('valueIsArray' in options)) {\n    options.valueIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n  if(!('prependValue' in options)) {\n    options.prependValue = false;\n  }\n\n  if(options.valueIsArray) {\n    subject[property] = value;\n  } else if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !subject.hasOwnProperty(property)) {\n      subject[property] = [];\n    }\n    if(options.prependValue) {\n      value = value.concat(subject[property]);\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(subject.hasOwnProperty(property)) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      if(options.prependValue) {\n        subject[property].unshift(value);\n      } else {\n        subject[property].push(value);\n      }\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      return (v['@id'].indexOf('_:') === 0);\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  // TODO: Deprecated and will be removed later. Use LINK_HEADER_CONTEXT.\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  LINK_HEADER_CONTEXT: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_JSON_LITERAL: RDF + 'JSON',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(api.isAbsolute(iri)) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if((path.length > 0 || base.authority) && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // if path was absolute, ensure output has leading /\n  if(path[0] === '/' && output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^\\s]*$/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n} = require('./types');\nconst {\n  asArray: _asArray\n} = require('./util');\nconst {prependBase} = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst ResolvedContext = require('./ResolvedContext');\n\nconst MAX_CONTEXT_URLS = 10;\n\nmodule.exports = class ContextResolver {\n  /**\n   * Creates a ContextResolver.\n   *\n   * @param sharedCache a shared LRU cache with `get` and `set` APIs.\n   */\n  constructor({sharedCache}) {\n    this.perOpCache = new Map();\n    this.sharedCache = sharedCache;\n  }\n\n  async resolve({\n    activeCtx, context, documentLoader, base, cycles = new Set()\n  }) {\n    // process `@context`\n    if(context && _isObject(context) && context['@context']) {\n      context = context['@context'];\n    }\n\n    // context is one or more contexts\n    context = _asArray(context);\n\n    // resolve each context in the array\n    const allResolved = [];\n    for(const ctx of context) {\n      if(_isString(ctx)) {\n        // see if `ctx` has been resolved before...\n        let resolved = this._get(ctx);\n        if(!resolved) {\n          // not resolved yet, resolve\n          resolved = await this._resolveRemoteContext(\n            {activeCtx, url: ctx, documentLoader, base, cycles});\n        }\n\n        // add to output and continue\n        if(_isArray(resolved)) {\n          allResolved.push(...resolved);\n        } else {\n          allResolved.push(resolved);\n        }\n        continue;\n      }\n      if(ctx === null) {\n        // handle `null` context, nothing to cache\n        allResolved.push(new ResolvedContext({document: null}));\n        continue;\n      }\n      if(!_isObject(ctx)) {\n        _throwInvalidLocalContext(context);\n      }\n      // context is an object, get/create `ResolvedContext` for it\n      const key = JSON.stringify(ctx);\n      let resolved = this._get(key);\n      if(!resolved) {\n        // create a new static `ResolvedContext` and cache it\n        resolved = new ResolvedContext({document: ctx});\n        this._cacheResolvedContext({key, resolved, tag: 'static'});\n      }\n      allResolved.push(resolved);\n    }\n\n    return allResolved;\n  }\n\n  _get(key) {\n    // get key from per operation cache; no `tag` is used with this cache so\n    // any retrieved context will always be the same during a single operation\n    let resolved = this.perOpCache.get(key);\n    if(!resolved) {\n      // see if the shared cache has a `static` entry for this URL\n      const tagMap = this.sharedCache.get(key);\n      if(tagMap) {\n        resolved = tagMap.get('static');\n        if(resolved) {\n          this.perOpCache.set(key, resolved);\n        }\n      }\n    }\n    return resolved;\n  }\n\n  _cacheResolvedContext({key, resolved, tag}) {\n    this.perOpCache.set(key, resolved);\n    if(tag !== undefined) {\n      let tagMap = this.sharedCache.get(key);\n      if(!tagMap) {\n        tagMap = new Map();\n        this.sharedCache.set(key, tagMap);\n      }\n      tagMap.set(tag, resolved);\n    }\n    return resolved;\n  }\n\n  async _resolveRemoteContext({activeCtx, url, documentLoader, base, cycles}) {\n    // resolve relative URL and fetch context\n    url = prependBase(base, url);\n    const {context, remoteDoc} = await this._fetchContext(\n      {activeCtx, url, documentLoader, cycles});\n\n    // update base according to remote document and resolve any relative URLs\n    base = remoteDoc.documentUrl || url;\n    _resolveContextUrls({context, base});\n\n    // resolve, cache, and return context\n    const resolved = await this.resolve(\n      {activeCtx, context, documentLoader, base, cycles});\n    this._cacheResolvedContext({key: url, resolved, tag: remoteDoc.tag});\n    return resolved;\n  }\n\n  async _fetchContext({activeCtx, url, documentLoader, cycles}) {\n    // check for max context URLs fetched during a resolve operation\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'loading remote context failed' :\n            'context overflow',\n          max: MAX_CONTEXT_URLS\n        });\n    }\n\n    // check for context URL cycle\n    // shortcut to avoid extra work that would eventually hit the max above\n    if(cycles.has(url)) {\n      throw new JsonLdError(\n        'Cyclical @context URLs detected.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'recursive context inclusion' :\n            'context overflow',\n          url\n        });\n    }\n\n    // track cycles\n    cycles.add(url);\n\n    let context;\n    let remoteDoc;\n\n    try {\n      remoteDoc = await documentLoader(url);\n      context = remoteDoc.document || null;\n      // parse string context as JSON\n      if(_isString(context)) {\n        context = JSON.parse(context);\n      }\n    } catch(e) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n        'Possible causes are an inaccessible URL perhaps due to ' +\n        'a same-origin policy (ensure the server uses CORS if you are ' +\n        'using client-side JavaScript), too many redirects, a ' +\n        'non-JSON response, or more than one HTTP Link Header was ' +\n        'provided for a remote context.',\n        'jsonld.InvalidUrl',\n        {code: 'loading remote context failed', url, cause: e});\n    }\n\n    // ensure ctx is an object\n    if(!_isObject(context)) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a JSON object. The ' +\n        'response was valid JSON, but it was not a JSON object.',\n        'jsonld.InvalidUrl', {code: 'invalid remote context', url});\n    }\n\n    // use empty context if no @context key is present\n    if(!('@context' in context)) {\n      context = {'@context': {}};\n    } else {\n      context = {'@context': context['@context']};\n    }\n\n    // append @context URL to context if given\n    if(remoteDoc.contextUrl) {\n      if(!_isArray(context['@context'])) {\n        context['@context'] = [context['@context']];\n      }\n      context['@context'].push(remoteDoc.contextUrl);\n    }\n\n    return {context, remoteDoc};\n  }\n};\n\nfunction _throwInvalidLocalContext(ctx) {\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; @context must be an object.',\n    'jsonld.SyntaxError', {\n      code: 'invalid local context', context: ctx\n    });\n}\n\n/**\n * Resolve all relative `@context` URLs in the given context by inline\n * replacing them with absolute URLs.\n *\n * @param context the context.\n * @param base the base IRI to use to resolve relative IRIs.\n */\nfunction _resolveContextUrls({context, base}) {\n  if(!context) {\n    return;\n  }\n\n  const ctx = context['@context'];\n\n  if(_isString(ctx)) {\n    context['@context'] = prependBase(base, ctx);\n    return;\n  }\n\n  if(_isArray(ctx)) {\n    for(let i = 0; i < ctx.length; ++i) {\n      const element = ctx[i];\n      if(_isString(element)) {\n        ctx[i] = prependBase(base, element);\n        continue;\n      }\n      if(_isObject(element)) {\n        _resolveContextUrls({context: {'@context': element}, base});\n      }\n    }\n    return;\n  }\n\n  if(!_isObject(ctx)) {\n    // no @context URLs can be found in non-object\n    return;\n  }\n\n  // ctx is an object, resolve any context URLs in terms\n  for(const term in ctx) {\n    _resolveContextUrls({context: ctx[term], base});\n  }\n}\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst LRU = require('lru-cache');\n\nconst MAX_ACTIVE_CONTEXTS = 10;\n\nmodule.exports = class ResolvedContext {\n  /**\n   * Creates a ResolvedContext.\n   *\n   * @param document the context document.\n   */\n  constructor({document}) {\n    this.document = document;\n    // TODO: enable customization of processed context cache\n    // TODO: limit based on size of processed contexts vs. number of them\n    this.cache = new LRU({max: MAX_ACTIVE_CONTEXTS});\n  }\n\n  getProcessed(activeCtx) {\n    return this.cache.get(activeCtx);\n  }\n\n  setProcessed(activeCtx, processedCtx) {\n    this.cache.set(activeCtx, processedCtx);\n  }\n};\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: move `NQuads` to its own package\nmodule.exports = require('rdf-canonize').NQuads;\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSubject: _isSubject\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param insideIndex true if the element is inside an index container,\n *          false if not.\n * @param typeScopedContext an optional type-scoped active context for\n *          expanding values of nodes that were expressed according to\n *          a type-scoped context.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  insideIndex = false,\n  typeScopedContext = null,\n  expansionMap = () => undefined\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists unless custom mapped\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true},\n        options) === '@graph')) {\n      const mapped = await expansionMap({\n        unmappedValue: element,\n        activeCtx,\n        activeProperty,\n        options,\n        insideList\n      });\n      if(mapped === undefined) {\n        return null;\n      }\n      return mapped;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element, options});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = await api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        expansionMap,\n        insideIndex,\n        typeScopedContext\n      });\n      if(insideList && _isArray(e)) {\n        e = {'@list': e};\n      }\n\n      if(e === null) {\n        e = await expansionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options,\n          expandedParent: rval,\n          insideList\n        });\n        if(e === undefined) {\n          continue;\n        }\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // first, expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n\n  // Get any property-scoped context for activeProperty\n  const propertyScopedCtx =\n    _getContextValue(activeCtx, activeProperty, '@context');\n\n  // second, determine if any type-scoped context should be reverted; it\n  // should only be reverted when the following are all true:\n  // 1. `element` is not a value or subject reference\n  // 2. `insideIndex` is false\n  typeScopedContext = typeScopedContext ||\n    (activeCtx.previousContext ? activeCtx : null);\n  let keys = Object.keys(element).sort();\n  let mustRevert = !insideIndex;\n  if(mustRevert && typeScopedContext && keys.length <= 2 &&\n    !keys.includes('@context')) {\n    for(const key of keys) {\n      const expandedProperty = _expandIri(\n        typeScopedContext, key, {vocab: true}, options);\n      if(expandedProperty === '@value') {\n        // value found, ensure type-scoped context is used to expand it\n        mustRevert = false;\n        activeCtx = typeScopedContext;\n        break;\n      }\n      if(expandedProperty === '@id' && keys.length === 1) {\n        // subject reference found, do not revert\n        mustRevert = false;\n        break;\n      }\n    }\n  }\n\n  if(mustRevert) {\n    // revert type scoped context\n    activeCtx = activeCtx.revertToPreviousContext();\n  }\n\n  // apply property-scoped context after reverting term-scoped context\n  if(!_isUndefined(propertyScopedCtx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: propertyScopedCtx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = await _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // set the type-scoped context to the context on input, for use later\n  typeScopedContext = activeCtx;\n\n  // Remember the first key found expanding to @type\n  let typeKey = null;\n\n  // look for scoped contexts on `@type`\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n    if(expandedProperty === '@type') {\n      // set scoped contexts from @type\n      // avoid sorting if possible\n      typeKey = typeKey || key;\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(typeScopedContext, type, '@context');\n        if(!_isUndefined(ctx)) {\n          activeCtx = await _processContext({\n            activeCtx,\n            localCtx: ctx,\n            options,\n            propagate: false\n          });\n        }\n      }\n    }\n  }\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  await _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    typeKey,\n    typeScopedContext,\n    expansionMap});\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && ('@language' in rval || '@direction' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and either \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if('@direction' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and either \"@type\" ' +\n        'or either or both \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values unless custom mapped\n    if(_processingMode(activeCtx, 1.1) && types.includes('@json') &&\n      types.length === 1) {\n      // Any value of @value is okay if @type: @json\n    } else if(values.length === 0) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language unless custom mapped\n    const mapped = await expansionMap(rval, {\n      unmappedValue: rval,\n      activeCtx,\n      activeProperty,\n      element,\n      options,\n      insideList\n    });\n    if(mapped !== undefined) {\n      rval = mapped;\n    } else {\n      rval = null;\n    }\n  }\n\n  // drop certain top-level objects that do not occur in lists, unless custom\n  // mapped\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param typeKey first key found expanding to @type.\n * @param typeScopedContext the context before reverting.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n */\nasync function _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  typeKey,\n  typeScopedContext,\n  expansionMap\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  let unexpandedValue;\n\n  // Figure out if this is the type for a JSON literal\n  const isJsonType = element[typeKey] &&\n    _expandIri(activeCtx,\n      (_isArray(element[typeKey]) ? element[typeKey][0] : element[typeKey]),\n      {vocab: true}, options) === '@json';\n\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    let expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n\n    // drop non-absolute IRI keys that aren't keywords unless custom mapped\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      // TODO: use `await` to support async\n      expandedProperty = expansionMap({\n        unmappedProperty: key,\n        activeCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        value,\n        expandedParent\n      });\n      if(expandedProperty === undefined) {\n        continue;\n      }\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent &&\n         expandedProperty !== '@included' &&\n         expandedProperty !== '@type') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v =>\n          _isString(v) ? _expandIri(activeCtx, v, {base: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      // if framing, can be a default object, but need to expand\n      // key to determine that\n      if(_isObject(value)) {\n        value = Object.fromEntries(Object.entries(value).map(([k, v]) => [\n          _expandIri(typeScopedContext, k, {vocab: true}),\n          _asArray(v).map(vv =>\n            _expandIri(typeScopedContext, vv, {base: true, vocab: true})\n          )\n        ]));\n      }\n      _validateTypeValue(value, options.isFrame);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v =>\n          _isString(v) ?\n            _expandIri(typeScopedContext, v,\n              {base: true, vocab: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // Included blocks are treated as an array of separate object nodes sharing\n    // the same referencing active_property.\n    // For 1.0, it is skipped as are other unknown keywords\n    if(expandedProperty === '@included' && _processingMode(activeCtx, 1.1)) {\n      const includedResult = _asArray(await api.expand({\n        activeCtx,\n        activeProperty,\n        element: value,\n        options,\n        expansionMap\n      }));\n\n      // Expanded values must be node objects\n      if(!includedResult.every(v => _isSubject(v))) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; ' +\n          'values of @included must expand to node objects.',\n          'jsonld.SyntaxError', {code: 'invalid @included value', value});\n      }\n\n      _addValue(\n        expandedParent, '@included', includedResult, {propertyIsArray: true});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    if(expandedProperty === '@value') {\n      // capture value for later\n      // \"colliding keywords\" check prevents this from being set twice\n      unexpandedValue = value;\n      if(isJsonType && _processingMode(activeCtx, 1.1)) {\n        // no coercion to array, and retain all values\n        expandedParent['@value'] = value;\n      } else {\n        _addValue(\n          expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      }\n      continue;\n    }\n\n    // @language must be a string\n    // it should match BCP47\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      // ensure language tag matches BCP47\n      for(const lang of value) {\n        if(_isString(lang) && !lang.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${lang}`);\n        }\n      }\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @direction must be \"ltr\" or \"rtl\"\n    if(expandedProperty === '@direction') {\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@direction\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', value});\n      }\n\n      value = _asArray(value);\n\n      // ensure direction is \"ltr\" or \"rtl\"\n      for(const dir of value) {\n        if(_isString(dir) && dir !== 'ltr' && dir !== 'rtl') {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@direction\" must be \"ltr\" or \"rtl\".',\n            'jsonld.SyntaxError',\n            {code: 'invalid base direction', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@direction', value,\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = await api.expand({\n        activeCtx,\n        activeProperty:\n        '@reverse',\n        element: value,\n        options,\n        expansionMap\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(!_isUndefined(ctx)) {\n      termCtx = await _processContext({\n        activeCtx,\n        localCtx: ctx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    const container = _getContextValue(termCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      const direction = _getContextValue(termCtx, key, '@direction');\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value, direction, options);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      const indexKey = _getContextValue(termCtx, key, '@index') || '@index';\n      const propertyIndex = indexKey !== '@index' &&\n        _expandIri(activeCtx, indexKey, {vocab: true}, options);\n\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey,\n        propertyIndex\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = await _expandIndexMap({\n        // since container is `@type`, revert type scoped context when expanding\n        activeCtx: termCtx.revertToPreviousContext(),\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList,\n          expansionMap\n        });\n      } else if(\n        _getContextValue(activeCtx, key, '@type') === '@json') {\n        expandedValue = {\n          '@type': '@json',\n          '@value': value\n        };\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false,\n          expansionMap\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // TODO: use `await` to support async\n      expandedValue = expansionMap({\n        unmappedValue: value,\n        expandedProperty,\n        activeCtx: termCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        key,\n        expandedParent\n      });\n      if(expandedValue === undefined) {\n        continue;\n      }\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are arrays\n      expandedValue = _asArray(expandedValue)\n        .map(v => ({'@graph': _asArray(v)}));\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings.has(key) && termCtx.mappings.get(key).reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // special keywords handled above\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: true\n    });\n  }\n\n  // @value must not be an object or an array (unless framing) or if @type is\n  // @json\n  if('@value' in expandedParent) {\n    if(expandedParent['@type'] === '@json' && _processingMode(activeCtx, 1.1)) {\n      // allow any value, to be verified when the object is fully expanded and\n      // the @type is @json.\n    } else if((_isObject(unexpandedValue) || _isArray(unexpandedValue)) &&\n      !options.isFrame) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: unexpandedValue});\n    }\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}, options) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      await _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        typeScopedContext,\n        typeKey,\n        expansionMap});\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value, options}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true}, options);\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true}, options);\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {base: true}, options)};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {\n      '@id': _expandIri(activeCtx, value, {vocab: true, base: true}, options)\n    };\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab', '@none'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    if(direction !== null) {\n      rval['@direction'] = direction;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n * @param direction the direction to apply to values.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap, direction, options) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        val['@language'] = key.toLowerCase();\n      }\n      if(direction) {\n        val['@direction'] = direction;\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nasync function _expandIndexMap(\n  {activeCtx, options, activeProperty, value, expansionMap, asGraph,\n    indexKey, propertyIndex}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  const isTypeIndex = indexKey === '@type';\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    if(isTypeIndex) {\n      const ctx = _getContextValue(activeCtx, key, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          propagate: false,\n          options\n        });\n      }\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    val = await api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      insideIndex: true,\n      expansionMap\n    });\n\n    // expand for @type, but also for @none\n    let expandedKey;\n    if(propertyIndex) {\n      if(key === '@none') {\n        expandedKey = '@none';\n      } else {\n        expandedKey = _expandValue(\n          {activeCtx, activeProperty: indexKey, value: key, options});\n      }\n    } else {\n      expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    }\n\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true}, options);\n    } else if(isTypeIndex) {\n      key = expandedKey;\n    }\n\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(_isValue(item) &&\n        !['@language', '@type', '@index'].includes(indexKey)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; Attempt to add illegal key to value ' +\n          `object: \"${indexKey}\".`,\n          'jsonld.SyntaxError',\n          {code: 'invalid value object', value: item});\n      } else if(propertyIndex) {\n        // index is a property to be expanded, and values interpreted for that\n        // property\n        if(expandedKey !== '@none') {\n          // expand key as a value\n          _addValue(item, propertyIndex, expandedKey, {\n            propertyIsArray: true,\n            prependValue: true\n          });\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase\n} = require('./url');\n\nconst {\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\nconst KEYWORD_PATTERN = /^@[a-zA-Z]+$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n * @param propagate `true` if `false`, retains any previously defined term,\n *   which can be rolled back when the descending into a new node object.\n * @param overrideProtected `false` allows protected terms to be modified.\n *\n * @return a Promise that resolves to the new active context.\n */\napi.process = async ({\n  activeCtx, localCtx, options,\n  propagate = true,\n  overrideProtected = false,\n  cycles = new Set()\n}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _asArray(localCtx);\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // resolve contexts\n  const resolved = await options.contextResolver.resolve({\n    activeCtx,\n    context: localCtx,\n    documentLoader: options.documentLoader,\n    base: options.base\n  });\n\n  // override propagate if first resolved context has `@propagate`\n  if(_isObject(resolved[0].document) &&\n    typeof resolved[0].document['@propagate'] === 'boolean') {\n    // retrieve early, error checking done later\n    propagate = resolved[0].document['@propagate'];\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n\n  // track the previous context\n  // if not propagating, make sure rval has a previous context\n  if(!propagate && !rval.previousContext) {\n    // clone `rval` context before updating\n    rval = rval.clone();\n    rval.previousContext = activeCtx;\n  }\n\n  for(const resolvedContext of resolved) {\n    let {document: ctx} = resolvedContext;\n\n    // update active context to one computed from last iteration\n    activeCtx = rval;\n\n    // reset to initial context\n    if(ctx === null) {\n      // We can't nullify if there are protected terms and we're\n      // not allowing overrides (e.g. processing a property term scoped context)\n      if(!overrideProtected &&\n        Object.keys(activeCtx.protected).length !== 0) {\n        const protectedMode = (options && options.protectedMode) || 'error';\n        if(protectedMode === 'error') {\n          throw new JsonLdError(\n            'Tried to nullify a context with protected terms outside of ' +\n            'a term definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context nullification'});\n        } else if(protectedMode === 'warn') {\n          // FIXME: remove logging and use a handler\n          console.warn('WARNING: invalid context nullification');\n\n          // get processed context from cache if available\n          const processed = resolvedContext.getProcessed(activeCtx);\n          if(processed) {\n            rval = activeCtx = processed;\n            continue;\n          }\n\n          const oldActiveCtx = activeCtx;\n          // copy all protected term definitions to fresh initial context\n          rval = activeCtx = api.getInitialContext(options).clone();\n          for(const [term, _protected] of\n            Object.entries(oldActiveCtx.protected)) {\n            if(_protected) {\n              activeCtx.mappings[term] =\n                util.clone(oldActiveCtx.mappings[term]);\n            }\n          }\n          activeCtx.protected = util.clone(oldActiveCtx.protected);\n\n          // cache processed result\n          resolvedContext.setProcessed(oldActiveCtx, rval);\n          continue;\n        }\n        throw new JsonLdError(\n          'Invalid protectedMode.',\n          'jsonld.SyntaxError',\n          {code: 'invalid protected mode', context: localCtx, protectedMode});\n      }\n      rval = activeCtx = api.getInitialContext(options).clone();\n      continue;\n    }\n\n    // get processed context from cache if available\n    const processed = resolvedContext.getProcessed(activeCtx);\n    if(processed) {\n      rval = activeCtx = processed;\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // TODO: there is likely a `previousContext` cloning optimization that\n    // could be applied here (no need to copy it under certain conditions)\n\n    // clone context before updating it\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = new Map();\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined.set('@version', true);\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.1\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode;\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null || _isAbsoluteIri(base)) {\n        // no action\n      } else if(_isRelativeIri(base)) {\n        base = prependBase(rval['@base'], base);\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined.set('@base', true);\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value) && api.processingMode(rval, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = _expandIri(rval, value, {vocab: true, base: true},\n          undefined, undefined, options);\n      }\n      defined.set('@vocab', true);\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined.set('@language', true);\n    }\n\n    // handle @direction\n    if('@direction' in ctx) {\n      const value = ctx['@direction'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @direction not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context member', context: ctx});\n      }\n      if(value === null) {\n        delete rval['@direction'];\n      } else if(value !== 'ltr' && value !== 'rtl') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@direction\" in a ' +\n          '@context must be null, \"ltr\", or \"rtl\".',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', context: ctx});\n      } else {\n        rval['@direction'] = value;\n      }\n      defined.set('@direction', true);\n    }\n\n    // handle @propagate\n    // note: we've already extracted it, here we just do error checking\n    if('@propagate' in ctx) {\n      const value = ctx['@propagate'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(typeof value !== 'boolean') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate value must be a boolean.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @propagate value', context: localCtx});\n      }\n      defined.set('@propagate', true);\n    }\n\n    // handle @import\n    if('@import' in ctx) {\n      const value = ctx['@import'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @import value', context: localCtx});\n      }\n\n      // resolve contexts\n      const resolvedImport = await options.contextResolver.resolve({\n        activeCtx,\n        context: value,\n        documentLoader: options.documentLoader,\n        base: options.base\n      });\n      if(resolvedImport.length !== 1) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must reference a single context.',\n          'jsonld.SyntaxError',\n          {code: 'invalid remote context', context: localCtx});\n      }\n      const processedImport = resolvedImport[0].getProcessed(activeCtx);\n      if(processedImport) {\n        // Note: if the same context were used in this active context\n        // as a reference context, then processed_input might not\n        // be a dict.\n        ctx = processedImport;\n      } else {\n        const importCtx = resolvedImport[0].document;\n        if('@import' in importCtx) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax: ' +\n            'imported context must not include @import.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context entry', context: localCtx});\n        }\n\n        // merge ctx into importCtx and replace rval with the result\n        for(const key in importCtx) {\n          if(!ctx.hasOwnProperty(key)) {\n            ctx[key] = importCtx[key];\n          }\n        }\n\n        // Note: this could potenially conflict if the import\n        // were used in the same active context as a referenced\n        // context and an import. In this case, we\n        // could override the cached result, but seems unlikely.\n        resolvedImport[0].setProcessed(activeCtx, ctx);\n      }\n\n      defined.set('@import', true);\n    }\n\n    // handle @protected; determine whether this sub-context is declaring\n    // all its terms to be \"protected\" (exceptions can be made on a\n    // per-definition basis)\n    defined.set('@protected', ctx['@protected'] || false);\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition({\n        activeCtx: rval,\n        localCtx: ctx,\n        term: key,\n        defined,\n        options,\n        overrideProtected\n      });\n\n      if(_isObject(ctx[key]) && '@context' in ctx[key]) {\n        const keyCtx = ctx[key]['@context'];\n        let process = true;\n        if(_isString(keyCtx)) {\n          const url = prependBase(options.base, keyCtx);\n          // track processed contexts to avoid scoped context recursion\n          if(cycles.has(url)) {\n            process = false;\n          } else {\n            cycles.add(url);\n          }\n        }\n        // parse context to validate\n        if(process) {\n          try {\n            await api.process({\n              activeCtx: rval.clone(),\n              localCtx: ctx[key]['@context'],\n              overrideProtected: true,\n              options,\n              cycles\n            });\n          } catch(e) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; invalid scoped context.',\n              'jsonld.SyntaxError',\n              {\n                code: 'invalid scoped context',\n                context: ctx[key]['@context'],\n                term: key\n              });\n          }\n        }\n      }\n    }\n\n    // cache processed result\n    resolvedContext.setProcessed(activeCtx, rval);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n * @param {Object} [options] - creation options.\n * @param {string} [options.protectedMode=\"error\"] - \"error\" to throw error\n *   on `@protected` constraint violation, \"warn\" to allow violations and\n *   signal a warning.\n * @param overrideProtected `false` allows protected terms to be modified.\n */\napi.createTermDefinition = ({\n  activeCtx,\n  localCtx,\n  term,\n  defined,\n  options,\n  overrideProtected = false,\n}) => {\n  if(defined.has(term)) {\n    // term already defined\n    if(defined.get(term)) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined.set(term, false);\n\n  // get context term value\n  let value;\n  if(localCtx.hasOwnProperty(term)) {\n    value = localCtx[term];\n  }\n\n  if(term === '@type' &&\n     _isObject(value) &&\n     (value['@container'] || '@set') === '@set' &&\n     api.processingMode(activeCtx, 1.1)) {\n\n    const validKeys = ['@container', '@id', '@protected'];\n    const keys = Object.keys(value);\n    if(keys.length === 0 || keys.some(k => !validKeys.includes(k))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords cannot be overridden.',\n        'jsonld.SyntaxError',\n        {code: 'keyword redefinition', context: localCtx, term});\n    }\n  } else if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  } else if(term.match(KEYWORD_PATTERN)) {\n    // FIXME: remove logging and use a handler\n    console.warn('WARNING: terms beginning with \"@\" are reserved' +\n      ' for future use and ignored', {term});\n    return;\n  } else if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // keep reference to previous mapping for potential `@protected` check\n  const previousMapping = activeCtx.mappings.get(term);\n\n  // remove old mapping\n  if(activeCtx.mappings.has(term)) {\n    activeCtx.mappings.delete(term);\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value) || value === null) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = {};\n  activeCtx.mappings.set(term, mapping);\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push(\n      '@context', '@direction', '@index', '@nest', '@prefix', '@protected');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon > 0);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    if(!api.isKeyword(reverse) && reverse.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {reverse});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    }\n\n    // expand and add @id mapping\n    const id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined,\n      options);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(id && !_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id === null) {\n      // reserve a null term, which may be protected\n      mapping['@id'] = null;\n    } else if(!api.isKeyword(id) && id.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {id});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    } else if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined, options);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n\n      // if term has the form of an IRI it must map the same\n      if(term.match(/(?::[^:])|\\//)) {\n        const termDefined = new Map(defined).set(term, true);\n        const termIri = _expandIri(\n          activeCtx, term, {vocab: true, base: false},\n          localCtx, termDefined, options);\n        if(termIri !== id) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; term in form of IRI must ' +\n            'expand to definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid IRI mapping', context: localCtx});\n        }\n      }\n\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (simpleTerm &&\n        !mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/));\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(localCtx.hasOwnProperty(prefix)) {\n        // define parent prefix\n        api.createTermDefinition({\n          activeCtx, localCtx, term: prefix, defined, options\n        });\n      }\n\n      if(activeCtx.mappings.has(prefix)) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings.get(prefix)['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else if(term === '@type') {\n      // Special case, were we've previously determined that container is @set\n      mapping['@id'] = term;\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // Handle term protection\n  if(value['@protected'] === true ||\n    (defined.get('@protected') === true && value['@protected'] !== false)) {\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n  }\n\n  // IRI mapping now defined\n  defined.set(term, true);\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type value must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if((type === '@json' || type === '@none')) {\n      if(api.processingMode(activeCtx, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must not be ' +\n          `\"${type}\" in JSON-LD 1.0 mode.`,\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    } else if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined,\n        options);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n\n      if(container.includes('@type')) {\n        // If mapping does not have an @type,\n        // set it to @id\n        mapping['@type'] = mapping['@type'] || '@id';\n\n        // type mapping must be either @id or @vocab\n        if(!['@id', '@vocab'].includes(mapping['@type'])) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; container: @type requires @type to be ' +\n            '@id or @vocab.',\n            'jsonld.SyntaxError',\n            {code: 'invalid type mapping', context: localCtx});\n        }\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // property indexing\n  if('@index' in value) {\n    if(!('@container' in value) || !mapping['@container'].includes('@index')) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index without @index in @container: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(!_isString(value['@index']) || value['@index'].indexOf('@') === 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index must expand to an IRI: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    mapping['@index'] = value['@index'];\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(term.match(/:|\\//)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(api.isKeyword(mapping['@id'])) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords may not be used as prefixes',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@direction' in value) {\n    const direction = value['@direction'];\n    if(direction !== null && direction !== 'ltr' && direction !== 'rtl') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @direction value must be ' +\n        'null, \"ltr\", or \"rtl\".',\n        'jsonld.SyntaxError',\n        {code: 'invalid base direction', context: localCtx});\n    }\n    mapping['@direction'] = direction;\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n\n  // Check for overriding protected terms\n  if(previousMapping && previousMapping.protected && !overrideProtected) {\n    // force new term to continue to be protected and see if the mappings would\n    // be equal\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n    if(!_deepCompare(previousMapping, mapping)) {\n      const protectedMode = (options && options.protectedMode) || 'error';\n      if(protectedMode === 'error') {\n        throw new JsonLdError(\n          `Invalid JSON-LD syntax; tried to redefine \"${term}\" which is a ` +\n          'protected term.',\n          'jsonld.SyntaxError',\n          {code: 'protected term redefinition', context: localCtx, term});\n      } else if(protectedMode === 'warn') {\n        // FIXME: remove logging and use a handler\n        console.warn('WARNING: protected term redefinition', {term});\n        return;\n      }\n      throw new JsonLdError(\n        'Invalid protectedMode.',\n        'jsonld.SyntaxError',\n        {code: 'invalid protected mode', context: localCtx, term,\n          protectedMode});\n    }\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, options) => {\n  return _expandIri(activeCtx, value, relativeTo, undefined, undefined,\n    options);\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined, options) {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // ignore non-keyword things that look like a keyword\n  if(value.match(KEYWORD_PATTERN)) {\n    return null;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && localCtx.hasOwnProperty(value) &&\n    defined.get(value) !== true) {\n    api.createTermDefinition({\n      activeCtx, localCtx, term: value, defined, options\n    });\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings.get(value);\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(_isObject(mapping) && '@id' in mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon > 0) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && localCtx.hasOwnProperty(prefix)) {\n      api.createTermDefinition({\n        activeCtx, localCtx, term: prefix, defined, options\n      });\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings.get(prefix);\n    if(mapping && mapping._prefix) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    if(_isAbsoluteIri(value)) {\n      return value;\n    }\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  if(relativeTo.base && '@base' in activeCtx) {\n    if(activeCtx['@base']) {\n      // The null case preserves value as potentially relative\n      return prependBase(prependBase(options.base, activeCtx['@base']), value);\n    }\n  } else if(relativeTo.base) {\n    return prependBase(options.base, value);\n  }\n\n  return value;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const key = JSON.stringify({processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    processingMode: options.processingMode,\n    mappings: new Map(),\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext,\n    revertToPreviousContext: _revertToPreviousContext,\n    protected: {}\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = (activeCtx['@language'] || '@none').toLowerCase();\n\n    // handle default direction\n    const defaultDirection = activeCtx['@direction'];\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = [...mappings.keys()].sort(_compareShortestLeast);\n    for(const term of terms) {\n      const mapping = mappings.get(term);\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      if(mapping['@id'] === null) {\n        continue;\n      }\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(const iri of ids) {\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if(mapping['@type'] === '@none') {\n          _addPreferredTerm(term, entry['@any'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping && '@direction' in mapping) {\n          // term is preferred for values using specific language and direction\n          const language = mapping['@language'];\n          const direction = mapping['@direction'];\n          if(language && direction) {\n            _addPreferredTerm(term, entry['@language'],\n              `${language}_${direction}`.toLowerCase());\n          } else if(language) {\n            _addPreferredTerm(term, entry['@language'], language.toLowerCase());\n          } else if(direction) {\n            _addPreferredTerm(term, entry['@language'], `_${direction}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@null');\n          }\n        } else if('@language' in mapping) {\n          _addPreferredTerm(term, entry['@language'],\n            (mapping['@language'] || '@null').toLowerCase());\n        } else if('@direction' in mapping) {\n          if(mapping['@direction']) {\n            _addPreferredTerm(term, entry['@language'],\n              `_${mapping['@direction']}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@none');\n          }\n        } else if(defaultDirection) {\n          _addPreferredTerm(term, entry['@language'], `_${defaultDirection}`);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else {\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(const entry of entries) {\n      iri = entry.iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entry);\n      } else {\n        next[letter] = [entry];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!entry.hasOwnProperty(typeOrLanguageValue)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    child.protected = util.clone(this.protected);\n    if(this.previousContext) {\n      child.previousContext = this.previousContext.clone();\n    }\n    child.revertToPreviousContext = this.revertToPreviousContext;\n    if('@base' in this) {\n      child['@base'] = this['@base'];\n    }\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n\n  /**\n   * Reverts any type-scoped context in this active context to the previous\n   * context.\n   */\n  function _revertToPreviousContext() {\n    if(!this.previousContext) {\n      return this;\n    }\n    return this.previousContext.clone();\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set or undefined if none is set and type is '@context'.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value, null, or undefined.\n */\napi.getContextValue = (ctx, key, type) => {\n  // invalid key\n  if(key === null) {\n    if(type === '@context') {\n      return undefined;\n    }\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings.has(key)) {\n    const entry = ctx.mappings.get(key);\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(entry.hasOwnProperty(type)) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && type in ctx) {\n    return ctx[type];\n  }\n\n  // get default direction\n  if(type === '@direction' && type in ctx) {\n    return ctx[type];\n  }\n\n  if(type === '@context') {\n    return undefined;\n  }\n  return null;\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v) || v[0] !== '@') {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@direction':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@included':\n    case '@index':\n    case '@json':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@protected':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nfunction _deepCompare(x1, x2) {\n  // compare `null` or primitive types directly\n  if((!(x1 && typeof x1 === 'object')) ||\n     (!(x2 && typeof x2 === 'object'))) {\n    return x1 === x2;\n  }\n  // x1 and x2 are objects (also potentially arrays)\n  const x1Array = Array.isArray(x1);\n  if(x1Array !== Array.isArray(x2)) {\n    return false;\n  }\n  if(x1Array) {\n    if(x1.length !== x2.length) {\n      return false;\n    }\n    for(let i = 0; i < x1.length; ++i) {\n      if(!_deepCompare(x1[i], x2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // x1 and x2 are non-array objects\n  const k1s = Object.keys(x1);\n  const k2s = Object.keys(x2);\n  if(k1s.length !== k2s.length) {\n    return false;\n  }\n  for(const k1 in x1) {\n    let v1 = x1[k1];\n    let v2 = x2[k1];\n    // special case: `@container` can be in any order\n    if(k1 === '@container') {\n      if(Array.isArray(v1) && Array.isArray(v2)) {\n        v1 = v1.slice().sort();\n        v2 = v2.slice().sort();\n      }\n    }\n    if(!_deepCompare(v1, v2)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(const node of input) {\n      api.createNodeMap(node, graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  } else if(list && graphTypes.isList(input)) {\n    const _list = [];\n    api.createNodeMap(input['@list'], graphs, graph, issuer, name, _list);\n    list.push({'@list': _list});\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(const type of types) {\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let property of properties) {\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(const item of items) {\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // recurse into included\n    if(property === '@included') {\n      api.createNodeMap(input[property], graphs, graph, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let o of objects) {\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // skip null @id\n        if('@id' in o && !o['@id']) {\n          continue;\n        }\n\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isValue(o)) {\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property) && property !== '@type') {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(const graphName of graphNames) {\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    for(const id of Object.keys(nodeMap).sort()) {\n      const node = nodeMap[id];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset,\n  {\n    useRdfType = false,\n    useNativeTypes = false,\n    rdfDirection = null\n  }\n) => {\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      util.addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes, rdfDirection);\n    util.addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        util.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      util.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes, rdfDirection) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    if(type === RDF_JSON_LITERAL) {\n      type = '@json';\n      try {\n        rval['@value'] = JSON.parse(rval['@value']);\n      } catch(e) {\n        throw new JsonLdError(\n          'JSON literal could not be parsed.',\n          'jsonld.InvalidJsonLiteral',\n          {code: 'invalid JSON literal', value: rval['@value'], cause: e});\n      }\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(rdfDirection === 'i18n-datatype' &&\n      type.startsWith('https://www.w3.org/ns/i18n#')) {\n      const [, language, direction] = type.split(/[#_]/);\n      if(language.length > 0) {\n        rval['@language'] = language;\n        if(!language.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${language}`);\n        }\n      }\n      rval['@direction'] = direction;\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {createNodeMap} = require('./nodeMap');\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst jsonCanonicalize = require('canonicalize');\nconst types = require('./types');\nconst util = require('./util');\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(const id of ids) {\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert list, value or node object to triple\n        const object =\n          _objectToRDF(item, issuer, dataset, graphTerm, options.rdfDirection);\n        // skip null objects (they are relative IRIs)\n        if(object) {\n          dataset.push({\n            subject,\n            predicate,\n            object,\n            graph: graphTerm\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the head of the list.\n */\nfunction _listToRDF(list, issuer, dataset, graphTerm, rdfDirection) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  const last = list.pop();\n  // Result is the head of the list\n  const result = last ? {termType: 'BlankNode', value: issuer.getId()} : nil;\n  let subject = result;\n\n  for(const item of list) {\n    const object = _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection);\n    const next = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: next,\n      graph: graphTerm\n    });\n    subject = next;\n  }\n\n  // Tail of list\n  if(last) {\n    const object = _objectToRDF(last, issuer, dataset, graphTerm, rdfDirection);\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: nil,\n      graph: graphTerm\n    });\n  }\n\n  return result;\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string,\n * node object to an RDF resource, or adds a list.\n *\n * @param item the JSON-LD value or node object.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the dataset to append RDF quads to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD/JSON datatypes as appropriate\n    if(datatype === '@json') {\n      object.value = jsonCanonicalize(value);\n      object.datatype.value = RDF_JSON_LITERAL;\n    } else if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if(rdfDirection === 'i18n-datatype' &&\n      '@direction' in item) {\n      const datatype = 'https://www.w3.org/ns/i18n#' +\n        (item['@language'] || '') +\n        `_${item['@direction']}`;\n      object.datatype.value = datatype;\n      object.value = value;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else if(graphTypes.isList(item)) {\n    const _list =\n      _listToRDF(item['@list'], issuer, dataset, graphTerm, rdfDirection);\n    object.termType = _list.termType;\n    object.value = _list.value;\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n","/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst url = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    embedded: false,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  // remove @preserve from results\n  options.link = {};\n  return _cleanupPreserve(framed, options);\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // get link for current graph\n  if(!state.link.hasOwnProperty(state.graph)) {\n    state.link[state.graph] = {};\n  }\n  const link = state.link[state.graph];\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    if(flags.embed === '@link' && id in link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, link[id]);\n      continue;\n    }\n\n    // start output for subject\n    const output = {'@id': id};\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    link[id] = output;\n\n    // validate @embed\n    if((flags.embed === '@first' || flags.embed === '@last') && state.is11) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n\n    if(!state.embedded && state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      // skip adding this node object to the top level, as it was\n      // already included in another node object\n      continue;\n    }\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(state.embedded &&\n      (flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack))) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the first (or once) should be embedded\n    if(state.embedded &&\n       (flags.embed == '@first' || flags.embed == '@once') &&\n       state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n    }\n\n    state.uniqueEmbeds[state.graph][id] = {parent, property};\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        recurse = !(id === '@merged' || id === '@default');\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n      }\n\n      if(recurse) {\n        // recurse into graph\n        api.frame(\n          {...state, graph: id, embedded: false},\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n      }\n    }\n\n    // if frame has @included, recurse over its sub-frame\n    if('@included' in frame) {\n      api.frame(\n        {...state, embedded: false},\n        subjects, frame['@included'], output, '@included');\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(const o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          const subframe =\n            (frame[prop] && frame[prop][0] && frame[prop][0]['@list']) ?\n              frame[prop][0]['@list'] :\n              _createImplicitFrame(flags);\n\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const oo of src) {\n            if(graphTypes.isSubjectReference(oo)) {\n              // recurse into subject reference\n              api.frame(\n                {...state, embedded: true},\n                [oo['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(oo));\n            }\n          }\n        } else if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(\n            {...state, embedded: true},\n            [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(prop === '@type') {\n        if(!types.isObject(frame[prop][0]) ||\n           !('@default' in frame[prop][0])) {\n          continue;\n        }\n        // allow through default types\n      } else if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    for(const reverseProp of Object.keys(frame['@reverse'] || {}).sort()) {\n      const subframe = frame['@reverse'][reverseProp];\n      for(const subject of Object.keys(state.subjects)) {\n        const nodeValues =\n          util.getValues(state.subjects[subject], reverseProp);\n        if(nodeValues.some(v => v['@id'] === id)) {\n          // node has property referencing this subject, recurse\n          output['@reverse'] = output['@reverse'] || {};\n          util.addValue(\n            output['@reverse'], reverseProp, [], {propertyIsArray: true});\n          api.frame(\n            {...state, embedded: true},\n            [subject], subframe, output['@reverse'][reverseProp],\n            property);\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Replace `@null` with `null`, removing it from arrays.\n *\n * @param input the framed, compacted output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\napi.cleanupNull = (input, options) => {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    const noNulls = input.map(v => api.cleanupNull(v, options));\n    return noNulls.filter(v => v); // removes nulls from array\n  }\n\n  if(input === '@null') {\n    return null;\n  }\n\n  if(types.isObject(input)) {\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    for(const key in input) {\n      input[key] = api.cleanupNull(input[key], options);\n    }\n  }\n  return input;\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@once';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link' &&\n      rval !== '@first' && rval !== '@last' && rval !== '@once') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n\n  if('@id' in frame[0]) {\n    for(const id of util.asArray(frame[0]['@id'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(id) || url.isAbsolute(id)) ||\n        (types.isString(id) && id.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @id in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n\n  if('@type' in frame[0]) {\n    for(const type of util.asArray(frame[0]['@type'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(type) || url.isAbsolute(type)) ||\n        (types.isString(type) && type.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @type in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(key === '@id') {\n      // match on no @id or any matching @id, including wildcard\n      if(types.isEmptyObject(frame['@id'][0] || {})) {\n        matchThis = true;\n      } else if(frame['@id'].length >= 0) {\n        matchThis = frame['@id'].includes(nodeValues[0]);\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(key === '@type') {\n      // check @type (object value means 'any' type,\n      // fall through to ducktyping)\n      wildcard = false;\n      if(isEmpty) {\n        if(nodeValues.length > 0) {\n          // don't match on no @type\n          return false;\n        }\n        matchThis = true;\n      } else if(frame['@type'].length === 1 &&\n        types.isEmptyObject(frame['@type'][0])) {\n        // match on wildcard @type if there is a type\n        matchThis = nodeValues.length > 0;\n      } else {\n        // match on a specific @type\n        for(const type of frame['@type']) {\n          if(types.isObject(type) && '@default' in type) {\n            // match on default object\n            matchThis = true;\n          } else {\n            matchThis = matchThis || nodeValues.some(tt => tt === type);\n          }\n        }\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(isKeyword(key)) {\n      continue;\n    } else {\n      // Force a copy of this frame entry so it can be manipulated\n      const thisFrame = util.getValues(frame, key)[0];\n      let hasDefault = false;\n      if(thisFrame) {\n        _validateFrame([thisFrame]);\n        hasDefault = '@default' in thisFrame;\n      }\n\n      // no longer a wildcard pattern if frame has any non-keyword properties\n      wildcard = false;\n\n      // skip, but allow match if node has no value for property, and frame has\n      // a default value\n      if(nodeValues.length === 0 && hasDefault) {\n        continue;\n      }\n\n      // if frame value is empty, don't match if subject has any value\n      if(nodeValues.length > 0 && isEmpty) {\n        return false;\n      }\n\n      if(thisFrame === undefined) {\n        // node does not match if values is not empty and the value of property\n        // in frame is match none.\n        if(nodeValues.length > 0) {\n          return false;\n        }\n        matchThis = true;\n      } else {\n        if(graphTypes.isList(thisFrame)) {\n          const listValue = thisFrame['@list'][0];\n          if(graphTypes.isList(nodeValues[0])) {\n            const nodeListValues = nodeValues[0]['@list'];\n\n            if(graphTypes.isValue(listValue)) {\n              // match on any matching value\n              matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n            } else if(graphTypes.isSubject(listValue) ||\n              graphTypes.isSubjectReference(listValue)) {\n              matchThis = nodeListValues.some(lv => _nodeMatch(\n                state, listValue, lv, flags));\n            }\n          }\n        } else if(graphTypes.isValue(thisFrame)) {\n          matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n        } else if(graphTypes.isSubjectReference(thisFrame)) {\n          matchThis =\n            nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n        } else if(types.isObject(thisFrame)) {\n          matchThis = nodeValues.length > 0;\n        } else {\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Removes the @preserve keywords from expanded result of framing.\n *\n * @param input the framed, framed output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\nfunction _cleanupPreserve(input, options) {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    return input.map(value => _cleanupPreserve(value, options));\n  }\n\n  if(types.isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      return input['@preserve'][0];\n    }\n\n    // skip @values\n    if(graphTypes.isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(graphTypes.isList(input)) {\n      input['@list'] = _cleanupPreserve(input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === '@id' && options.bnodesToClear.includes(input[prop])) {\n        delete input['@id'];\n        continue;\n      }\n\n      input[prop] = _cleanupPreserve(input[prop], options);\n    }\n  }\n  return input;\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  removeBase: _removeBase,\n  prependBase: _prependBase\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n * @param compactionMap the compaction map to use.\n *\n * @return a promise that resolves to the compacted value.\n */\napi.compact = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  compactionMap = () => undefined\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      // compact, dropping any null values unless custom mapped\n      let compacted = await api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        compactionMap\n      });\n      if(compacted === null) {\n        compacted = await compactionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options\n        });\n        if(compacted === undefined) {\n          continue;\n        }\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(!_isUndefined(ctx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: ctx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element &&\n      options.link.hasOwnProperty(element['@id'])) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element, options});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(options.link.hasOwnProperty(element['@id']))) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // if expanded property is @list and we're contained within a list\n    // container, recursively compact this item to an array\n    if(_isList(element)) {\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.includes('@list')) {\n        return api.compact({\n          activeCtx,\n          activeProperty,\n          element: element['@list'],\n          options,\n          compactionMap\n        });\n      }\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    // original context before applying property-scoped and local contexts\n    const inputCtx = activeCtx;\n\n    // revert to previous context, if there is one,\n    // and element is not a value object or a node reference\n    if(!_isValue(element) && !_isSubjectReference(element)) {\n      activeCtx = activeCtx.revertToPreviousContext();\n    }\n\n    // apply property-scoped context after reverting term-scoped context\n    const propertyScopedCtx =\n      _getContextValue(inputCtx, activeProperty, '@context');\n    if(!_isUndefined(propertyScopedCtx)) {\n      activeCtx = await _processContext({\n        activeCtx,\n        localCtx: propertyScopedCtx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!options.link.hasOwnProperty(element['@id'])) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    // find all type-scoped contexts based on current context, prior to\n    // updating it\n    const typeContext = activeCtx;\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx: typeContext, iri: type, relativeTo: {vocab: true}});\n\n      // Use any type-scoped context defined on this value\n      const ctx = _getContextValue(inputCtx, compactedType, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          options,\n          propagate: false\n        });\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id\n      if(expandedProperty === '@id') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: false},\n            base: options.base\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@id', relativeTo: {vocab: true}});\n\n        rval[alias] = compactedValue;\n        continue;\n      }\n\n      // compact @type(s)\n      if(expandedProperty === '@type') {\n        // resolve type values against previous context\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx: inputCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: true}\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@type', relativeTo: {vocab: true}});\n        const container = _getContextValue(\n          activeCtx, alias, '@container') || [];\n\n        // treat as array for @type if @container includes @set\n        const typeAsSet =\n          container.includes('@set') &&\n          _processingMode(activeCtx, 1.1);\n        const isArray =\n          typeAsSet || (_isArray(compactedValue) && expandedValue.length === 0);\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings.has(compactedProperty) &&\n            activeCtx.mappings.get(compactedProperty).reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't\n      // @graph, @list, or @included\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        expandedProperty !== '@included' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = await api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options,\n          compactionMap\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else {\n            _addValue(nestResult, itemActiveProperty, compactedItem, {\n              valueIsArray: true,\n              allowDuplicate: true\n            });\n            continue;\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(nestResult.hasOwnProperty(itemActiveProperty)) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none',\n                relativeTo: {vocab: true}});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            // if compactedItem contains multiple values, it is wrapped in\n            // `@included`\n            if(_isArray(compactedItem) && compactedItem.length > 1) {\n              compactedItem = {'@included': compactedItem};\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(nestResult.hasOwnProperty(itemActiveProperty)) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n          // if container is a language map, simplify compacted value to\n          // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            const indexKey = _getContextValue(\n              activeCtx, itemActiveProperty, '@index') || '@index';\n            const containerKey = api.compactIri(\n              {activeCtx, iri: indexKey, relativeTo: {vocab: true}});\n            if(indexKey === '@index') {\n              key = expandedItem['@index'];\n              delete compactedItem[containerKey];\n            } else {\n              let others;\n              [key, ...others] = _asArray(compactedItem[indexKey] || []);\n              if(!_isString(key)) {\n                // Will use @none if it isn't a string.\n                key = null;\n              } else {\n                switch(others.length) {\n                  case 0:\n                    delete compactedItem[indexKey];\n                    break;\n                  case 1:\n                    compactedItem[indexKey] = others[0];\n                    break;\n                  default:\n                    compactedItem[indexKey] = others;\n                    break;\n                }\n              }\n            }\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id',\n              relativeTo: {vocab: true}});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              relativeTo: {vocab: true}\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n\n            // If compactedItem contains a single entry\n            // whose key maps to @id, recompact without @type\n            if(Object.keys(compactedItem).length === 1 &&\n              '@id' in expandedItem) {\n              compactedItem = await api.compact({\n                activeCtx,\n                activeProperty: itemActiveProperty,\n                element: {'@id': expandedItem['@id']},\n                options,\n                compactionMap\n              });\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none',\n              relativeTo: {vocab: true}});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n * @param base the absolute URL to use for compacting document-relative IRIs.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false,\n  base = null\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // if context is from a property term scoped context composed with a\n  // type-scoped context, then use the previous context instead\n  if(activeCtx.isPropertyTermScoped && activeCtx.previousContext) {\n    activeCtx = activeCtx.previousContext;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@direction' in item) {\n              const lang = (item['@language'] || '').toLowerCase();\n              const dir = item['@direction'];\n              itemLanguage = `${lang}_${dir}`;\n            } else if('@language' in item) {\n              itemLanguage = item['@language'].toLowerCase();\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n          const dir = value['@direction'];\n          if(dir) {\n            typeOrLanguageValue = `${typeOrLanguageValue}_${dir}`;\n          }\n        } else if('@direction' in value && !('@index' in value)) {\n          typeOrLanguageValue = `_${value['@direction']}`;\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!activeCtx.mappings.has(suffix)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings.get(term)._prefix &&\n        (!activeCtx.mappings.has(curie) ||\n        (value === null && activeCtx.mappings.get(curie)['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // If iri could be confused with a compact IRI using a term in this context,\n  // signal an error\n  for(const [term, td] of activeCtx.mappings) {\n    if(td && td._prefix && iri.startsWith(term + ':')) {\n      throw new JsonLdError(\n        `Absolute IRI \"${iri}\" confused with prefix \"${term}\".`,\n        'jsonld.SyntaxError',\n        {code: 'IRI confused with prefix', context: activeCtx});\n    }\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    if('@base' in activeCtx) {\n      if(!activeCtx['@base']) {\n        // The None case preserves rval as potentially relative\n        return iri;\n      } else {\n        return _removeBase(_prependBase(base, activeCtx['@base']), iri);\n      }\n    } else {\n      return _removeBase(base, iri);\n    }\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n * @param {Object} [options] - processing options.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value, options}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex && type !== '@none') {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language &&\n         '@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language) {\n        return value['@value'];\n      }\n      if('@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings.has(activeProperty) &&\n      activeCtx.mappings.get(activeProperty)['@language'] === null);\n    if(isValueOnlyKey &&\n      type !== '@none' &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    if('@direction' in value) {\n      // alias @direction\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@direction',\n        relativeTo: {vocab: true}\n      })] = value['@direction'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true},\n    options);\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri({\n    activeCtx,\n    iri: value['@id'],\n    relativeTo: {vocab: type === '@vocab'},\n    base: options.base});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isObject(value) && '@id' in value) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(activeCtx.mappings.has(term) &&\n      activeCtx.mappings.get(term) &&\n      activeCtx.mappings.get(term)['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n\n    // consider direction only\n    const langDir = prefs.find(el => el.includes('_'));\n    if(langDir) {\n      // consider _dir portion\n      prefs.push(langDir.replace(/^[^_]+_/, '_'));\n    }\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(const container of containers) {\n    // if container not available in the map, continue\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(const pref of prefs) {\n      // if type/language option not available in the map, continue\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n * @param {Object} [options] - processing options.\n */\nfunction _checkNestProperty(activeCtx, nestProperty, options) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}, options) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n","import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\n// Named exports\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n\n// Export all named exports as a default object for backward compatibility\nexport default {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    let currentLineLength = input.length;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (this._comments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          emitToken('comment', comment[1], '', this._line, whiteSpaceMatch[0].length);\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        currentLineLength = input.length;\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (this._comments && (comment = this._comment.exec(input)))\n            emitToken('comment', comment[1], '', this._line, input.length);\n          input = null;\n          emitToken('eof', '', '', this._line, 0);\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const length = matchLength || match[0].length;\n      const token = emitToken(type, value, prefix, line, length);\n      this.previousToken = token;\n      this._previousMarker = type;\n\n      // Advance to next part to tokenize\n      input = input.substr(length, input.length);\n    }\n\n    // Emits the token through the callback\n    function emitToken(type, value, prefix, line, length) {\n      const start = input ? currentLineLength - input.length : currentLineLength;\n      const end = start + length;\n      const token = { type, value, prefix, line, start, end };\n      callback(null, token);\n      return token;\n    }\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      type,\n      subject, predicate, object, graph,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext(type, token) {\n    // Obtain the previous context\n    const context = this._contextStack.pop();\n    if (!context || context.type !== type)\n      return this._error(`Unexpected ${token.type}`, token);\n\n    // Restore the quad of the previous context\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n\n    // Restore N3 context settings\n    if (this._n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case '[':\n      if (this._n3Mode) {\n        // Start a new quad with a new blank node as subject\n        this._saveContext('blank', this._graph, this._subject,\n                          this._subject = this._blankNode(), null);\n        return this._readBlankNodeHead;\n      }\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext('blank', token);\n    // If the blank node was the object, restore previous context and read punctuation\n    if (this._object !== null)\n      return this._getContextEndReader();\n    // If the blank node was the predicate, continue reading the object\n    else if (this._predicate !== null)\n      return this._readObject;\n    // If the blank node was the subject, continue reading the predicate\n    else\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext('list', token);\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext('formula', token);\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext('item', token);\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext('<<', token);\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Implement hashCode for Immutable.js, since we implement `equals`\n  // https://immutable-js.com/docs/v4.0.0/ValueObject/#hashCode()\n  hashCode() {\n    return 0;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri.value || iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n      if (options.baseIRI) {\n        this._baseMatcher = new RegExp(`^${escapeRegex(options.baseIRI)\n            }${options.baseIRI.endsWith('/') ? '' : '[#?]'}`);\n        this._baseLength = options.baseIRI.length;\n      }\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseMatcher && this._baseMatcher.test(iri))\n      iri = iri.substr(this._baseLength);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = escapeRegex(IRIlist, /[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeRegex(regex) {\n  return regex.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graphId` will be the graph of the created quads.\n  *_findInIndex(index0, key0, key1, key2, name0, name1, name2, graphId) {\n    let tmp, index1, index2;\n    const entityKeys = this._entities;\n    const graph = termFromId(graphId, this._factory);\n    const parts = { subject: null, predicate: null, object: null };\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        parts[name0] = termFromId(entityKeys[value0], this._factory);\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            parts[name1] = termFromId(entityKeys[value1], this._factory);\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              yield this._factory.quad(parts.subject, parts.predicate, parts.object, graph);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad or quad pattern.\n  has(subjectOrQuad, predicate, object, graph) {\n    if (subjectOrQuad && subjectOrQuad.subject)\n      ({ subject: subjectOrQuad, predicate, object, graph } = subjectOrQuad);\n    return !this.readQuads(subjectOrQuad, predicate, object, graph).next().done;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.readQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    return [...this.readQuads(subject, predicate, object, graph)];\n  }\n\n  // ### `readQuads` returns an generator of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  *readQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            yield* this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            yield* this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          yield* this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          yield* this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          yield* this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId);\n      }\n    }\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    for (const quad of this.readQuads(subject, predicate, object, graph))\n      if (callback(quad))\n        return true;\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.readQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const newStore = this._filtered = new N3Store({ factory: n3Store._factory });\n      for (const quad of n3Store.readQuads(subject, predicate, object, graph))\n        newStore.addQuad(quad);\n    }\n    return this._filtered;\n  }\n\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this)\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this._filtered || this.n3Store.readQuads(this.subject, this.predicate, this.object, this.graph);\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n"],"names":["$ewyr8","parcelRequire","$f5551de05cf979ce$export$fc15ae37a383fcbf","resource","internal_resourceInfo","$f5551de05cf979ce$export$c9c51ad80a0e777d","potentialResourceInfo","linkedResources","$f5551de05cf979ce$var$hasChangelog","dataset","potentialChangeLog","internal_changeLog","Array","isArray","additions","deletions","$f5551de05cf979ce$export$4c1155dba78a6202","Error","$f5551de05cf979ce$var$internal_toIriString","iri","value","async","init","fetch1","$f5551de05cf979ce$var$internal_parseResourceInfo","response","_a1","_b1","_c","_d","_e","contentTypeParts","headers","get","split","isSolidDataset","length","includes","resourceInfo","sourceIri","url","isRawData","contentLocation","undefined","contentType","location","linkHeader","parsedLinks","$parcel$interopDefault","parse","aclLinks","aclUrl","URL","uri","href","refs","reduce","rels","ref","_a","_b","rel","push","wacAllowHeader","permissions","parsePermissionStatement","permissionStatement","read","append","write","control","getStatementFor","header","scope","relevantEntries","map","rawEntry","filter","parts","trim","relevantStatement","charAt","substring","user","public","$f5551de05cf979ce$var$parseWacAllowHeader","$f5551de05cf979ce$var$internal_cloneResource","clonedResource","slice","Object","assign","$f5551de05cf979ce$var$internal_isUnsuccessfulResponse","ok","$f5551de05cf979ce$var$rdf","$f5551de05cf979ce$var$ldp","$f5551de05cf979ce$var$acp","AccessControlResource","Read","Append","Write","Rule","Matcher","accessControl","memberAccessControl","apply","applyMembers","allow","deny","allOf","anyOf","noneOf","access","accessMembers","agent","group","client","PublicAgent","$f5551de05cf979ce$var$solid","$f5551de05cf979ce$var$internal_defaultFetchOptions","fetch","$f5551de05cf979ce$var$fetch","$f5551de05cf979ce$export$a258f88123ba7552","options","ignoreAuthenticationErrors","config","$f5551de05cf979ce$export$3dcc52394f887c64","method","status","$f5551de05cf979ce$var$internal_isAuthenticationFailureResponse","$f5551de05cf979ce$export$26e841bcf1aeb894","statusText","$f5551de05cf979ce$export$1b1d70ba6b5b14e1","$f5551de05cf979ce$export$393bd8ed103a00ca","$f5551de05cf979ce$export$eaa33a4638ce404d","constructor","message","errorResponse","super","this","statusCode","$f5551de05cf979ce$var$defaultGetFileOptions","$f5551de05cf979ce$export$8b3ca78f81ec578c","input","data","blob","$169n5","$f5551de05cf979ce$var$localNodeSkolemPrefix","$f5551de05cf979ce$var$freeze","freeze","$f5551de05cf979ce$var$getLocalNodeName","localNodeIri","$f5551de05cf979ce$var$isBlankNodeId","$f5551de05cf979ce$var$getBlankNodeValue","blankNodeId","$f5551de05cf979ce$var$getBlankNodeId","blankNode","$f5551de05cf979ce$var$xmlSchemaTypes","$f5551de05cf979ce$var$deserializeBoolean","$f5551de05cf979ce$var$deserializeTime","literalString","test","timezoneString","$f5551de05cf979ce$var$splitTimeFromTimezone","hourString","minuteString","timeRest","timeString","utcHours","Number","parseInt","optionalMillisecondString","utcSeconds","secondString","utcMilliseconds","utcMinutes","deserializedTime","millisecond","hourOffset","minuteOffset","$f5551de05cf979ce$var$getTimezoneOffsets","timezoneHourOffset","timezoneMinuteOffset","$f5551de05cf979ce$var$deserializeDatetime","signedDateString","rest","yearMultiplier","dateString","monthString","dayString","yearString","date","Date","UTC","utcFullYear","utcMonth","utcDate","setUTCFullYear","getUTCFullYear","$f5551de05cf979ce$var$deserializeDate","dayAndTimezoneString","endsWith","splitOnMinus","multiplier","$f5551de05cf979ce$var$deserializeDecimal","deserialized","parseFloat","isNaN","$f5551de05cf979ce$var$deserializeInteger","$f5551de05cf979ce$var$normalizeLocale","locale","toLowerCase","$f5551de05cf979ce$var$isNamedNode","$f5551de05cf979ce$var$isTerm","termType","equals","$f5551de05cf979ce$var$isLocalNode","$f5551de05cf979ce$var$isLocalNodeIri","$f5551de05cf979ce$var$internal_isValidUrl","iriString","$f5551de05cf979ce$var$resolveIriForLocalNode","localNode","resourceIri","$f5551de05cf979ce$var$DataFactory","namedNode","$f5551de05cf979ce$var$resolveLocalIri","name","thingIri","hash","$conuX","$f5551de05cf979ce$var$addRdfJsQuadToDataset","quad","quadParseOptions","graph","graphId","graphs","$f5551de05cf979ce$var$addRdfJsQuadToGraph","subject","subjectIri","type","predicates","$f5551de05cf979ce$var$addRdfJsQuadToSubject","$f5551de05cf979ce$var$addRdfJsQuadToPredicates","predicate","predicateIri","objects","$f5551de05cf979ce$var$addRdfJsQuadToObjects","_f","_g","_h","object","namedNodes","datatype","language","thisLocaleStrings","langStrings","thisTypeValues","literals","blankNodePredicates","$f5551de05cf979ce$var$getPredicatesForBlankNode","blankNodes","node","_a2","_b2","chainBlankNodes","find","chainBlankNode","quadsWithNodeAsSubject","otherQuads","$f5551de05cf979ce$var$isBlankNode","predicatesAcc","$f5551de05cf979ce$var$getChainBlankNodes","quads","blankNodeSubjects","blankNodeObjects","cycleBlankNodes","forEach","blankNodeObject","$f5551de05cf979ce$var$getCycleBlankNodes","concat","some","cycleBlankNode","subjectsWithThisNodeAsObject","nodes","every","otherNode","anotherNode","$f5551de05cf979ce$var$toRdfJsQuads","dataFactory","keys","graphIri","graphNode","defaultGraph","subjectNode","$f5551de05cf979ce$var$subjectToRdfJsQuads","_a3","predicateNode","typeIri","typeNode","literalNode","literal","langStringNode","namedNodeIri","blankNodeIdOrPredicates","blankNodeObjectQuad","blankNodeSubjectQuads","currentNode","traversedBlankNodes","traversedBlankNode","nextTraversedNodes","cycleBlankNodeArrays","nextNode","allCycleBlankNodes","term1","$f5551de05cf979ce$export$2e298e64e84d1db","onQuadCallbacks","onCompleteCallbacks","onErrorCallbacks","onQuad","callback","onError","source","baseIri","$gwmRv","default","format","baseIRI","$f5551de05cf979ce$var$getParser","error","_prefixes","$f5551de05cf979ce$var$triplesToTurtle","writer","$g1UNa","triples","Promise","resolve","reject","end","result","writePromise","$f5551de05cf979ce$var$internal_getReadableValue","$f5551de05cf979ce$var$isLiteral","val","valueOf","toUTCString","toString","$f5551de05cf979ce$var$internal_throwIfNotThing","thing","$f5551de05cf979ce$export$d0d72273cc323795","$f5551de05cf979ce$export$47f1f887c08e034d","$f5551de05cf979ce$var$internal_addDeletionsToChangeLog","solidDataset","changeLog","newAdditions","newDeletions","deletion","$f5551de05cf979ce$var$containsBlankNode","additionsAcc","deletionsAcc","addition","$f5551de05cf979ce$export$94df0e59ebebf4a7","property","$f5551de05cf979ce$var$ValidPropertyUrlExpectedError","predicateUrl","firstUrl","$f5551de05cf979ce$export$f67a5764e7b3abe0","$f5551de05cf979ce$export$8af9de6ab58fb263","$f5551de05cf979ce$export$74a2455d811ba182","$f5551de05cf979ce$export$255c06a6c9459d2e","locales","localeLiterals","langString","otherLiterals","dataType","dataTypes","values","dataTypeLiterals","$f5551de05cf979ce$export$b9e523ecfb0508c2","rawBlankNode","blankNodeName","$f5551de05cf979ce$var$getLiteralAllOfType","literalType","$f5551de05cf979ce$export$99590e78f3b0582b","thingUrl","$f5551de05cf979ce$var$ValidThingUrlExpectedError","thingsByIri","$f5551de05cf979ce$export$10b4b181743f932c","acceptBlankNodes","$f5551de05cf979ce$export$d3aa9c4c12d6db87","$f5551de05cf979ce$export$d75b223949c6c4e8","updatedDefaultGraph","updatedGraphs","deletedThingPredicates","$f5551de05cf979ce$var$internal_addAdditionsToChangeLog","$f5551de05cf979ce$export$95ff3d3dcf0bc6ca","$f5551de05cf979ce$export$733a64d0f9ce74f6","$f5551de05cf979ce$export$5ad555b55cd85e0c","$f5551de05cf979ce$var$generateName","$f5551de05cf979ce$export$91df428ae0f97b5c","baseUrl","receivedValue","receivedProperty","$f5551de05cf979ce$var$ValidValueUrlExpectedError","now","Math","random","$f5551de05cf979ce$var$normalizeServerSideIri","iriObj","$f5551de05cf979ce$export$848918df1575bb6f","$f5551de05cf979ce$export$1562fdbe380bc728","parserContentTypes","parsers","acceptedContentTypes","join","Accept","parseOptions","mimeType","parser","text","parsingPromise","quadsWithBlankNodes","allQuads","onComplete","quadsWithoutChainBlankNodeSubjects","datasetAcc","solidDatasetWithResourceInfo","$f5551de05cf979ce$export$1a3165137a220b3e","$f5551de05cf979ce$export$30324bb8ae1effa9","datasetWithChangelog","$f5551de05cf979ce$var$internal_withChangeLog","requestInit","$f5551de05cf979ce$var$isUpdate","body","$f5551de05cf979ce$var$getNamedNodesForLocalNodes","$f5551de05cf979ce$var$prepareSolidDatasetUpdate","Link","$f5551de05cf979ce$var$prepareSolidDatasetCreation","diagnostics","readableChangeLog","changeLogsByThingAndProperty","propertyUrl","added","deleted","$f5551de05cf979ce$var$sortChangeLogByThingAndProperty","changeLogByProperty","deletedValue","addedValue","$f5551de05cf979ce$export$de5dc2fa547f9f6e","$f5551de05cf979ce$export$9773ad21e012dde","$f5551de05cf979ce$var$resolveLocalIrisInSolidDataset","readableSolidDataset","things","thingAsMarkdown1","predicateIris","$f5551de05cf979ce$export$214973c6d3291526","nrOfAdditions","count","nrOfDeletions","$f5551de05cf979ce$var$getReadableChangeLogSummary","$f5551de05cf979ce$var$getNamedNodeFromLocalNode","graphAcc","resolvedThing","updatedPredicates","updatedNamedNodes","updatedPredicate","$f5551de05cf979ce$var$resolveLocalIrisInThing","resolvedThingIri","updatedGraph","Response","$f5551de05cf979ce$var$Response","$f5551de05cf979ce$export$e153747e2e5df6ca","$f5551de05cf979ce$export$fc3b441efa2df883","existingPredicate","existingNamedNodes","iriToAdd","$f5551de05cf979ce$export$6a23601cc7d7225d","$f5551de05cf979ce$export$ebc299afc01ae881","$f5551de05cf979ce$var$addLiteralOfType","$f5551de05cf979ce$var$serializeBoolean","$f5551de05cf979ce$export$4630388383a54e6e","toISOString","$f5551de05cf979ce$var$serializeDatetime","$f5551de05cf979ce$export$4bb016dc18864c63","getFullYear","month","getMonth","day","getDate","_","timezone","year","String","padStart","$f5551de05cf979ce$var$serializeDate","$f5551de05cf979ce$export$7ed87b6bc2506470","millisecondString","timezoneFormatted","abs","hour","minute","second","$f5551de05cf979ce$var$serializeTime","$f5551de05cf979ce$export$ceef9b21fff33d6e","$f5551de05cf979ce$var$serializeDecimal","$f5551de05cf979ce$export$4cd02676fb57e744","$f5551de05cf979ce$var$serializeInteger","$f5551de05cf979ce$export$a718972f9dbcd619","normalizedLocale","existingLangStrings","existingStringsInLocale","updatedStringsInLocale","updatedLangStrings","$f5551de05cf979ce$export$866e6ef6cf50161d","$f5551de05cf979ce$export$d83b2f7356715cd8","$f5551de05cf979ce$export$2ca2641c9781e060","$f5551de05cf979ce$export$2bac508b6d467458","existingBlankNodes","updatedBlankNodes","existingLiterals","existingValuesOfType","updatedValuesOfType","updatedLiterals","$f5551de05cf979ce$export$1cfc7aad5cb1833b","newPredicates","$f5551de05cf979ce$export$9da3727b11572f0c","iriToRemove","$f5551de05cf979ce$export$75de2463461bfc1","$f5551de05cf979ce$export$ca7a7a3cfe0808a","$f5551de05cf979ce$var$removeLiteralMatching","foundBoolean","$f5551de05cf979ce$export$42347b7210dfe5cc","foundDatetime","getTime","$f5551de05cf979ce$export$ab380fd1c916d071","foundDate","deserializedDate","$f5551de05cf979ce$export$e26de9e2123cdb94","foundTime","$f5551de05cf979ce$export$e72b22a59e82233d","foundDecimal","$f5551de05cf979ce$export$c5b11520fab466f8","foundInteger","$f5551de05cf979ce$export$2bfb8a7e7a6a7330","matchingLocale","existingLocale","existingString","$f5551de05cf979ce$export$e0c05f913c9961bf","foundString","$f5551de05cf979ce$export$27b5b8f9a5b3e42d","$f5551de05cf979ce$export$3757620fa7a5bcee","existingPredicateValues","updatedValues","existingValue","matcher","$f5551de05cf979ce$export$6f5f9061e41e006a","$f5551de05cf979ce$export$e8147d70d202001","$f5551de05cf979ce$export$cff20c918e35d8c0","$f5551de05cf979ce$export$7a207f1882f38382","$f5551de05cf979ce$export$566174fa40823587","$f5551de05cf979ce$export$e5d5e1c1822b6e56","$f5551de05cf979ce$export$68dd22903d458048","$f5551de05cf979ce$export$52ec4556ca946d67","$f5551de05cf979ce$export$19e1f469ab272eb9","$f5551de05cf979ce$export$b5eaa16ddca64991","$f5551de05cf979ce$export$2a467e3c673e8d01","$f5551de05cf979ce$export$e2fdbc481dfcb5fc","$f5551de05cf979ce$export$cddd1a45b0476ae","builder","setter","getRemover","remover","addUrl","getAdder","addBoolean","addDate","addTime","addInteger","addStringNoLocale","addStringWithLocale","addNamedNode","addLiteral","addTerm","getSetter","setIri","setBoolean","setDate","setTime","setInteger","setStringNoLocale","setStringWithLocale","setNamedNode","setLiteral","removeUrl","removeIri","removeDatetime","removeDate","removeInteger","removeStringNoLocale","removeStringEnglish","$f5551de05cf979ce$export$52ab041f5a566027","removeStringWithLocale","removeNamedNode","removeLiteral","$f5551de05cf979ce$var$isAcr","linkedAccessResource","relTypeLinks","$f5551de05cf979ce$var$internal_fetchAcl","$f5551de05cf979ce$export$ddc44838dad3fb04","resourceAcl","fallbackAcl","$f5551de05cf979ce$var$internal_fetchResourceAcl","$f5551de05cf979ce$var$internal_fetchFallbackAcl","e","$f5551de05cf979ce$var$AclIsAcrError","aclSolidDataset","internal_accessTo","resourcePath","resourceUrl","pathname","containerPath","$f5551de05cf979ce$var$internal_getContainerPath","containerIri","origin","containerInfo","containerAcl","resourcePathWithoutTrailingSlash","lastIndexOf","$f5551de05cf979ce$var$internal_accessModeIriStrings","$f5551de05cf979ce$var$internal_setAcl","acl2","internal_acl","sourceResource","aclResource","$f5551de05cf979ce$var$internal_getAcr","$f5551de05cf979ce$var$hasAccessibleAcr","internal_acp","acr","$f5551de05cf979ce$var$internal_setAcr","$f5551de05cf979ce$var$internal_createControl","AccessControl","$f5551de05cf979ce$var$internal_getControlAll","withAccessControlResource","foundThings","explicitAccessControl","foundThing","implicitAccessControl","thingWithAccessControl","$f5551de05cf979ce$var$internal_setControl","$f5551de05cf979ce$var$internal_addPolicyUrl","policyUrl","$f5551de05cf979ce$var$internal_getPolicyUrlAll","$f5551de05cf979ce$var$internal_removePolicyUrl","$f5551de05cf979ce$var$internal_removePolicyUrlAll","$f5551de05cf979ce$var$internal_addMemberPolicyUrl","$f5551de05cf979ce$var$internal_getMemberPolicyUrlAll","$f5551de05cf979ce$var$internal_removeMemberPolicyUrlAll","$f5551de05cf979ce$var$internal_getInitialisedControl","resourceWithAcr","allControls","$f5551de05cf979ce$var$hasLinkedAcr","$f5551de05cf979ce$var$addAcrPolicyUrl$1","acrUrl","acrThing","$f5551de05cf979ce$var$addMemberAcrPolicyUrl$1","$f5551de05cf979ce$var$getAcrPolicyUrlAll$1","$f5551de05cf979ce$var$getMemberAcrPolicyUrlAll$1","$f5551de05cf979ce$var$removeAcrPolicyUrl$1","$f5551de05cf979ce$var$removeMemberAcrPolicyUrl$1","$f5551de05cf979ce$var$removeAcrPolicyUrlAll","$f5551de05cf979ce$var$removeMemberAcrPolicyUrlAll","$f5551de05cf979ce$var$addPolicyUrl$1","$f5551de05cf979ce$var$addMemberPolicyUrl$1","$f5551de05cf979ce$var$getPolicyUrlAll$1","policyUrlsByControl","uniquePolicyUrls","Set","policyUrls","add","from","$f5551de05cf979ce$var$getMemberPolicyUrlAll$1","memberPolicyUrlsByControl","$f5551de05cf979ce$var$removePolicyUrl$1","$f5551de05cf979ce$var$removeMemberPolicyUrl$1","updatedControls","$f5551de05cf979ce$var$internal_removeMemberPolicyUrl","$a92ec442860f76cf$var$COMPATIBLE_ENCODING_PATTERN","$a92ec442860f76cf$var$WS_TRIM_PATTERN","$a92ec442860f76cf$var$WS_CHAR_PATTERN","$a92ec442860f76cf$var$WS_FOLD_PATTERN","$a92ec442860f76cf$var$DELIMITER_PATTERN","$a92ec442860f76cf$var$WS_DELIMITER_PATTERN","$a92ec442860f76cf$var$TOKEN_PATTERN","$a92ec442860f76cf$var$STATE","$a92ec442860f76cf$var$trim","replace","$a92ec442860f76cf$var$hasWhitespace","$a92ec442860f76cf$var$skipWhitespace","offset","$a92ec442860f76cf$var$needsQuotes","$a92ec442860f76cf$var$Link","links","i","attr","set","link","has","state","expandRelations","indexOf","attrValue","isSingleOccurenceAttr","parseExtendedValue","link1","formatAttribute","isCompatibleEncoding","isTokenAttr","escapeQuotes","exec","encoding","decodeURIComponent","formatExtendedAttribute","toUpperCase","$a92ec442860f76cf$require$Buffer","isBuffer","encodeURIComponent","item","module","exports","$51861dfc7ca9d588$export$a143d493d941bafc","$51861dfc7ca9d588$export$e4cf37d7f6fb9e0a","$51861dfc7ca9d588$export$f99ded8fe4b79145","$51861dfc7ca9d588$export$599f31c3813fae4d","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$Buffer","alloc","$51861dfc7ca9d588$var$K_MAX_LENGTH","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","Uint8Array","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","string","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","$51861dfc7ca9d588$var$fromString","ArrayBuffer","isView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","buffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","SharedArrayBuffer","b","obj","len","$51861dfc7ca9d588$var$checked","$51861dfc7ca9d588$var$numberIsNaN","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","array","mustMatch","arguments","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","$51861dfc7ca9d588$var$slowToString","start","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","n","m","$51861dfc7ca9d588$var$bidirectionalIndexOf","dir","$51861dfc7ca9d588$var$arrayIndexOf","call","arr","i1","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","$51861dfc7ca9d588$var$hexWrite","remaining","strLen","parsed","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","str","byteArray","charCodeAt","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","c","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","$kuxul","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH","fromCharCode","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$51861dfc7ca9d588$var$typedArraySupport","console","defineProperty","enumerable","poolSize","fill","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","toLocaleString","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","bytes","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","BigInt","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$9NvM5","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","first","last","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","pow","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","sym","getMessage","Base","writable","configurable","stack","$51861dfc7ca9d588$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$51861dfc7ca9d588$var$checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","$51861dfc7ca9d588$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","$51861dfc7ca9d588$var$base64clean","src","dst","alphabet","table","i16","fn","$51861dfc7ca9d588$var$BufferBigIntNotDefined","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","b64","tmp","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","len2","$eeb0961446aae8e3$var$revLookup","uint8","len3","extraBytes","maxChunkLength","i3","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","len1","num","output","i2","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","log","LN2","$4SlQg","$h5GdX","$38cd25ee08f42900$var$DataFactory","$8i6Gl","languageOrDatatype","$6x09A","$eOizX","defaultGraphInstance","$jgv1Z","original","$6S8B1","$3glqU","$c713a824c84a1c60$var$BlankNode","id","nextId","other","$26037ddbf42d4824$var$DefaultGraph","fromTerm","variable","$4c15f1a1967c5f75$var$Literal","stringDatatype","langStringDatatype","$6095300d33adc66f$var$NamedNode","$e0679512d509534a$var$Quad","$ac842594278a4aa2$var$Variable","$kSCVb","$f3370abcfa154ed1$var$isString","$f3370abcfa154ed1$var$termToId","term","$f3370abcfa154ed1$var$escapeQuotes","$f3370abcfa154ed1$var$escapedLiteral","quoted","$f3370abcfa154ed1$var$DatasetCore","_size","_graphs","create","_id","_ids","_entities","_quads","Map","subjects","graphKey","subjectKey","predicateKey","graphItem","ids","entities","_addToIndex","_setQuad","delete","_removeFromIndex","_deleteQuad","subjectId","predicateId","objectId","_countInIndex","match","_createDataset","_match","iterator","index0","key0","key1","key2","index1","index2","existed","key","key3","_findInIndex","name0","name1","name2","value0","value1","l","_getQuad","_getGraphs","content","_toId","$h0LIu","$43688564e25805a8$var$IdentifierIssuer","$85rA0","IdentifierIssuer","expand","flatten","fromRDF","toRDF","$fm7xk","frameMergedOrDefault","cleanupNull","$guzPY","isObject","isString","isSubjectReference","expandIri","getInitialContext","process","processingMode","$gNObS","compact","compactIri","$8xjSk","createNodeMap","createMergedNodeMap","mergeNodeMaps","$43688564e25805a8$var$wrapper","jsonld","_rdfParsers","_resolvedContextCache","$bnToR","_setDefaults","documentLoader","defaults","ctx","$3Yszg","expanded","base","$43688564e25805a8$require$_isString","compactArrays","compactToRelative","skipExpansion","issuer","contextResolver","$iZefq","sharedCache","activeCtx","processContext","$43688564e25805a8$require$_getInitialContext","compacted","$43688564e25805a8$require$_compact","element","compactionMap","$43688564e25805a8$require$_isArray","$43688564e25805a8$require$_isObject","clone","hasContext","graphAlias","$43688564e25805a8$require$_compactIri","relativeTo","vocab","keepFreeFloatingNodes","expansionMap","toResolve","contextsToProcess","expandContext","defaultBase","remoteDoc","documentUrl","document","contextUrl","remoteContext","localCtx","$43688564e25805a8$require$_processContext","$43688564e25805a8$require$_expand","flattened","$43688564e25805a8$require$_flatten","frame","embed","explicit","requireAll","omitDefault","bnodesToClear","frameContext","hasOwnProperty","omitGraph","$43688564e25805a8$require$_processingMode","pruneBlankNodeIdentifiers","opts","isFrame","expandedFrame","frameKeys","$43688564e25805a8$require$_expandIri","merged","is11","framed","$43688564e25805a8$require$_frameMergedOrDefault","framing","$43688564e25805a8$require$_cleanupNull","normalize","canonize","algorithm","inputFormat","parsedInput","$fl0q4","produceGeneralizedRdf","rdfParser","parsedDataset","$43688564e25805a8$require$_fromRDF","$43688564e25805a8$require$_toRDF","serialize","$43688564e25805a8$require$_createMergedNodeMap","merge","docs","all","doc","mergeNodes","relabelBlankNodes","$43688564e25805a8$require$_createNodeMap","graphName","_nodeMap","nodeMap","$43688564e25805a8$require$_mergeNodeMaps","sort","ki","$43688564e25805a8$require$_isSubjectReference","_documentLoader","v","load","JSON","cause","getContextValue","documentLoaders","useDocumentLoader","registerRDFParser","unregisterRDFParser","util","promises","RequestQueue","JsonLdProcessor","$6a1Di","setupGlobals","setupDocumentLoaders","$43688564e25805a8$var$factory","$546e054bcbded652$var$rdfCanonizeNative","$546e054bcbded652$var$api","NQuads","_rdfCanonizeNative","api1","legacyDatasetToQuads","useNative","err","canonical","$dVoAc","main","$iA9G8","_canonizeSync","canonizeSync","$5mJZl","$1phhp","$a233aae309c9a4a7$var$_stringHashCompare","blankNodeInfo","canonicalIssuer","$dvul9","hashAlgorithm","_addBlankNodeQuadInfo","component","hashToBlankNodes","nonNormalized","_yield","_hashAndTrackBlankNode","hashes","nonUnique","idList","getId","hashPathList","hasId","hashNDegreeQuads","oldIds","getOldIds","normalized","quad1","q","_useCanonicalId","$73eeT","serializeQuad","nquads","info","modifyFirstDegreeComponent","md","$jnHNj","nquad","update","digest","related","position","getRelatedPredicate","hashToRelated","createHashToRelated","chosenIssuer","chosenPath","permuter","$9NKOE","hasNext","permutation","next","issuerCopy","path","recursionList","nextPermutation","related1","_addRelatedBlankNodeHash","hashFirstDegreeQuads","hashRelatedBlankNode","entries","startsWith","prefix","setImmediate","existing","counter","_existing","old","identifier","$e1c222f7be8e7b1f$var$crypto","self","crypto","msCrypto","subtle","_content","TextEncoder","encode","hex","$hPtJY","global","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","getPrototypeOf","setTimeout","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","addEventListener","attachEvent","Function","args","task","clearImmediate","run","$parcel$global","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","clearTimeout","e1","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$drainQueue","timeout","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","$cfae44f0dfdf62c0$var$noop","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","current","done","rval","k","left","swap","$5223dbd0087f468c$var$RDF_LANGSTRING","$5223dbd0087f468c$var$RDF","$5223dbd0087f468c$var$XSD_STRING","$5223dbd0087f468c$var$TYPE_NAMED_NODE","$5223dbd0087f468c$var$TYPE_BLANK_NODE","$5223dbd0087f468c$var$TYPE_LITERAL","$5223dbd0087f468c$var$TYPE_DEFAULT_GRAPH","$5223dbd0087f468c$var$REGEX","$5223dbd0087f468c$var$_compareTriples","t1","t2","eoln","empty","RegExp","static","lines","lineNumber","line","$5223dbd0087f468c$var$_unescapeRegex","u","U","unique","p","o","g","$5223dbd0087f468c$var$_escapeRegex","$5223dbd0087f468c$var$_escape","termTypeMap","IRI","triple","componentName","oldComponent","newComponent","$3e82ae2dde79bd24$var$_stringHashCompare","$47c4f177dafd4ca0$var$api","XMLHttpRequest","xhr","$a8tTH","globalThis","parseLinkHeader","buildHeaders","LINK_HEADER_CONTEXT","prependBase","$7611d7c0bb74b219$var$REGEX_LINK_HEADER","secure","$7611d7c0bb74b219$require$buildHeaders","$jUcZG","wrapLoader","loader","req","onload","onerror","open","setRequestHeader","send","$7611d7c0bb74b219$var$_get","httpStatusCode","alternate","getResponseHeader","getAllResponseHeaders","linkHeaders","$7611d7c0bb74b219$require$parseLinkHeader","linkedContext","$7611d7c0bb74b219$require$LINK_HEADER_CONTEXT","$7611d7c0bb74b219$require$prependBase","$5e342f1d64806412$var$REGEX_LINK_HEADERS","$5e342f1d64806412$var$REGEX_LINK_HEADER","$5e342f1d64806412$var$REGEX_LINK_HEADER_PARAMS","$5e342f1d64806412$var$DEFAULTS","accept","$5e342f1d64806412$var$api","$5e342f1d64806412$var$_labelBlankNodes","$dEapz","isList","isBlankNode","$5e342f1d64806412$require$IdentifierIssuer","asArray","h","params","validateTypeValue","vv","hasProperty","hasValue","compareValues","addValue","propertyIsArray","valueIsArray","allowDuplicate","prependValue","unshift","getValues","removeProperty","removeValue","v1","v2","isValue","compareShortestLeast","$9ef716440575f06a$var$api","isSubject","isGraph","isSimpleGraph","$c01b3f3a55bd5a5a$var$api","isBoolean","isDouble","isNumber","isEmptyObject","isNumeric","isUndefined","details","$2d87cf54a1d1402b$var$RDF","$2d87cf54a1d1402b$var$XSD","LINK_HEADER_REL","RDF_LIST","RDF_FIRST","RDF_REST","RDF_NIL","RDF_TYPE","RDF_PLAIN_LITERAL","RDF_XML_LITERAL","RDF_JSON_LITERAL","RDF_OBJECT","RDF_LANGSTRING","XSD_BOOLEAN","XSD_DOUBLE","XSD_INTEGER","XSD_STRING","_requests","_loader","promise","$8bf272ab5fb78311$var$api","simple","regex","full","scheme","port","authority","normalizedPath","removeDotSegments","isAbsolute","transform","protocol","query","fragment","removeBase","root","baseSegments","iriSegments","shift","pop","$8bf272ab5fb78311$var$isAbsoluteRegex","isRelative","$dd28f9ce8e24603a$var$_throwInvalidLocalContext","context","$dd28f9ce8e24603a$var$_resolveContextUrls","$dd28f9ce8e24603a$require$_isString","$dd28f9ce8e24603a$require$prependBase","$dd28f9ce8e24603a$require$_isArray","$dd28f9ce8e24603a$require$_isObject","perOpCache","cycles","$dd28f9ce8e24603a$require$_asArray","allResolved","resolved","_get","_resolveRemoteContext","$bXSXW","stringify","_cacheResolvedContext","tag","tagMap","_fetchContext","cache","getProcessed","setProcessed","processedCtx","$849cd0fb8cde656f$var$MAX","$849cd0fb8cde656f$var$LENGTH","$849cd0fb8cde656f$var$LENGTH_CALCULATOR","$849cd0fb8cde656f$var$ALLOW_STALE","$849cd0fb8cde656f$var$MAX_AGE","$849cd0fb8cde656f$var$DISPOSE","$849cd0fb8cde656f$var$NO_DISPOSE_ON_SET","$849cd0fb8cde656f$var$LRU_LIST","$849cd0fb8cde656f$var$CACHE","$849cd0fb8cde656f$var$UPDATE_AGE_ON_GET","$849cd0fb8cde656f$var$naiveLength","$849cd0fb8cde656f$var$get","doUse","hit","$849cd0fb8cde656f$var$isStale","$849cd0fb8cde656f$var$del","unshiftNode","maxAge","diff","$849cd0fb8cde656f$var$trim","walker","tail","prev","removeNode","$849cd0fb8cde656f$var$Entry","$849cd0fb8cde656f$var$forEachStep","thisp","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","itemCount","rforEach","head","toArray","$5qBd4","dump","dumpLru","peek","del","expiresAt","prune","$3f3c3e91d91e9f6c$var$Yallist","$3f3c3e91d91e9f6c$var$insert","inserted","$3f3c3e91d91e9f6c$var$Node","$3f3c3e91d91e9f6c$var$push","$3f3c3e91d91e9f6c$var$unshift","Node","pushNode","forEachReverse","getReverse","mapReverse","initial","acc","reduceReverse","toArrayReverse","to","sliceReverse","splice","deleteCount","reverse","er","Yallist","$frGHZ","isKeyword","$75622473fe511ab8$var$api","$75622473fe511ab8$var$REGEX_BCP47","$75622473fe511ab8$var$_expandObject","activeProperty","expandedActiveProperty","expandedParent","insideList","typeKey","typeScopedContext","nests","unexpandedValue","isJsonType","$75622473fe511ab8$require$_expandIri","$75622473fe511ab8$require$_isArray","expandedValue","expandedProperty","$75622473fe511ab8$require$_isAbsoluteIri","$75622473fe511ab8$require$_isKeyword","unmappedProperty","parent","keyword","$75622473fe511ab8$require$_isString","$75622473fe511ab8$require$_isObject","$75622473fe511ab8$require$_isEmptyObject","$75622473fe511ab8$require$_addValue","$75622473fe511ab8$require$_asArray","fromEntries","$75622473fe511ab8$require$_validateTypeValue","$75622473fe511ab8$require$_processingMode","includedResult","$75622473fe511ab8$require$_isSubject","lang","warn","reverseMap","property1","items","ii","$75622473fe511ab8$require$_isValue","$75622473fe511ab8$require$_isList","termCtx","$75622473fe511ab8$require$_getContextValue","$75622473fe511ab8$require$_isUndefined","$75622473fe511ab8$require$_processContext","propagate","overrideProtected","container","$75622473fe511ab8$var$_expandLanguageMap","asGraph","indexKey","propertyIndex","$75622473fe511ab8$var$_expandIndexMap","revertToPreviousContext","nextActiveProperty","unmappedValue","mappings","nestedValues","nv","$75622473fe511ab8$var$_expandValue","direction","languageMap","expandedKey","isTypeIndex","insideIndex","$75622473fe511ab8$require$_isGraph","mapped","index","propertyScopedCtx","previousContext","mustRevert","types","validCount","$75622473fe511ab8$require$_getValues","t","$c0VXR","$b3ea81a761e6fbf7$var$INITIAL_CONTEXT_CACHE","$b3ea81a761e6fbf7$var$KEYWORD_PATTERN","$b3ea81a761e6fbf7$var$api","$b3ea81a761e6fbf7$var$_expandIri","defined","$b3ea81a761e6fbf7$require$_isString","createTermDefinition","mapping","$b3ea81a761e6fbf7$require$_isObject","colon","suffix","_prefix","$b3ea81a761e6fbf7$require$_isAbsoluteIri","$b3ea81a761e6fbf7$require$prependBase","$b3ea81a761e6fbf7$var$_deepCompare","x1","x2","x1Array","k1s","k2s","k1","$b3ea81a761e6fbf7$require$_isArray","$b3ea81a761e6fbf7$require$_asArray","resolvedContext","protected","protectedMode","processed","oldActiveCtx","_protected","$b3ea81a761e6fbf7$require$_isRelativeIri","resolvedImport","processedImport","importCtx","keyCtx","validKeys","previousMapping","simpleTerm","kw","_termHasColon","validContainers","isValid","hasSet","nest","cached","initialContext","inverse","getInverse","fastCurieMap","irisToTerms","defaultLanguage","defaultDirection","terms","$b3ea81a761e6fbf7$require$_compareShortestLeast","entry","fastCurieEntry","_addPreferredTerm","_buildIriMap","child","clear","iriMap","idx","letter","typeOrLanguageValue","$b3ea81a761e6fbf7$require$_isUndefined","$6a65df15a26639fd$var$api","$6a65df15a26639fd$require$_createMergedNodeMap","$6a65df15a26639fd$require$_isSubjectReference","$6370d2986ab510d0$var$api","_list","types1","properties","referencedNode","reverseProperty","itemName","$6370d2986ab510d0$require$isKeyword","mergeNodeMapGraphs","mergedNode","graphNames","$3Umbt","$169e397170541d7e$var$REGEX_BCP47","$169e397170541d7e$var$api","$169e397170541d7e$var$_RDFToObject","useNativeTypes","rdfDirection","$169e397170541d7e$require$XSD_STRING","$169e397170541d7e$require$RDF_JSON_LITERAL","$169e397170541d7e$require$XSD_BOOLEAN","$169e397170541d7e$require$XSD_INTEGER","toFixed","$169e397170541d7e$require$XSD_DOUBLE","useRdfType","graphMap","referencedOnce","objectIsNode","$169e397170541d7e$require$RDF_TYPE","$169e397170541d7e$require$RDF_NIL","usages","graphObject","nil","usage","listNodes","nodeKeyCount","$169e397170541d7e$require$RDF_REST","$169e397170541d7e$require$RDF_FIRST","$169e397170541d7e$require$RDF_LIST","listNode","graphSubjects","graphSubject","$ed0d74f38fa51c71$var$api","$ed0d74f38fa51c71$var$_graphToRDF","graphTerm","$ed0d74f38fa51c71$require$RDF_TYPE","$ed0d74f38fa51c71$require$isKeyword","$ed0d74f38fa51c71$require$_isAbsoluteIri","$ed0d74f38fa51c71$var$_objectToRDF","$kRKFi","$ed0d74f38fa51c71$require$RDF_JSON_LITERAL","$ed0d74f38fa51c71$require$XSD_BOOLEAN","$ed0d74f38fa51c71$require$XSD_DOUBLE","toExponential","$ed0d74f38fa51c71$require$XSD_INTEGER","$ed0d74f38fa51c71$require$RDF_LANGSTRING","$ed0d74f38fa51c71$require$XSD_STRING","$ed0d74f38fa51c71$require$RDF_FIRST","$ed0d74f38fa51c71$require$RDF_REST","$ed0d74f38fa51c71$require$RDF_NIL","$ed0d74f38fa51c71$var$_listToRDF","$ed0d74f38fa51c71$require$createNodeMap","cv","ci","$b2dec1ae0e894aa1$var$api","$b2dec1ae0e894aa1$var$_createImplicitFrame","flags","$b2dec1ae0e894aa1$var$_createsCircularReference","subjectToEmbed","subjectStack","$b2dec1ae0e894aa1$var$_getFrameFlag","flag","$b2dec1ae0e894aa1$var$_validateFrame","$b2dec1ae0e894aa1$var$_filterSubject","wildcard","matchesSome","matchThis","nodeValues","isEmpty","tt","$b2dec1ae0e894aa1$require$isKeyword","thisFrame","hasDefault","listValue","nodeListValues","lv","$b2dec1ae0e894aa1$var$_valueMatch","$b2dec1ae0e894aa1$var$_nodeMatch","$b2dec1ae0e894aa1$var$_removeEmbed","id1","embeds","uniqueEmbeds","useArray","removeDependents","$b2dec1ae0e894aa1$var$_cleanupPreserve","prop","$b2dec1ae0e894aa1$var$_addFrameOutput","pattern","nodeObject","l1","l2","embedded","bnodeMap","$b2dec1ae0e894aa1$require$_createNodeMap","$b2dec1ae0e894aa1$require$_mergeNodeMapGraphs","matches","$b2dec1ae0e894aa1$var$_filterSubjects","recurse","subframe","oo","prop1","preserve","reverseProp","$c3b827c049e15e62$var$api","$c3b827c049e15e62$var$_checkNestProperty","nestProperty","$c3b827c049e15e62$require$_expandIri","$c3b827c049e15e62$require$_isArray","$c3b827c049e15e62$require$_getContextValue","$c3b827c049e15e62$require$_isUndefined","$c3b827c049e15e62$require$_processContext","$c3b827c049e15e62$require$_isObject","linked","$c3b827c049e15e62$require$_isValue","$c3b827c049e15e62$require$_isSubjectReference","compactValue","$c3b827c049e15e62$require$_isList","insideReverse","inputCtx","typeContext","compactedType","$c3b827c049e15e62$require$_isKeyword","alias","$c3b827c049e15e62$require$_addValue","itemActiveProperty","nestResult","expandedItem","$c3b827c049e15e62$require$_isGraph","inner","compactedItem","$c3b827c049e15e62$require$_isSimpleGraph","mapObject","containerKey","others","$c3b827c049e15e62$require$_asArray","$c3b827c049e15e62$require$_isString","idKey","compactedValue","compactedProperty","expandedIri","$c3b827c049e15e62$require$_processingMode","isPropertyTermScoped","inverseCtx","containers","typeOrLanguage","commonLanguage","commonType","itemLanguage","itemType","prefs","langDir","el","containerMap","typeOrLanguageValueMap","pref","$c3b827c049e15e62$var$_selectTerm","choice","partialMatches","maxPartialLength","curie","$c3b827c049e15e62$require$_compareShortestLeast","td","$c3b827c049e15e62$require$_removeBase","$c3b827c049e15e62$require$_prependBase","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","$h2ahN","$fbuSB","$9fLRg","$7XsD3","$9IttL","Term","NamedNode","Literal","BlankNode","Variable","DefaultGraph","Quad","Triple","termFromId","termToId","$fxKRq","xsd","$c66a9a29d2de1131$var$xsd","$c66a9a29d2de1131$var$escapeSequence","$c66a9a29d2de1131$var$escapeReplacements","r","f","$","$c66a9a29d2de1131$var$illegalIriChars","$c66a9a29d2de1131$var$lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","$c66a9a29d2de1131$var$invalidRegExp","$c66a9a29d2de1131$export$2e2bcd8739ae039","_simpleApostropheString","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","n3","_comments","comments","_literalClosingPos","_tokenizeToEnd","inputFinished","_input","currentLineLength","whiteSpaceMatch","comment","emitToken","_line","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","double","decimal","integer","boolean","token","previousToken","_syntaxError","invalid","replaced","sequence","unicode4","unicode8","escapedChar","charCode","opening","openingLength","closingPos","backslashCount","raw","issue","_readStartingBom","tokenize","tokens","$8q08W","_pendingBuffer","setEncoding","$c66a9a29d2de1131$require$Buffer","$b50e49a75dcd9196$var$RDF","$b50e49a75dcd9196$var$XSD","$b50e49a75dcd9196$var$SWAP","$b50e49a75dcd9196$export$2e2bcd8739ae039","rdf","owl","sameAs","forSome","forAll","implies","$6210dce35be42a6b$var$promise","queueMicrotask","bind","window","cb","then","catch","$c0715e6442e25456$var$blankNodePrefix","$c0715e6442e25456$export$2e2bcd8739ae039","_contextStack","_graph","_setBase","factory","$c0715e6442e25456$var$initDataFactory","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","_saveContext","n3Mode","_inversePredicate","blankPrefix","quantified","_quantified","_restoreContext","_error","_subject","_predicate","_object","_readInTopContext","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_readEntity","quantifier","_resolveIRI","_namedNode","_blankNode","_readBlankNodeHead","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","_readPredicateAfterBlank","previousList","_readListItemDataTypeOrLang","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","_readFormulaTail","inversePredicate","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","DEFAULTGRAPH","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTailOrGraph","_readRDFStarTail","_quad","contextStack","$c0715e6442e25456$var$noop","_removeDotSegments","pathStart","segmentStart","quadCallback","prefixCallback","$712f170b9f5279d6$var$rdf","$712f170b9f5279d6$var$xsd","$712f170b9f5279d6$var$DEFAULTGRAPH","$712f170b9f5279d6$var$_blankNodeCounter","$712f170b9f5279d6$var$escapedLiteral","$712f170b9f5279d6$var$quadId","$712f170b9f5279d6$var$DataFactory","$712f170b9f5279d6$export$e55689a56c4c92c2","$712f170b9f5279d6$export$1a8019c085269883","$712f170b9f5279d6$export$c867a5c9595a1350","languageOrDataType","$712f170b9f5279d6$export$e175ae9e414693bc","$712f170b9f5279d6$var$quad","$712f170b9f5279d6$export$2e2bcd8739ae039","$712f170b9f5279d6$export$656c1e606ad06131","hashCode","atPos","datatypeString","dtPos","char","$712f170b9f5279d6$export$4383f89a7161b240","$712f170b9f5279d6$export$85285e91bbd99cf","endPos","components","$712f170b9f5279d6$export$7cedbcd33d1bf915","$712f170b9f5279d6$export$fbf03d1179c9227e","$712f170b9f5279d6$export$3ff8cecf0aa87c28","$i8o3K","isDefaultGraph","$712f170b9f5279d6$export$7005c9eb6671414d","$d33ba30d5e9a7819$export$10490ce738f72284","$d33ba30d5e9a7819$export$7b5b4967656acaac","$d33ba30d5e9a7819$export$899158ea22bb4609","$d33ba30d5e9a7819$export$670a0c046e2ed227","$d33ba30d5e9a7819$export$1a29e0fa6b36b0c8","$d33ba30d5e9a7819$export$be8c4434e9c7c90b","$d33ba30d5e9a7819$export$82e9f45cca5ba907","$d33ba30d5e9a7819$export$5d3c3f85c29a375","defaultPrefixes","prefixes1","prefix1","processPrefix","prefix2","local","$bab8cb0a961d0e7d$var$DEFAULTGRAPH","$bab8cb0a961d0e7d$var$rdf","$bab8cb0a961d0e7d$var$xsd","$bab8cb0a961d0e7d$var$escape","$bab8cb0a961d0e7d$var$escapeAll","$bab8cb0a961d0e7d$var$escapedCharacters","$bab8cb0a961d0e7d$var$SerializedTerm","$bab8cb0a961d0e7d$export$2e2bcd8739ae039","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","chunk","_writeQuad","_writeQuadLine","_prefixIRIs","prefixes","addPrefixes","_baseMatcher","$bab8cb0a961d0e7d$var$escapeRegex","_baseLength","_inDefaultGraph","_write","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","quadsToString","_encodeQuad","$bab8cb0a961d0e7d$var$characterReplacer","prefixMatch","_encodeLiteral","_blockedWrite","addQuad","addQuads","addPrefix","hasPrefixes","IRIlist","prefixList","prefixIRI","blank","children","contents","elements","singleDone","character","$b0dfd6227adaa9e6$export$2e2bcd8739ae039","_blankNodeIndex","_factory","entityKeys","_loop","_loopByKey0","_loopByKey1","_loopBy2Keys","$b0dfd6227adaa9e6$var$isString","_uniqueEntities","uniqueIds","changed","removeQuad","subjectOrQuad","readQuads","import","stream","removeQuads","remove","removeMatches","$b6RFW","Readable","objectMode","_read","deleteGraph","getQuads","$b0dfd6227adaa9e6$var$DatasetCoreAndReadableStream","countQuads","getSubjects","results","forSubjects","getPredicates","forPredicates","getObjects","forObjects","getGraphs","forGraphs","createBlankNode","suggestedName","extractLists","ignoreErrors","tails","toRemove","tailQuad","headPos","malformed","objectQuads","subjectQuads","n3Store","filtered","_filtered","newStore","Stream","Writable","Duplex","Transform","PassThrough","finished","pipeline","$9845726cca5dc7eb$var$Duplex","$9845726cca5dc7eb$var$Readable","ReadableState","$9845726cca5dc7eb$var$ReadableState","EventEmitter","$9845726cca5dc7eb$var$EElistenerCount","emitter","Buffer","$9845726cca5dc7eb$var$OurUint8Array","$9845726cca5dc7eb$var$debug","$kjyEk","debuglog","$9845726cca5dc7eb$var$StringDecoder","$9845726cca5dc7eb$var$createReadableStreamAsyncIterator","$9845726cca5dc7eb$var$from","$9845726cca5dc7eb$var$getHighWaterMark","getHighWaterMark","codes","$9845726cca5dc7eb$var$ERR_INVALID_ARG_TYPE","$9845726cca5dc7eb$require$_require$codes","$9845726cca5dc7eb$var$ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_PUSH_AFTER_EOF","$9845726cca5dc7eb$var$ERR_METHOD_NOT_IMPLEMENTED","ERR_METHOD_NOT_IMPLEMENTED","$9845726cca5dc7eb$var$ERR_STREAM_UNSHIFT_AFTER_END_EVENT","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","$jfAlf","$9845726cca5dc7eb$var$errorOrDestroy","$fMCbt","errorOrDestroy","$9845726cca5dc7eb$var$kProxyEvents","isDuplex","readableObjectMode","highWaterMark","$bF5dL","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","destroyed","defaultEncoding","awaitDrain","readingMore","decoder","StringDecoder","_readableState","readable","destroy","_destroy","$9845726cca5dc7eb$var$readableAddChunk","addToFront","skipChunkCheck","$9845726cca5dc7eb$var$emitReadable","$9845726cca5dc7eb$var$emitReadable_","$9845726cca5dc7eb$var$onEofChunk","$9845726cca5dc7eb$require$Buffer","$9845726cca5dc7eb$var$chunkInvalid","$9845726cca5dc7eb$var$_uint8ArrayToBuffer","$9845726cca5dc7eb$var$addChunk","$9845726cca5dc7eb$var$maybeReadMore","_undestroy","undestroy","isPaused","enc","$9845726cca5dc7eb$var$MAX_HWM","$9845726cca5dc7eb$var$howMuchToRead","$9845726cca5dc7eb$var$computeNewHighWaterMark","$9845726cca5dc7eb$var$flow","$9845726cca5dc7eb$var$maybeReadMore_","$9845726cca5dc7eb$var$updateReadableListening","listenerCount","resume","$9845726cca5dc7eb$var$nReadingNextTick","$9845726cca5dc7eb$var$resume_","$9845726cca5dc7eb$var$fromList","consume","$9845726cca5dc7eb$var$endReadable","$9845726cca5dc7eb$var$endReadableNT","wState","_writableState","$9845726cca5dc7eb$var$indexOf","xs","nOrig","doRead","pipe","dest","pipeOpts","endFn","stdout","stderr","onend","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","$9845726cca5dc7eb$var$pipeOnDrain","pause","_events","$9845726cca5dc7eb$var$prependListener","dests","ev","$9845726cca5dc7eb$var$resume","wrap","_this","n1","asyncIterator","_fromList","iterable","$5440e9199a418654$var$ReflectOwnKeys","$5440e9199a418654$var$R","Reflect","$5440e9199a418654$var$ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","$5440e9199a418654$var$NumberIsNaN","$5440e9199a418654$var$EventEmitter","errorListener","resolver","$5440e9199a418654$var$eventTargetAgnosticAddListener","handler","$5440e9199a418654$var$addErrorHandlerIfEventEmitter","_eventsCount","_maxListeners","$5440e9199a418654$var$defaultMaxListeners","$5440e9199a418654$var$checkListener","listener","$5440e9199a418654$var$_getMaxListeners","that","defaultMaxListeners","$5440e9199a418654$var$_addListener","prepend","events","warning","newListener","warned","w","$5440e9199a418654$var$onceWrapper","fired","wrapFn","$5440e9199a418654$var$_onceWrap","wrapped","$5440e9199a418654$var$_listeners","unwrap","evlistener","$5440e9199a418654$var$unwrapListeners","$5440e9199a418654$var$arrayClone","$5440e9199a418654$var$listenerCount","wrapListener","removeEventListener","setMaxListeners","getMaxListeners","doError","originalListener","$5440e9199a418654$var$spliceOne","rawListeners","eventNames","$87d792cd1b95f90e$var$ownKeys","enumerableOnly","symbols","getOwnPropertyDescriptor","$87d792cd1b95f90e$var$_defineProperty","$87d792cd1b95f90e$var$_defineProperties","props","descriptor","$87d792cd1b95f90e$var$Buffer","$87d792cd1b95f90e$var$inspect","$87d792cd1b95f90e$var$custom","custom","BufferList","instance","Constructor","$87d792cd1b95f90e$var$_classCallCheck","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","getOwnPropertyDescriptors","defineProperties","$87d792cd1b95f90e$var$_objectSpread","depth","customInspect","$b7d8f541ca4a3ff5$var$emitErrorAndCloseNT","$b7d8f541ca4a3ff5$var$emitErrorNT","$b7d8f541ca4a3ff5$var$emitCloseNT","err1","readableDestroyed","writableDestroyed","errorEmitted","ending","finalCalled","prefinished","rState","$00c82cf8dac417cf$var$ERR_INVALID_OPT_VALUE","ERR_INVALID_OPT_VALUE","duplexKey","hwm","$00c82cf8dac417cf$var$highWaterMarkFrom","$4e720097bc0bc9d8$export$e45cb6485273080e","$4e720097bc0bc9d8$var$codes","$4e720097bc0bc9d8$var$createErrorType","NodeError1","_Base","subClass","superClass","NodeError","arg1","arg2","arg3","__proto__","$4e720097bc0bc9d8$var$oneOf","expected","determiner","search","this_len","$4e720097bc0bc9d8$var$endsWith","$4e720097bc0bc9d8$var$includes","ctor","superCtor","super_","TempCtor","$076d08b0309449dc$var$objectKeys","keys1","$076d08b0309449dc$var$Duplex","$d4xg3","$076d08b0309449dc$var$keys","$3LwY7","$076d08b0309449dc$var$v","$076d08b0309449dc$var$method","allowHalfOpen","$076d08b0309449dc$var$onend","$076d08b0309449dc$var$onEndNT","getBuffer","$2bdf55c2c4f390d3$var$Duplex","$2bdf55c2c4f390d3$var$CorkedRequest","finish","corkReq","pendingcb","corkedRequestsFree","$2bdf55c2c4f390d3$var$onCorkedFinish","$2bdf55c2c4f390d3$var$Writable","WritableState","$2bdf55c2c4f390d3$var$WritableState","$2bdf55c2c4f390d3$var$internalUtil","deprecate","$2bdf55c2c4f390d3$var$OurUint8Array","$2bdf55c2c4f390d3$var$realHasInstance","$2bdf55c2c4f390d3$var$getHighWaterMark","$2bdf55c2c4f390d3$var$ERR_INVALID_ARG_TYPE","$2bdf55c2c4f390d3$require$_require$codes","$2bdf55c2c4f390d3$var$ERR_METHOD_NOT_IMPLEMENTED","$2bdf55c2c4f390d3$var$ERR_MULTIPLE_CALLBACK","ERR_MULTIPLE_CALLBACK","$2bdf55c2c4f390d3$var$ERR_STREAM_CANNOT_PIPE","ERR_STREAM_CANNOT_PIPE","$2bdf55c2c4f390d3$var$ERR_STREAM_DESTROYED","ERR_STREAM_DESTROYED","$2bdf55c2c4f390d3$var$ERR_STREAM_NULL_VALUES","ERR_STREAM_NULL_VALUES","$2bdf55c2c4f390d3$var$ERR_STREAM_WRITE_AFTER_END","ERR_STREAM_WRITE_AFTER_END","$2bdf55c2c4f390d3$var$ERR_UNKNOWN_ENCODING","ERR_UNKNOWN_ENCODING","$2bdf55c2c4f390d3$var$errorOrDestroy","$2bdf55c2c4f390d3$var$nop","writableObjectMode","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","$2bdf55c2c4f390d3$var$onwriteStateUpdate","$2bdf55c2c4f390d3$var$finishMaybe","$2bdf55c2c4f390d3$var$onwriteError","$2bdf55c2c4f390d3$var$needFinish","bufferedRequest","$2bdf55c2c4f390d3$var$clearBuffer","$2bdf55c2c4f390d3$var$afterWrite","$2bdf55c2c4f390d3$var$onwrite","lastBufferedRequest","bufferedRequestCount","writev","_writev","final","_final","$2bdf55c2c4f390d3$var$doWrite","$2bdf55c2c4f390d3$var$onwriteDrain","holder","allBuffers","isBuf","$2bdf55c2c4f390d3$var$callFinal","need","$2bdf55c2c4f390d3$var$prefinish","hasInstance","$2bdf55c2c4f390d3$require$Buffer","$2bdf55c2c4f390d3$var$_uint8ArrayToBuffer","$2bdf55c2c4f390d3$var$writeAfterEnd","$2bdf55c2c4f390d3$var$validChunk","newChunk","$2bdf55c2c4f390d3$var$decodeChunk","$2bdf55c2c4f390d3$var$writeOrBuffer","cork","uncork","setDefaultEncoding","$2bdf55c2c4f390d3$var$endWritable","$24ba9cfc39d77116$var$config","localStorage","trace","$ac6f3d51130904be$export$63a7aa211a91ed69","$ac6f3d51130904be$var$isEncoding","$ac6f3d51130904be$require$Buffer","$ac6f3d51130904be$var$StringDecoder","nenc","retried","$ac6f3d51130904be$var$_normalizeEncoding","$ac6f3d51130904be$var$normalizeEncoding","$ac6f3d51130904be$var$utf16Text","$ac6f3d51130904be$var$utf16End","fillLast","$ac6f3d51130904be$var$utf8FillLast","$ac6f3d51130904be$var$base64Text","$ac6f3d51130904be$var$base64End","$ac6f3d51130904be$var$simpleWrite","$ac6f3d51130904be$var$simpleEnd","lastNeed","lastTotal","lastChar","$ac6f3d51130904be$var$utf8CheckByte","byte","$ac6f3d51130904be$var$utf8CheckExtraBytes","total","$ac6f3d51130904be$var$utf8CheckIncomplete","$6ZWSX","$1632896ed805433d$var$Buffer","$1632896ed805433d$var$copyProps","$1632896ed805433d$var$SafeBuffer","SlowBuffer","$21db958e3a099d7d$var$_Object$setPrototypeO","$21db958e3a099d7d$var$_defineProperty","$21db958e3a099d7d$var$kLastResolve","$21db958e3a099d7d$var$kLastReject","$21db958e3a099d7d$var$kError","$21db958e3a099d7d$var$kEnded","$21db958e3a099d7d$var$kLastPromise","$21db958e3a099d7d$var$kHandlePromise","$21db958e3a099d7d$var$kStream","$21db958e3a099d7d$var$createIterResult","$21db958e3a099d7d$var$readAndResolve","iter","$21db958e3a099d7d$var$onReadable","$21db958e3a099d7d$var$AsyncIteratorPrototype","$21db958e3a099d7d$var$ReadableStreamAsyncIteratorPrototype","lastPromise","$21db958e3a099d7d$var$wrapForNext","_this2","_Object$create","$fiCvv","$b236683171fcb6ee$var$ERR_STREAM_PREMATURE_CLOSE","ERR_STREAM_PREMATURE_CLOSE","$b236683171fcb6ee$var$noop","$b236683171fcb6ee$var$eos","called","_len","_key","$b236683171fcb6ee$var$once","onlegacyfinish","writableEnded","readableEnded","onrequest","setHeader","abort","$b236683171fcb6ee$var$isRequest","$8180203f7f0d3074$var$Transform","$8180203f7f0d3074$var$ERR_METHOD_NOT_IMPLEMENTED","$8180203f7f0d3074$require$_require$codes","$8180203f7f0d3074$var$ERR_MULTIPLE_CALLBACK","$8180203f7f0d3074$var$ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_ALREADY_TRANSFORMING","$8180203f7f0d3074$var$ERR_TRANSFORM_WITH_LENGTH_0","ERR_TRANSFORM_WITH_LENGTH_0","$8180203f7f0d3074$var$afterTransform","ts","_transformState","transforming","writechunk","rs","$DwJuQ","afterTransform","needTransform","writeencoding","_transform","flush","_flush","$8180203f7f0d3074$var$prefinish","$8180203f7f0d3074$var$done","err2","$34c74be520d619f2$var$PassThrough","$b7kl8","$7c881fce7a4fadf1$var$eos","$7c881fce7a4fadf1$var$ERR_MISSING_ARGS","$7c881fce7a4fadf1$require$_require$codes","ERR_MISSING_ARGS","$7c881fce7a4fadf1$var$ERR_STREAM_DESTROYED","$7c881fce7a4fadf1$var$noop","$7c881fce7a4fadf1$var$destroyer","$7c881fce7a4fadf1$var$once","closed","$7c881fce7a4fadf1$var$isRequest","$7c881fce7a4fadf1$var$call","$7c881fce7a4fadf1$var$pipe","$7c881fce7a4fadf1$var$popCallback","streams","destroys","$6bcaa36986f53a11$export$2e2bcd8739ae039","onData","onEnd","$5cb440355f51fa91$export$2e2bcd8739ae039","_writer","__self__","F","DOMException","support","Blob","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","Headers","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","readAsText","chars","readArrayBufferAsText","formData","decode","json","oldValue","thisArg","methods","Request","upcased","credentials","mode","signal","referrer","form","bodyInit","redirectStatuses","redirect","request","aborted","abortXhr","rawHeaders","responseURL","responseText","ontimeout","onabort","withCredentials","responseType","readyState","polyfill","ponyfill"],"version":3,"file":"edit.cf919d03.js.map"}